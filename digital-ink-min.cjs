"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("js-ext"),require("js-md5"),require("long");var e=require("gl-matrix");require("clipper-lib");var t=require("rbush");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("poly2tri"),require("protobufjs");var r=i(t);class s{getInkBuilder(e){throw new Error("InkController.getInkBuilder(pointerID) should be implemented")}registerInputProvider(e,t){throw new Error("InkController.registerInputProvider(pointerID, isPrimary) should be implemented")}reset(e){throw new Error("InkController.reset(sensorPoint) should be implemented")}begin(e){throw new Error("InkController.begin(sensorPoint) should be implemented")}move(e){throw new Error("InkController.move(sensorPoint) should be implemented")}end(e){throw new Error("InkController.end(sensorPoint) should be implemented")}abort(e){throw new Error("InkController.abort(pointerID) should be implemented")}resize(){throw new Error("InkController.resize() should be implemented")}}Object.defineProperty(globalThis,"DIGITAL_INK_ENV",{value:"AUTO",enumerable:!0,configurable:!0});let n,o={version:"1.3.0"};Object.defineEnum(o,"Type",["WEB","WORKER","NODE","SHELL"]),Object.defineEnum(o,"Type2D",["SCREEN","OFFSCREEN"]),Object.defineEnum(o,"TypeGL",["WEB","STACK"]),function(e){let t,i="BROWSER"!=DIGITAL_INK_ENV&&"object"==typeof process&&"function"==typeof require;t="object"==typeof window?"WEB":"function"==typeof importScripts?"WORKER":i?"NODE":"SHELL";let r="undefined"==typeof OffscreenCanvas?"OFFSCREEN":"SCREEN",s="undefined"==typeof WebGLRenderingContext?"STACK":"WEB";Object.defineProperty(o,"commonJS",{value:i,enumerable:!0}),Object.defineProperty(o,"type",{value:o.Type[t],enumerable:!0}),Object.defineProperty(o,"type2D",{value:o.Type2D[r],enumerable:!0}),Object.defineProperty(o,"typeGL",{value:o.TypeGL[s],enumerable:!0})}(),n=o.commonJS?require("js-md5"):globalThis.md5;var a=n;let l;l=o.commonJS?require("long"):globalThis.Long;var h=l;let d={mask:"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx",generate(){let e=Date.now();return this.mask.replace(/[xy]/g,(function(t){let i=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"==t?i:3&i|8).toString(16)}))},fromString(e){return this.fromBytes(new Uint8Array(a.arrayBuffer(e)))},toBytes(e){let t=[];return e.split("-").map(((e,i)=>{(i<3?e.match(/.{1,2}/g).reverse():e.match(/.{1,2}/g)).map((e=>t.push(parseInt(e,16))))})),new Uint8Array(t)},fromBytes(e){let t=Array.from(e).map((e=>e.toString(16))).map((e=>(1==e.length?"0":"")+e));return t.slice(0,4).reverse().join("")+"-"+t.slice(4,6).reverse().join("")+"-"+t.slice(6,8).reverse().join("")+"-"+t.slice(8,10).join("")+"-"+t.slice(10).join("")},toUint32Array(e){let t=new Uint32Array(4),i=this.toBytes(e);return t[0]=new Uint32Array(i.slice(0,4).buffer)[0],t[1]=new Uint32Array(i.slice(4,8).buffer)[0],t[2]=new Uint32Array(i.slice(8,12).buffer)[0],t[3]=new Uint32Array(i.slice(12).buffer)[0],t},fromUint32Array(e){return this.fromBytes(new Uint8Array(e.buffer))},toUint64Array(e){let t=new BigUint64Array(2),i=this.toBytes(e);return t[0]=new BigUint64Array(i.slice(0,8).buffer)[0],t[1]=new BigUint64Array(i.slice(8).buffer)[0],t},fromUint64Array(e){return this.fromBytes(new Uint8Array(e.buffer))},toLongArray(e){let t=new Array(2),i=this.toBytes(e);return t[0]=h.fromBytes(i.slice(0,8)),t[1]=h.fromBytes(i.slice(8)),t},fromLongArray(e){let t=e[0].toBytes().concat(e[1].toBytes());return this.fromBytes(t)}};class u{static get SEPARATOR(){return"\n"}constructor(e){Object.defineProperty(this,"id",{get:function(){return e||(e=this.resolveID()),e},set:function(t){let i=e;e=t,this.updateID(i,e)},enumerable:!0}),Object.defineProperty(this,"algorithm",{get:()=>"function"==typeof this.getMD5Message?u.Algorithm.MD5:u.Algorithm.GUID,enumerable:!0})}resolveID(){if(this.algorithm==u.Algorithm.MD5){let e="",t=this.getMD5Message();for(let i of t){if(Array.isArray(i))for(let t of i)e+=t,e+="\n";else e+=i;e+="\n"}if(!e)throw new Error("Empty MD5 message container found");return a(e)}return d.generate()}updateID(e,t){}invalidateID(){this.id=void 0}static getMD5Tokens(e){let t=[];return Object.keys(e).sort().forEach((i=>t.push(i,e[i]))),t}}Object.defineEnum(u,"Algorithm",["GUID","MD5"]);class c extends u{constructor(e,t={}){super(),this.type=e,this.props=Object.assign({},t)}getMD5Message(){if(!Object.isFrozen(this))throw new Error("ID generation failed. InkInputProvider do not belongs to any SensorChannelsContext yet");return["InkInputProvider",this.type.name,u.getMD5Tokens(this.props)]}}Object.defineEnum(c,"Type",["PEN","TOUCH","MOUSE","CONTROLLER"]);class p{constructor(){this.path=[],this.phase=p.Phase.END;let e=!1;Object.defineProperty(this,"keepAllData",{get:function(){return e},set:function(t){e=t,this.reset()},enumerable:!0}),Object.defineProperty(this,"allData",{get:function(){return this.getOutput(this.path.slice(),p.OutputType.ALL_DATA)},enumerable:!0})}add(e,t,i){if(!this.move(e))throw new Error(`Cannot move from phase ${this.phase.name} to phase ${e.name}`);this.debug&&(console.log("-------------------------------------"),console.log(this.constructor.name,e.name));let r=this.addImpl(t,i);return this.keepAllData&&this.path.push(...r.added),{added:this.getOutput(r.added,p.OutputType.ADDITION),predicted:this.getOutput(r.predicted,p.OutputType.PREDICTION)}}addImpl(e,t){throw new Error("Abstract method addImpl of DataProcessor should be implemented")}getOutput(e,t){return e}move(e){return(this.phase!=p.Phase.END||e==p.Phase.BEGIN)&&((this.phase!=p.Phase.BEGIN||e==p.Phase.UPDATE||e==p.Phase.END)&&((this.phase!=p.Phase.UPDATE||e==p.Phase.UPDATE||e==p.Phase.END)&&(e==p.Phase.BEGIN&&this.reset(),this.phase=e,!0)))}reset(){this.path.clear(),this.phase=p.Phase.END}}Object.defineEnum(p,"Phase",["BEGIN","UPDATE","END"]),Object.defineEnum(p,"OutputType",["ADDITION","PREDICTION","ALL_DATA"]);class f{constructor(t,i,r,s){if(isNaN(t))throw new Error(`Invalid x found: ${t}`);if(isNaN(i))throw new Error(`Invalid y found: ${i}`);let n=[t,i];isFinite(r)&&(n.push(r),isFinite(s)&&n.push(s)),this.value=n.toFloat32Array(),Object.defineProperty(this,"x",{get:()=>this.value[0],set:e=>{this.value[0]=e},enumerable:!0}),Object.defineProperty(this,"y",{get:()=>this.value[1],set:e=>{this.value[1]=e},enumerable:!0}),2==n.length?this.vec=e.vec2:3==n.length?(this.vec=e.vec3,Object.defineProperty(this,"z",{get:()=>this.value[2],set:e=>{this.value[2]=e},enumerable:!0})):(this.vec=e.vec4,Object.defineProperty(this,"w",{get:()=>this.value[3],set:e=>{this.value[3]=e},enumerable:!0}))}add(e){e instanceof f||(e=f.fromPoint(e));let t=this.vec.create();return this.vec.add(t,this.value,e.value),f.fromPoint(t)}addSelf(e){return e instanceof f||(e=f.fromPoint(e)),this.vec.add(this.value,this.value,e.value),this}subtract(e){e instanceof f||(e=f.fromPoint(e));let t=this.vec.create();return this.vec.subtract(t,this.value,e.value),f.fromPoint(t)}subtractSelf(e){return e instanceof f||(e=f.fromPoint(e)),this.vec.subtract(this.value,this.value,e.value),this}multiply(e){e instanceof f||(e=f.fromPoint(e));let t=this.vec.create();return this.vec.multiply(t,this.value,e.value),f.fromPoint(t)}multiplySelf(e){return e instanceof f||(e=f.fromPoint(e)),this.vec.multiply(this.value,this.value,e.value),this}divide(e){e instanceof f||(e=f.fromPoint(e));let t=this.vec.create();return this.vec.divide(t,this.value,e.value),f.fromPoint(t)}divideSelf(e){return e instanceof f||(e=f.fromPoint(e)),this.vec.divide(this.value,this.value,e.value),this}scale(e){let t=this.vec.create();return this.vec.scale(t,this.value,e),f.fromPoint(t)}scaleSelf(e){return this.vec.scale(this.value,this.value,e),this}abs(){return new f(Math.abs(this.x),Math.abs(this.y),isFinite(this.z)?Math.abs(this.z):void 0,isFinite(this.w)?Math.abs(this.w):void 0)}absSelf(){return this.x=Math.abs(this.x),this.y=Math.abs(this.y),isFinite(this.z)&&(this.z=Math.abs(this.z)),isFinite(this.w)&&(this.w=Math.abs(this.w)),this}transform(e){if(!e)return this;let t=this.vec.create();return this.vec.transformMat4(t,this.value,e.toFloat32Array()),f.fromPoint(t)}transformSelf(e){return this.vec.transformMat4(this.value,this.value,e.toFloat32Array()),this}toFloat32Array(){return this.value}toJSON(){let e={x:this.x,y:this.y};return isFinite(this.z)&&(e.z=this.z,isFinite(this.w)&&(e.w=this.w)),e}toString(){return`point(${this.value.join(", ")})`}clone(){return f.fromPoint(this)}static fromPoint(e){return Array.isArray(e)||ArrayBuffer.isTypedArray(e)?new f(e[0],e[1],e[2],e[3]):new f(e.x,e.y,e.z,e.w)}}class m{constructor(e,t,i,r=1){this.red=e,this.green=t,this.blue=i,this.alpha=r,Object.defineProperty(this,"hex",{get:()=>"#"+this.red.toString(16).pad(2,"0")+this.green.toString(16).pad(2,"0")+this.blue.toString(16).pad(2,"0"),enumerable:!0})}premultiply(){let e=this.red/255*this.alpha,t=this.green/255*this.alpha,i=this.blue/255*this.alpha;return new m(e,t,i,this.alpha)}postdivide(e,t,i,r){let s=parseInt(255*e/r),n=parseInt(255*t/r),o=parseInt(255*i/r);return new m(s,n,o,r)}equals(e){return e&&this.red==e.red&&this.green==e.green&&this.blue==e.blue&&this.alpha==e.alpha}toRGB(){return 1==this.alpha?this:new m(this.red,this.green,this.blue)}toRGBA(e){return new m(this.red,this.green,this.blue,e)}toHSLA(){let e=this.red/255,t=this.green/255,i=this.blue/255,r=Math.min(e,t,i),s=Math.max(e,t,i),n=0,o=0,a=(s+r)/2;if(s!=r){let l=s-r;switch(o=l/(1-Math.abs(2*a-1)),s){case e:n=(t-i)/l%6;break;case t:n=(i-e)/l+2;break;case i:n=(e-t)/l+4}}return n*=60,n<0&&(n+=360),{hue:parseFloat(n.toFixed(0)),saturation:parseFloat((100*o).toFixed(2)),lightness:parseFloat((100*a).toFixed(2)),alpha:this.alpha}}toArray(){return[this.red,this.green,this.blue,this.alpha]}toJSON(){return{red:this.red,green:this.green,blue:this.blue,alpha:this.alpha}}toString(){return 1==this.alpha?`rgb(${this.red}, ${this.green}, ${this.blue})`:`rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`}static isColor(e){return e&&isFinite(e.red)&&isFinite(e.green)&&isFinite(e.blue)}static fromColor(e){let t,i,r,s;if("string"==typeof e){if(!e.startsWith("rgb")){if(e.startsWith("#"))return e=e.substring(1),new m(parseInt(e.substring(0,2),16),parseInt(e.substring(2,4),16),parseInt(e.substring(4,6),16));throw new Error(`Unknown input found: ${e}. Expected data starts with rgba, rgb or #.`)}e=e.substring(e.indexOf("(")+1,e.indexOf(")")).split(/,\s*/g),t=parseInt(e[0]),i=parseInt(e[1]),r=parseInt(e[2]),s=e[3]?parseInt(e[3]):1}else Array.isArray(e)?(t=e[0],i=e[1],r=e[2],s=e[3]):(t=e.red,i=e.green,r=e.blue,s=e.alpha);return new m(t,i,r,s)}static fromHSLA(e=0,t=0,i=0,r){e/=60,t/=100,i/=100;let s=(1-Math.abs(2*i-1))*t,n=s*(1-Math.abs(e%2-1)),o=0,a=0,l=0;e>=0&&e<1?(o=s,a=n):e>=1&&e<2?(o=n,a=s):e>=2&&e<3?(a=s,l=n):e>=3&&e<4?(a=n,l=s):e>=4&&e<5?(o=n,l=s):(o=s,l=n);let h=i-s/2;return o+=h,a+=h,l+=h,new m(Math.round(255*o),Math.round(255*a),Math.round(255*l),r)}static random(e){return new m(Math.randomInt(0,255),Math.randomInt(0,255),Math.randomInt(0,255),e?Math.random():1)}}m.TRANSPERENT=new m(0,0,0,0),m.BLACK=new m(0,0,0,1),m.WHITE=new m(255,255,255,1),m.RED=new m(255,0,0,1),m.GREEN=new m(0,255,0,1),m.BLUE=new m(0,0,255,1);const g={m11:0,m12:1,m13:2,m14:3,m21:4,m22:5,m23:6,m24:7,m31:8,m32:9,m33:10,m34:11,m41:12,m42:13,m43:14,m44:15},y=g.m11,b=g.m12,E=g.m21,P=g.m22,x=g.m41,v=g.m42;class w{constructor(t=e.mat4.create(),i=w.MultiplicationType.PRE){Object.defineProperty(this,"value",{value:t,enumerable:!0}),Object.defineProperty(this,"multiplicationType",{value:i,enumerable:!0});let r=function(e,t){let i=g[e];this.value[i]=t};Object.defineProperty(this,"a",{get:()=>this.value[y],set:r.bind(this,"m11"),enumerable:!0}),Object.defineProperty(this,"b",{get:()=>this.value[b],set:r.bind(this,"m12"),enumerable:!0}),Object.defineProperty(this,"c",{get:()=>this.value[E],set:r.bind(this,"m21"),enumerable:!0}),Object.defineProperty(this,"d",{get:()=>this.value[P],set:r.bind(this,"m22"),enumerable:!0}),Object.defineProperty(this,"e",{get:()=>this.value[x],set:r.bind(this,"m41"),enumerable:!0}),Object.defineProperty(this,"f",{get:()=>this.value[v],set:r.bind(this,"m42"),enumerable:!0}),Object.defineProperty(this,"tx",{get:()=>this.value[x],set:r.bind(this,"m41"),enumerable:!0}),Object.defineProperty(this,"ty",{get:()=>this.value[v],set:r.bind(this,"m42"),enumerable:!0}),Object.defineProperty(this,"m11",{get:()=>this.value[0],set:r.bind(this,"m11"),enumerable:!0}),Object.defineProperty(this,"m12",{get:()=>this.value[1],set:r.bind(this,"m12"),enumerable:!0}),Object.defineProperty(this,"m13",{get:()=>this.value[2],set:r.bind(this,"m13"),enumerable:!0}),Object.defineProperty(this,"m14",{get:()=>this.value[3],set:r.bind(this,"m14"),enumerable:!0}),Object.defineProperty(this,"m21",{get:()=>this.value[4],set:r.bind(this,"m21"),enumerable:!0}),Object.defineProperty(this,"m22",{get:()=>this.value[5],set:r.bind(this,"m22"),enumerable:!0}),Object.defineProperty(this,"m23",{get:()=>this.value[6],set:r.bind(this,"m23"),enumerable:!0}),Object.defineProperty(this,"m24",{get:()=>this.value[7],set:r.bind(this,"m24"),enumerable:!0}),Object.defineProperty(this,"m31",{get:()=>this.value[8],set:r.bind(this,"m31"),enumerable:!0}),Object.defineProperty(this,"m32",{get:()=>this.value[9],set:r.bind(this,"m32"),enumerable:!0}),Object.defineProperty(this,"m33",{get:()=>this.value[10],set:r.bind(this,"m33"),enumerable:!0}),Object.defineProperty(this,"m34",{get:()=>this.value[11],set:r.bind(this,"m34"),enumerable:!0}),Object.defineProperty(this,"m41",{get:()=>this.value[12],set:r.bind(this,"m41"),enumerable:!0}),Object.defineProperty(this,"m42",{get:()=>this.value[13],set:r.bind(this,"m42"),enumerable:!0}),Object.defineProperty(this,"m43",{get:()=>this.value[14],set:r.bind(this,"m43"),enumerable:!0}),Object.defineProperty(this,"m44",{get:()=>this.value[15],set:r.bind(this,"m44"),enumerable:!0}),Object.defineProperty(this,"isIdentity",{get:()=>1==this.a&&0==this.b&&0==this.c&&1==this.d&&0==this.tx&&0==this.ty,enumerable:!0}),Object.defineProperty(this,"is2D",{get:()=>!(0!=this.m31||0!=this.m32||0!=this.m13||0!=this.m23||1!=this.m33||0!=this.m43||0!=this.m14||0!=this.m24||0!=this.m34||1!=this.m44),enumerable:!0}),Object.defineProperty(this,"translateX",{get:()=>this.tx}),Object.defineProperty(this,"translateY",{get:()=>this.ty}),Object.defineProperty(this,"skewX",{get:()=>Math.tan(this.c)}),Object.defineProperty(this,"skewY",{get:()=>Math.tan(this.b)}),Object.defineProperty(this,"scaleX",{get:()=>Math.sqrt(this.a*this.a+this.c*this.c)}),Object.defineProperty(this,"scaleY",{get:()=>Math.sqrt(this.d*this.d+this.b*this.b)}),Object.defineProperty(this,"rotation",{get:()=>Math.atan2(this.b,this.a)})}clone(){return new w(this.value.clone(),this.multiplicationType)}translate(e){return this.multiply(w.fromTranslate(e))}translateSelf(e){this.multiplySelf(w.fromTranslate(e))}rotate(e,t){return this.multiply(w.fromRotate(e,t))}rotateSelf(e,t){this.multiplySelf(w.fromRotate(e,t))}scale(e,t){return this.multiply(w.fromScale(e,t))}scaleSelf(e,t){this.multiplySelf(w.fromScale(e,t))}multiply(e){return this.multiplicationType==w.MultiplicationType.PRE?this.preMultiply(e):this.postMultiply(e)}preMultiply(t){let i=e.mat4.create();return e.mat4.multiply(i,t.toFloat32Array(),this.value),new w(i,this.multiplicationType)}postMultiply(t){let i=e.mat4.create();return e.mat4.multiply(i,this.value,t.toFloat32Array()),new w(i,this.multiplicationType)}multiplySelf(e){this.multiplicationType==w.MultiplicationType.PRE?this.preMultiplySelf(e):this.postMultiplySelf(e)}preMultiplySelf(t){e.mat4.multiply(this.value,t.toFloat32Array(),this.value)}postMultiplySelf(t){e.mat4.multiply(this.value,this.value,t.toFloat32Array())}invert(){let t=e.mat4.create();return e.mat4.invert(t,this.value),new w(t,this.multiplicationType)}invertSelf(){e.mat4.invert(this.value,this.value)}decompose(){return{translate:{x:this.tx,y:this.ty},rotate:{angle:Math.atan2(this.b,this.a)},skew:{angleX:Math.tan(this.c),angleY:Math.tan(this.b)},scale:{x:Math.sqrt(this.a*this.a+this.c*this.c),y:Math.sqrt(this.d*this.d+this.b*this.b)},matrix:this.toJSON()}}transformPoint(e){return f.fromPoint(e).transform(this)}toFloat32Array(){return this.value}toJSON(){return{a:this.a,b:this.b,c:this.c,d:this.d,tx:this.tx,ty:this.ty}}toString(e){if(e){let e=e=>((e<0?"":" ")+e.toPrecision(6)).substring(0,8);return" Matrix 4x4\n"+"-".repeat(39)+`\n${e(this.m11)}, ${e(this.m21)}, ${e(this.m31)}, ${e(this.m41)}`+`\n${e(this.m12)}, ${e(this.m22)}, ${e(this.m32)}, ${e(this.m42)}`+`\n${e(this.m13)}, ${e(this.m23)}, ${e(this.m33)}, ${e(this.m43)}`+`\n${e(this.m14)}, ${e(this.m24)}, ${e(this.m34)}, ${e(this.m44)}`}return this.is2D?`matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`:`matrix3d(${this.m11}, ${this.m12}, ${this.m13}, ${this.m14}, ${this.m21}, ${this.m22}, ${this.m23}, ${this.m24}, ${this.m31}, ${this.m32}, ${this.m33}, ${this.m34}, ${this.m41}, ${this.m42}, ${this.m43}, ${this.m44})`}static fromString(t,i){let r=e.mat4.create();if("none"!=t){let e=t.substring(0,t.indexOf("("));t=t.substring(t.indexOf("(")+1,t.indexOf(")")).split(/,\s*/g),"matrix3d"==e?(r[0]=parseFloat(t[0]),r[1]=parseFloat(t[1]),r[2]=parseFloat(t[2]),r[3]=parseFloat(t[3]),r[4]=parseFloat(t[4]),r[5]=parseFloat(t[5]),r[6]=parseFloat(t[6]),r[7]=parseFloat(t[7]),r[8]=parseFloat(t[8]),r[9]=parseFloat(t[9]),r[10]=parseFloat(t[10]),r[11]=parseFloat(t[11]),r[12]=parseFloat(t[12]),r[13]=parseFloat(t[13]),r[14]=parseFloat(t[14]),r[15]=parseFloat(t[15])):(r[y]=parseFloat(t[0]),r[b]=parseFloat(t[1]),r[E]=parseFloat(t[2]),r[P]=parseFloat(t[3]),r[x]=parseFloat(t[4]),r[v]=parseFloat(t[5]))}return new w(r,i)}static fromMatrix(t,i){if(!t)throw new Error("data not found, Matrix instance creation failed");if("function"==typeof t)throw new Error("data type function is not allowed");if(t instanceof w)return t;if(Array.isArray(t)&&(t=new Float32Array(t)),t instanceof Float32Array)return new w(t,i);if("string"==typeof t)return w.fromString(t,i);let r=e.mat4.create(),s=Object.assign({},t);return isFinite(t.a)&&(s.m11=t.a),isFinite(t.b)&&(s.m12=t.b),isFinite(t.c)&&(s.m21=t.c),isFinite(t.d)&&(s.m22=t.d),isFinite(t.tx)?s.m41=t.tx:isFinite(t.e)?s.m41=t.e:isFinite(t.dx)&&(s.m41=t.dx),isFinite(t.ty)?s.m42=t.ty:isFinite(t.f)?s.m42=t.f:isFinite(t.dy)&&(s.m42=t.dy),isFinite(s.m11)&&(r[0]=s.m11),isFinite(s.m12)&&(r[1]=s.m12),isFinite(s.m13)&&(r[2]=s.m13),isFinite(s.m14)&&(r[3]=s.m14),isFinite(s.m21)&&(r[4]=s.m21),isFinite(s.m22)&&(r[5]=s.m22),isFinite(s.m23)&&(r[6]=s.m23),isFinite(s.m24)&&(r[7]=s.m24),isFinite(s.m31)&&(r[8]=s.m31),isFinite(s.m32)&&(r[9]=s.m32),isFinite(s.m33)&&(r[10]=s.m33),isFinite(s.m34)&&(r[11]=s.m34),isFinite(s.m41)&&(r[12]=s.m41),isFinite(s.m42)&&(r[13]=s.m42),isFinite(s.m43)&&(r[14]=s.m43),isFinite(s.m44)&&(r[15]=s.m44),new w(r,i||t.multiplicationType)}static fromTranslate(e){let t=isFinite(e)?{tx:e,ty:e}:{tx:e.x,ty:e.y};return w.fromMatrix(t)}static fromRotate(e,t){let i=Math.sin(e),r=Math.cos(e),s={a:r,b:i,c:-i,d:r};return t&&(s.tx=t.x-t.x*r+t.y*i,s.ty=t.y-t.x*i-t.y*r),w.fromMatrix(s)}static fromScale(e,t){isFinite(e)&&(e={x:e,y:e});let i={a:e.x,d:e.y};return t&&(i.tx=t.x-t.x*e.x,i.ty=t.y-t.y*e.y),w.fromMatrix(i)}static fromPoints(e,t){if(!Array.isArray(e)||!Array.isArray(t))throw new Error("Expected input type Array requirement not satisfied");if(3!=e.length||3!=t.length)throw new Error("Expected input size 3 requirement not satisfied");let i=w.fromMatrix({m11:e[0].x,m21:e[1].x,m31:e[2].x,m12:e[0].y,m22:e[1].y,m32:e[2].y,m13:1,m23:1,m33:1}),r=w.fromMatrix({m11:t[0].x,m21:t[1].x,m31:t[2].x,m12:t[0].y,m22:t[1].y,m32:t[2].y,m13:1,m23:1,m33:1}),s=i.invert().preMultiply(r);return w.fromMatrix({a:s.m11,b:s.m12,c:s.m21,d:s.m22,tx:s.m31,ty:s.m32})}static multiply(t,i){let r=e.mat4.create();return e.mat4.multiply(r,t.value,i.value),new w(r)}}w.MultiplicationType=Object.freeze({PRE:"PRE",POST:"POST"});class I extends f{constructor(e,t,i){super(e,t,i),this.red,this.green,this.blue,this.alpha,this.size,this.rotation,this.scaleX,this.scaleY,this.scaleZ,this.offsetX,this.offsetY,this.offsetZ,this.dX,this.dY}static createInstance(e,t,i=0,r={}){let s=Object.clone(r),n=i*e.length;e.forEach(((e,i)=>I.setProperty(s,e,t[n+i])));let o=new I(s.x,s.y,s.z);return o.red=s.red,o.green=s.green,o.blue=s.blue,o.alpha=s.alpha,o.size=s.size,o.rotation=s.rotation||0,o.scaleX=s.scaleX||1,o.scaleY=s.scaleY||1,o.scaleZ=s.scaleZ||1,o.offsetX=s.offsetX||0,o.offsetY=s.offsetY||0,o.offsetZ=s.offsetZ||0,o.dX=s.dX,o.dY=s.dY,o}fill(e,t,i=0){let r=i*e.length;e.forEach(((e,i)=>this.setProperty(e,t[r+i])))}getProperty(e){switch(e){case I.Property.X:return this.x;case I.Property.Y:return this.y;case I.Property.Z:return this.z;case I.Property.RED:return this.red;case I.Property.GREEN:return this.green;case I.Property.BLUE:return this.blue;case I.Property.ALPHA:return this.alpha;case I.Property.SIZE:return this.size;case I.Property.ROTATION:return this.rotation;case I.Property.SCALE_X:return this.scaleX;case I.Property.SCALE_Y:return this.scaleY;case I.Property.SCALE_Z:return this.scaleZ;case I.Property.OFFSET_X:return this.offsetX;case I.Property.OFFSET_Y:return this.offsetY;case I.Property.OFFSET_Z:return this.offsetZ;case I.Property.D_X:return this.dX;case I.Property.D_Y:return this.dY;default:throw console.warn(e),new Error("Invalid property found")}}setProperty(e,t){I.setProperty(this,e,t)}static setProperty(e,t,i){switch(t){case I.Property.X:e.x=i;break;case I.Property.Y:e.y=i;break;case I.Property.Z:e.z=i;break;case I.Property.RED:e.red=i;break;case I.Property.GREEN:e.green=i;break;case I.Property.BLUE:e.blue=i;break;case I.Property.ALPHA:e.alpha=i;break;case I.Property.SIZE:e.size=i;break;case I.Property.ROTATION:e.rotation=i;break;case I.Property.SCALE_X:e.scaleX=i;break;case I.Property.SCALE_Y:e.scaleY=i;break;case I.Property.SCALE_Z:e.scaleZ=i;break;case I.Property.OFFSET_X:e.offsetX=i;break;case I.Property.OFFSET_Y:e.offsetY=i;break;case I.Property.OFFSET_Z:e.offsetZ=i;break;case I.Property.D_X:e.dX=i;break;case I.Property.D_Y:e.dY=i;break;default:throw console.warn(t),new Error("Invalid property found")}}transform(e){if(!(e instanceof w))throw new Error(`matrix is instance of ${e.constructor.name} - it should be instance of Matrix. Use Matrix.fromMatrix method to convert.`);let t=e.scaleX,i=e.rotation,r=super.transform(e);this.x=r.x,this.y=r.y,this.z=r.z||0,this.size*=t,this.rotation+=i,this.scaleX*=t,this.scaleY*=t,this.scaleZ*=t,this.offsetX*=t,this.offsetY*=t,this.offsetZ*=t}toArray(e){return e.map((e=>{let t=this.getProperty(e);if(null==t||isNaN(t))throw new Error(`Property ${e.name} has invalid value ${t}`);return t}))}toJSON(){let e={};return I.Property.values.forEach((t=>{let i=this.getProperty(t);null!=i&&isFinite(i)&&(e[t.name]=this.getProperty(t))})),e}}Object.defineEnum(I,"Property",["X","Y","Z","RED","GREEN","BLUE","ALPHA","SIZE","ROTATION","SCALE_X","SCALE_Y","SCALE_Z","OFFSET_X","OFFSET_Y","OFFSET_Z","D_X","D_Y"]);class T{constructor(e,t,i,r){let s=e,n=t,o=e+i,a=t+r;Object.defineProperties(this,{left:{value:s,enumerable:!0},x:{value:e,enumerable:!0},bottom:{value:n,enumerable:!0},y:{value:t,enumerable:!0},right:{value:o,enumerable:!0},top:{value:a,enumerable:!0},width:{value:i,enumerable:!0},height:{value:r,enumerable:!0}})}union(e){if(e&&!(e instanceof T))throw new TypeError("rect must be instance of RectGL");return e?T.ofEdges(Math.min(this.left,e.left),Math.min(this.bottom,e.bottom),Math.max(this.right,e.right),Math.max(this.top,e.top)):this}intersect(e){if(e&&!(e instanceof T))throw new TypeError("rect must be instance of RectGL");if(!e)return null;let t=T.ofEdges(Math.max(this.left,e.left),Math.max(this.bottom,e.bottom),Math.min(this.right,e.right),Math.min(this.top,e.top));return t.width>0&&t.height>0?t:null}ceil(){return T.ofEdges(Math.floor(this.left),Math.floor(this.bottom),Math.ceil(this.right),Math.ceil(this.top))}floor(){return T.ofEdges(Math.ceil(this.left),Math.ceil(this.bottom),Math.floor(this.right),Math.floor(this.top))}toQuad(t){let i;if(t){let r=f.fromPoint({x:this.left,y:this.bottom}).transform(t),s=f.fromPoint({x:this.right,y:this.bottom}).transform(t),n=f.fromPoint({x:this.left,y:this.top}).transform(t),o=f.fromPoint({x:this.right,y:this.top}).transform(t);i=e.quat2.fromValues(r.x,r.y,s.x,s.y,n.x,n.y,o.x,o.y)}else i=e.quat2.fromValues(this.left,this.bottom,this.right,this.bottom,this.left,this.top,this.right,this.top);return i}toString(){return`gl-rect(${this.x}, ${this.y}, ${this.width}, ${this.height})`}static ofEdges(e,t,i,r){return new T(e,t,i-e,r-t)}static calculateBrushGLSegmentBounds(e,t=0,i){let r,s=.5*e.size,n=Math.abs(t*s);if(i){r=new f(e.x,e.y,e.x,e.z).transform(i)}else r=e;let o=r.x,a=r.y,l=e.scaleX*s,h=e.scaleY*s,d=e.offsetX,u=-e.offsetY,c=Math.cos(e.rotation),p=Math.sin(e.rotation),m=Number.MAX_SAFE_INTEGER,g=Number.MIN_SAFE_INTEGER,y=Number.MAX_SAFE_INTEGER,b=Number.MIN_SAFE_INTEGER;return[{x:-1,y:-1},{x:1,y:-1},{x:-1,y:1},{x:1,y:1}].forEach((e=>{e.x=e.x*l+d,e.y=e.y*h+u;let t=c*e.x+p*e.y+o,i=-p*e.x+c*e.y+a,r=t-n;m=Math.min(m,r),g=Math.max(g,r),r=t+n,m=Math.min(m,r),g=Math.max(g,r);let s=i-n;y=Math.min(y,s),b=Math.max(b,s),s=i+n,y=Math.min(y,s),b=Math.max(b,s)})),T.ofEdges(m,y,g,b)}}Object.defineProperty(T,"SQURE",{value:Object.freeze([Object.freeze({x:-1,y:-1}),Object.freeze({x:1,y:-1}),Object.freeze({x:-1,y:1}),Object.freeze({x:1,y:1})]),enumerable:!0});class S{constructor(e,t,i,r){let s=e,n=t,o=e+i,a=t+r,l={x:(s+o)/2,y:(n+a)/2};Object.defineProperties(this,{left:{value:s,enumerable:!0},top:{value:n,enumerable:!0},right:{value:o,enumerable:!0},bottom:{value:a,enumerable:!0},x:{value:e,enumerable:!0},y:{value:t,enumerable:!0},width:{value:i,enumerable:!0},height:{value:r,enumerable:!0},center:{value:l,enumerable:!0},size:{value:{width:i,height:r},enumerable:!0}})}union(e){return e?S.ofEdges(Math.min(this.left,e.left),Math.min(this.top,e.top),Math.max(this.right,e.right),Math.max(this.bottom,e.bottom)):this}intersect(e){if(!e)return null;let t=S.ofEdges(Math.max(this.left,e.left),Math.max(this.top,e.top),Math.min(this.right,e.right),Math.min(this.bottom,e.bottom));return t.width>0&&t.height>0?t:null}ceil(e){let t=Math.floor(this.left),i=Math.floor(this.top),r=Math.ceil(this.right),s=Math.ceil(this.bottom);if(e){let e=r-t,n=s-i;e+=e%2,n+=n%2,r=t+e,s=i+n}return S.ofEdges(t,i,r,s)}floor(e){let t=Math.ceil(this.left),i=Math.ceil(this.top),r=Math.floor(this.right),s=Math.floor(this.bottom);if(e){let e=r-t,n=s-i;e-=e%2,n-=n%2,r=t+e,s=i+n}return S.ofEdges(t,i,r,s)}contains(e){return this.left<=e.x&&this.right>=e.x&&this.top<=e.y&&this.bottom>=e.y}transform(e){if(!e)return this;let t=f.fromPoint({x:this.left,y:this.top}).transform(e),i=f.fromPoint({x:this.right,y:this.top}).transform(e),r=f.fromPoint({x:this.left,y:this.bottom}).transform(e),s=f.fromPoint({x:this.right,y:this.bottom}).transform(e),n=Math.min(t.x,i.x,r.x,s.x),o=Math.min(t.y,i.y,r.y,s.y),a=Math.max(t.x,i.x,r.x,s.x),l=Math.max(t.y,i.y,r.y,s.y);return S.ofEdges(n,o,a,l)}toPath(e=m.BLACK,t=1){return{layout:[I.Property.X,I.Property.Y],size:t,color:e,ts:0,tf:1,points:[this.left,this.top,this.left,this.top,this.right,this.top,this.right,this.bottom,this.left,this.bottom,this.left,this.top,this.left,this.top]}}toGLRect(){return new T(this.x,this.y,this.width,this.height)}toString(){return`rect(${this.x}, ${this.y}, ${this.width}, ${this.height})`}toJSON(){return{x:this.left,y:this.top,width:this.width,height:this.height}}static fromGLRect(e){if(!e)return null;if(!(e instanceof T))throw new TypeError("rect must be instance of RectGL");return new S(e.left,e.bottom,e.width,e.height)}static isRect(e){return e&&isFinite(e.left)&&isFinite(e.top)&&isFinite(e.width)&&isFinite(e.height)}static fromRect(e){return new S(e.x,e.y,e.width,e.height)}static ofPolygon(e){return S.ofPolygons([e])}static ofPolygons(e){if(!e.length)return null;let t=Number.MAX_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER;return e.forEach((e=>{for(let n=0;n<e.length;n+=2){let o=e[n],a=e[n+1];t=Math.min(t,o),i=Math.min(i,a),r=Math.max(r,o),s=Math.max(s,a)}})),S.ofEdges(t,i,r,s)}static ofSpline(e,t){let i;for(let r=0;r<e.length;r++)i=T.calculateBrushGLSegmentBounds(e.getPoint(r),t).union(i);return S.fromGLRect(i)}static ofEdges(e,t,i,r){return new S(e,t,i-e,r-t)}static union(e,t){return e?t?e.union(t):e:t}static intersect(e,t){return e&&t?e.intersect(t):null}}class R{constructor(e){this.header=[],this.table=[],e.forEach((e=>{"string"==typeof e&&(e={name:e,title:e}),e.size=e.title.length,this.header.push(e)})),Object.defineProperty(this,"length",{get:()=>this.table.length,enumerable:!0})}insert(e){this.table.push(e),this.header.forEach((t=>{let i=e[t.name];null!=i&&(t.size=Math.max(t.size,i.toString().length))}))}build(){let e=[],t=this.header.length+1,i=[];return this.header.forEach((e=>{t+=e.size+2;let r=e.size-e.title.length,s=Math.floor(r/2),n=Math.ceil(r/2);i.push(this.getRepetedValue(s)+e.title+this.getRepetedValue(n))})),this.table.forEach((t=>{let i=[];this.header.forEach((e=>{let r=null==t[e.name]?"":t[e.name],s=e.size-r.toString().length;i.push(r+this.getRepetedValue(s))})),e.push(i)})),{delimiterLength:t,headerRow:i,content:e}}getFormattedRow(e){let t="| ";return e.forEach((e=>{t+=e,t+=" | "})),t.trim()}getRepetedValue(e,t=" "){return new Array(e+1).join(t)}clear(){this.table.clear()}toString(){let e="",{delimiterLength:t,headerRow:i,content:r}=this.build();return e+=this.getRepetedValue(t,"="),e+="\n",e+=this.getFormattedRow(i),e+="\n",e+=this.getRepetedValue(t,"="),e+="\n",r.forEach((t=>{e+=this.getFormattedRow(t),e+="\n"})),e}}if("object"==typeof window&&"undefined"==typeof TouchEvent){class e extends Event{}window.TouchEvent=e}let A={pointers:{mouse:["down","move","up"],touch:["start","move","end"]},inactive:[],open(e){if(!(e instanceof s))throw new Error("Argument doesn't implement InkController interface");this.inkController=e,this.canvas=e.canvas.surface,this.mounted||(this.mounted=!0,this.begin=this.begin.bind(this),this.move=this.move.bind(this),this.end=this.end.bind(this),this.abort=this.abort.bind(this)),addEventListener("touchcancel",this.abort,{passive:!0}),this.attachResize(),this.start()},reset(e){for(let t in this.pointers){let i=t==A.PointerType.TOUCH?{passive:!0}:void 0,r=t+this.pointers[t][0];this.canvas.removeEventListener(r,this.begin),e.canvas.surface.addEventListener(r,this.begin,i)}this.dettachResize(),this.inkController=e,this.canvas=e.canvas.surface,this.attachResize()},close(){this.stop(),this.dettachResize(),removeEventListener("touchcancel",this.abort),delete this.canvas,delete this.inkController},start(e){let t=e?{[e]:this.pointers[e]}:this.pointers;for(e in e&&this.inactive.remove(e),this.inactive.forEach((e=>delete t[e])),t){let i=e==A.PointerType.TOUCH?{passive:!0}:void 0;for(let r=0;r<t[e].length;r++){let s=e+t[e][r];0==r?this.canvas.addEventListener(s,this.begin,i):addEventListener(s,2==r?this.end:this.move,i)}}},stop(e){let t=e?{[e]:this.pointers[e]}:this.pointers;for(e in e&&!this.inactive.includes(e)&&this.inactive.push(e),this.inactive.forEach((e=>delete t[e])),e&&e!=A.PointerType.MOUSE||clearTimeout(this.timeoutID),t)for(let i=0;i<t[e].length;i++){let r=e+t[e][i];0==i?this.canvas.removeEventListener(r,this.begin):removeEventListener(r,2==i?this.end:this.move)}},attachResize(){var e,t,i;this.inkController.resize!=s.prototype.resize&&(this.resize=(e=this.inkController.resize.bind(this.inkController),t=200,i=null,function(){var r=this,s=arguments;clearTimeout(i),i=setTimeout((function(){e.apply(r,s)}),t)}),addEventListener("resize",this.resize))},dettachResize(){this.inkController.resize!=s.prototype.resize&&removeEventListener("resize",this.resize)},isInputAllowed(e){let t=this.provider;return(!e.type.endsWith("down")&&!e.type.endsWith("start")||(t||(t=this.getInputProvider(e)),!this.inactive.includes(t)))&&t==this.getInputProvider(e)},isInputExpected(e){let t=!1,i=e.changedTouches?Array.from(e.changedTouches).map((e=>e.identifier)):[],r=this.inkController.getInkBuilder(i);return r&&(t=e.type.endsWith("down")||e.type.endsWith("start")?!r.phase:!!r.phase),t},getSensorPoint(e){let t,i=e.changedTouches?Array.from(e.changedTouches).map((e=>e.identifier)):[],r=this.inkController.getInkBuilder(i);return r&&(t=this.createSensorPoint(e,r.pointerID)),t},createSensorPoint(e,t){let i=this.getOffset(e),r={x:i.x,y:i.y,z:void 0,timestamp:Math.floor(e.timeStamp),pressure:void 0,radiusX:void 0,radiusY:void 0,rotation:void 0},s={id:void 0,type:void 0,button:void 0,buttons:void 0};if(Object.defineProperty(r,"phase",{value:p.Phase[e.type.replace(/pointer|mouse|touch/g,"").replace(/down|start/,"BEGIN").replace(/move/,"UPDATE").replace(/up|end/,"END")],enumerable:!0}),Object.defineProperty(r,"pointer",{value:s,enumerable:!0}),Object.defineProperty(r.pointer,"provider",{get:function(){return c.Type[this.type.toUpperCase()]},enumerable:!0}),e instanceof MouseEvent)s.type=A.PointerType.MOUSE,s.button=e.button,s.buttons=e.buttons;else{if(!(e instanceof TouchEvent))throw new Error(`Unexpected event detected: ${e.constructor.name}. Expected event should be instance of MouseEvent or TouchEvent.`);if(isNaN(t))throw new Error("pointerID is required for touch event");if(!(e=Array.from(e.changedTouches).filter((e=>e.identifier==t)).first))return null;isNaN(r.x)&&(r.x=e.offsetX||e.clientX),isNaN(r.y)&&(r.y=e.offsetY||e.clientY),s.id=e.identifier,s.type=A.PointerType.TOUCH,r.pressure=e.force,r.radiusX=e.radiusX,r.radiusY=e.radiusY,r.rotation=Math.toRadians(e.rotationAngle)}return r},getOffset(e){if(e.changedTouches){let t=Array.from(e.changedTouches).map((e=>e.identifier)),i=this.inkController.getInkBuilder(t);e=i.pointerID!=e.changedTouches.item(0).identifier?Array.from(e.changedTouches).filter((e=>e.identifier==i.pointerID)).first:e.changedTouches.item(0)}let t=this.canvas.offsetParent;if(!t)return{x:0,y:0};"flex"==t.getStyle("display")&&(t=this.canvas);let i=this.inkController.transform,r=this.canvas.getStyle("transform");"none"==r?r=t.getStyle("transform"):t=this.canvas,r="none"==r?null:w.fromMatrix(r);let s=f.fromPoint({x:e.clientX,y:e.clientY}),n=t.getBoundingClientRect();if(r){let e=r.invert();s=s.transform(e),n=S.fromRect(n).transform(e)}let o={x:s.x-n.x,y:s.y-n.y};return i&&(o=f.fromPoint(o).transform(i.invert())),o},getInputProvider:e=>e.type.replace(/down|start|move|up|end/g,""),begin(e){if(this.logSampleInput(e),e instanceof MouseEvent&&0!=e.button)return;if(!this.isInputAllowed(e))return;if(e instanceof TouchEvent){let t=Array.from(e.changedTouches).map((e=>e.identifier));this.inkController.registerInputProvider(t)}if(!this.isInputExpected(e))return;this.provider||(this.provider=this.getInputProvider(e));let t=this.getSensorPoint(e);t&&this.inkController.begin(t)},move(e){if(!this.isInputAllowed(e)||!this.isInputExpected(e))return;this.logSampleInput(e);let t=this.getSensorPoint(e);t&&this.inkController.move(t)},end(e){if(!this.isInputAllowed(e)||!this.isInputExpected(e))return;this.logSampleInput(e);let t=this.getSensorPoint(e);t&&(this.inkController.end(t),e instanceof MouseEvent||this.inactive.includes(A.PointerType.MOUSE)||(this.stop(A.PointerType.MOUSE),this.timeoutID=setTimeout((()=>this.start(A.PointerType.MOUSE)),500))),e.touches&&0!=e.touches.length||delete this.provider},abort(e){if(delete this.provider,this.inkController.abort)if(e instanceof TouchEvent){let t=Array.from(e.changedTouches).map((e=>e.identifier));this.inkController.abort(t)}else this.inkController.abort()},logSampleInput(e){if(!this.debug)return;const t=e.type.endsWith("move"),i="mouseup"==e.type||"touchend"==e.type;t&&!this.debug.move||i&&!this.debug.end||(i&&this.table.length>0&&(console.log(this.table.toString()),this.table.clear()),this.table||(this.table=new R(["type","id","pointerType","x","y","pressure","radius","rotation","timestamp"])),this.table.insert({type:e.type,id:e.changedTouches?e.changedTouches[0].identifier:void 0,pointerType:this.getInputProvider(e),x:e.changedTouches?e.changedTouches[0].clientX.toFixed(2):e.clientX,y:e.changedTouches?e.changedTouches[0].clientY.toFixed(2):e.clientY,pressure:e.changedTouches?e.changedTouches[0].force.toFixed(2):void 0,radius:e.changedTouches?e.changedTouches[0].radiusX.toFixed(2)+" / "+e.changedTouches[0].radiusY.toFixed(2):void 0,rotation:e.changedTouches?e.changedTouches[0].rotationAngle:e.twist,timestamp:e.timeStamp.toFixed(8)}),t||(console.log(this.table.toString()),this.table.clear()))},PointerType:{MOUSE:"mouse",TOUCH:"touch"}},O={longToByteArray(e){let t=[0,0,0,0,0,0,0,0];for(let i=0;i<t.length;i++){let r=255&e;t[i]=r,e=(e-r)/256}return t},byteArrayToLong(e){let t=0;for(let i=e.length-1;i>=0;i--)t=256*t+e[i];return t},crc32:function(){let e=new Uint32Array(256);for(let t=256;t--;){let i=t;for(let e=8;e--;)i=1&i?3988292384^i>>>1:i>>>1;e[t]=i}return function(t){let i=-1;for(let r=0,s=t.length;r<s;r++)i=i>>>8^e[255&i^t[r]];return(-1^i)>>>0}}(),mapTo:(e,t,i)=>i.min+(O.clamp(e,t)-t.min)/(t.max-t.min)*(i.max-i.min),clamp:(e,t)=>Math.min(Math.max(e,t.min),t.max),debounce(e,t){var i=null;return function(){var r=this,s=arguments;clearTimeout(i),i=setTimeout((function(){e.apply(r,s)}),t)}},comparator(){let e=Array.prototype.slice.call(arguments),t=function(e,t,i){return t.replace("[",".").replace("]","").split(".").forEach((t=>e=e[t])),i?e.toLowerCase():e};return function(i,r){return e.map((e=>function(e,t,i){let r="asc"===i?1:-1;return e>t?1*r:e<t?-1*r:0}(t(i,e.sortBy,e.ignoreCase),t(r,e.sortBy,e.ignoreCase),e.sortOrder))).reduceRight((function(e,t){return t||e}))}},getPropName(e,t){let i=e.split("_"),r=i.first.toLowerCase();t&&(r=r.substring(0,1).toUpperCase()+r.substring(1));for(let e=1;e<i.length;e++)r+=i[e].substring(0,1),r+=i[e].substring(1).toLowerCase();return r},getEnumValueName(e){let t="";for(let i=0;i<e.length;i++)i>0&&e[i]!=e[i].toLowerCase()&&(t+="_"),t+=e[i];return t.toUpperCase()}},C={inactive:[],open(e){if(!(e instanceof s))throw new Error("Argument doesn't implement InkController interface");this.inkController=e,this.canvas=e.canvas.surface,this.mounted||(this.mounted=!0,this.begin=this.begin.bind(this),this.move=this.move.bind(this),this.end=this.end.bind(this),this.abort=this.abort.bind(this)),addEventListener("pointercancel",this.abort),this.attachResize(),this.start()},reset(e){this.canvas.removeEventListener("pointerdown",this.begin),e.canvas.surface.addEventListener("pointerdown",this.begin),this.dettachResize(),this.inkController=e,this.canvas=e.canvas.surface,this.attachResize()},close(){this.stop(),this.dettachResize(),removeEventListener("pointercancel",this.abort),delete this.canvas,delete this.inkController},start(e){e?this.inactive.remove(e):(this.canvas.addEventListener("pointerdown",this.begin),addEventListener("pointermove",this.move),addEventListener("pointerup",this.end))},stop(e){e?this.inactive.includes(e)||this.inactive.push(e):(this.canvas.removeEventListener("pointerdown",this.begin),removeEventListener("pointermove",this.move),removeEventListener("pointerup",this.end))},attachResize(){this.inkController.resize!=s.prototype.resize&&(this.resize=O.debounce(this.inkController.resize.bind(this.inkController),200),addEventListener("resize",this.resize))},dettachResize(){this.inkController.resize!=s.prototype.resize&&removeEventListener("resize",this.resize)},isInputAllowed(e){let t=this.provider;if("pointerdown"==e.type){if(t||(t=this.getInputProvider(e)),this.inactive.includes(t))return!1;if(t==C.PointerType.MOUSE){if(0!=e.button)return!1}else if(t==C.PointerType.PEN&&0==e.pressure)return!1}return!0},isInputExpected(e){let t=!1,i=this.inkController.getInkBuilder(e.pointerId);return i&&(t="pointerdown"==e.type?!i.phase:!!i.phase),t},getSensorPoint(e){let t,i=this.inkController.getInkBuilder(e.pointerId);if(i){if(e.pointerId!=i.pointerID)throw new Error(`Create sensor point failed, expected pointer with id: ${i.pointerID}, found: ${e.pointerId}`);if("pointerdown"==e.type){let t=this.getInputProvider(e);e.pointerType!=t?i.pointerType=t:delete i.pointerType}t=this.createSensorPoint(e,i.pointerType)}return t},createSensorPoint(e,t,i){if(!(e instanceof PointerEvent))throw new Error(`Unexpected event detected: ${e.constructor.name}. Expected event should be instance of PointerEvent.`);let r,s=this.getOffset(e),n={x:s.x,y:s.y,z:void 0,timestamp:Math.floor(e.timeStamp),pressure:void 0,radiusX:void 0,radiusY:void 0,tiltX:void 0,tiltY:void 0,rotation:void 0};if(i?(Object.defineProperty(n,"phase",{value:i.phase,enumerable:!0}),r=i.pointer):(Object.defineProperty(n,"phase",{value:p.Phase[e.type.replace(/pointer|mouse|touch/g,"").replace(/down|start/,"BEGIN").replace(/move/,"UPDATE").replace(/up|end/,"END")],enumerable:!0}),r={id:e.pointerId,type:t||e.pointerType,button:void 0,buttons:void 0},Object.defineProperty(r,"provider",{get:function(){return c.Type[this.type.toUpperCase()]},enumerable:!0}),"pen"!=r.type&&"mouse"!=r.type||(r.button=e.button,r.buttons=e.buttons)),Object.defineProperty(n,"pointer",{value:r,enumerable:!0}),"pen"!=r.type&&"touch"!=r.type||(n.pressure=e.pressure,n.rotation=Math.toRadians(e.twist)),"pen"==r.type?(n.tiltX=e.tiltX,n.tiltY=e.tiltY):"touch"==r.type&&(n.radiusX=e.width/2,n.radiusY=e.height/2),!i){if(e.getPredictedEvents){let i,r=e.getPredictedEvents();Object.defineProperty(n,"predicted",{get:()=>(i||(i=r.map((e=>this.createSensorPoint(e,t,n)))),i),enumerable:!0})}if(e.getCoalescedEvents){let i,r=e.getCoalescedEvents();Object.defineProperty(n,"coalesced",{get:()=>(i||(i=r.map((e=>this.createSensorPoint(e,t,n)))),i),enumerable:!0})}}return n},getOffset(e){let t=this.canvas.offsetParent;if(!t)return{x:0,y:0};"flex"==t.getStyle("display")&&(t=this.canvas);let i=this.inkController.transform,r=this.canvas.getStyle("transform");"none"==r?r=t.getStyle("transform"):t=this.canvas,r="none"==r?null:w.fromMatrix(r);let s=f.fromPoint({x:e.clientX,y:e.clientY}),n=t.getBoundingClientRect();if(r){let e=r.invert();s=s.transform(e),n=S.fromRect(n).transform(e)}let o={x:s.x-n.x,y:s.y-n.y};return i&&(o=f.fromPoint(o).transform(i.invert())),o},getInputProvider:e=>e.pointerType==C.PointerType.MOUSE&&e.pressure>0&&.5!==e.pressure?C.PointerType.PEN:e.pointerType,begin(e){if(this.logSampleInput(e),!this.isInputAllowed(e))return;if(this.inkController.registerInputProvider(e.pointerId,e.isPrimary),!this.isInputExpected(e))return;this.provider||(this.provider=this.getInputProvider(e));let t=this.getSensorPoint(e);t&&this.inkController.begin(t)},move(e){if(!this.isInputAllowed(e)||!this.isInputExpected(e))return;this.logSampleInput(e);let t=this.getSensorPoint(e);t&&this.inkController.move(t)},end(e){if(!this.isInputAllowed(e)||!this.isInputExpected(e))return;this.logSampleInput(e);let t=this.getSensorPoint(e);t&&this.inkController.end(t),delete this.provider},abort(e){delete this.provider,this.inkController.abort&&this.inkController.abort(e.pointerId)},logSampleInput(e){this.debug&&("pointermove"!=e.type||this.debug.move)&&("pointerup"!=e.type||this.debug.end)&&(e.pointerType!=this.getInputProvider(e)&&(e.pen=!0),"pointerup"==e.type&&this.table.length>0&&(console.log(this.table.toString()),this.table.clear()),this.table||(this.table=new R(["type","id","pointerType","x","y","pressure","radius","tilt","rotation","timestamp"])),this.table.insert({type:e.type,id:e.pointerId,pointerType:e.pen?`${e.pointerType} / pen`:e.pointerType,x:e.clientX.toFixed(2),y:e.clientY.toFixed(2),pressure:e.pressure.toFixed(2),radius:(e.width/2).toFixed(2)+" / "+(e.height/2).toFixed(2),rotation:e.twist,tilt:isFinite(e.tiltX)?e.tiltX+" / "+e.tiltY:"",timestamp:e.timeStamp.toFixed(8)}),"pointermove"!=e.type&&(console.log(this.table.toString()),this.table.clear()))},PointerType:{PEN:"pen",MOUSE:"mouse",TOUCH:"touch"}};"object"==typeof window&&"undefined"==typeof PointerEvent&&(C=A);var D=C;let N;o.commonJS&&(N=require("systeminformation"));var M=N;class L extends u{constructor(){super(),this.props={}}getMD5Message(){if(!Object.isFrozen(this))throw new Error("ID generation failed. Environment do not belongs to any InputContext yet");return["Environment",u.getMD5Tokens(this.props)]}static async createInstance(e={}){let t=new L;if(t.props["env.name"]=o.type.name,void 0===M)t.props["user.agent"]=navigator.userAgent;else{let e=await M.osInfo();t.props["os.id"]=e.serial.toLowerCase(),t.props["os.name"]=e.codename,t.props["os.version"]=e.release,t.props["os.build"]=e.build,t.props["os.platform"]=`${e.distro} (${e.platform} ${e.arch})`}return Object.keys(e).forEach((i=>t.props[i]=e[i])),t}}const k=96/("undefined"==typeof window?1:window.devicePixelRatio),_={METER:{METER:1,CENTIMETER:100,MILLIMETER:1e3,MICROMETER:1e6,INCH:39.3700787402,POINT:2834.6456692913,PICA:236.2204724409,DIP:39.3700787402*k},CENTIMETER:{METER:.01,CENTIMETER:1,MILLIMETER:10,MICROMETER:1e4,INCH:.3937007874,POINT:28.3464566929,PICA:2.3622047244,DIP:.3937007874*k},MILLIMETER:{METER:.001,CENTIMETER:.1,MILLIMETER:1,MICROMETER:1e3,INCH:.0393700787,POINT:2.8346456693,PICA:.2362204724,DIP:.0393700787*k},MICROMETER:{METER:1e-6,CENTIMETER:1e-4,MILLIMETER:.001,MICROMETER:1,INCH:393701e-10,POINT:.0028346457,PICA:.0002362205,DIP:393701e-10*k},INCH:{METER:.0254,CENTIMETER:2.54,MILLIMETER:25.4,MICROMETER:25400,INCH:1,POINT:72,PICA:6,DIP:1*k},POINT:{METER:.0003527778,CENTIMETER:.0352777778,MILLIMETER:.3527777778,MICROMETER:352.7777777778,INCH:.0138888889,POINT:1,PICA:.0833333333,DIP:.0138888889*k},PICA:{METER:.0042333333,CENTIMETER:.4233333333,MILLIMETER:4.2333333333,MICROMETER:4233.3333333333,INCH:.1666666667,POINT:12,PICA:1,DIP:.1666666667*k},DIP:{METER:.0254/k,CENTIMETER:2.54/k,MILLIMETER:25.4/k,MICROMETER:25400/k,INCH:1/k,POINT:72/k,PICA:6/k,DIP:1},SECOND:{SECOND:1,MILLISECOND:1e3,MICROSECOND:1e6,NANOSECOND:1e9},MILLISECOND:{SECOND:.001,MILLISECOND:1,MICROSECOND:1e3,NANOSECOND:1e6},MICROSECOND:{SECOND:1e-6,MILLISECOND:.001,MICROSECOND:1,NANOSECOND:1e3},NANOSECOND:{SECOND:1e-9,MILLISECOND:1e-6,MICROSECOND:.001,NANOSECOND:1},RADIAN:{RADIAN:1,DEGREE:57.2957795},DEGREE:{RADIAN:.0174532925,DEGREE:1},NEWTON:{NEWTON:1}};Object.defineEnum(_,"Unit",["METER","CENTIMETER","MILLIMETER","MICROMETER","INCH","POINT","PICA","DIP","SECOND","MILLISECOND","MICROSECOND","NANOSECOND","RADIAN","DEGREE","NEWTON","NORMALIZED","LOGICAL"]),Object.defineEnum(_,"Metric",["LENGTH","TIME","FORCE","ANGLE","NORMALIZED","LOGICAL","DIMENSIONLESS"]);const F=Object.freeze({LENGTH:_.Unit.METER,TIME:_.Unit.SECOND,FORCE:_.Unit.NEWTON,ANGLE:_.Unit.RADIAN,NORMALIZED:_.Unit.NORMALIZED,LOGICAL:_.Unit.LOGICAL});_.getChannelResolution=function(e,t=1){let i=1,r=_.getUnitMetric(e);return r!=_.Metric.NORMALIZED&&r!=_.Metric.LOGICAL&&(i=_[F[r.name].name][e.name]/t),i},_.convert=function(e,t,i,r){return t?i*_[F[e.name].name][r.name]/t:i},_.convertAny=function(e,t,i,r){return e*_[t.name][i.name]/r},_.getUnitMetric=function(e){switch(e){case _.Unit.METER:case _.Unit.CENTIMETER:case _.Unit.MILLIMETER:case _.Unit.MICROMETER:case _.Unit.INCH:case _.Unit.POINT:case _.Unit.PICA:case _.Unit.DIP:return _.Metric.LENGTH;case _.Unit.SECOND:case _.Unit.MILLISECOND:case _.Unit.MICROSECOND:case _.Unit.NANOSECOND:return _.Metric.TIME;case _.Unit.RADIAN:case _.Unit.DEGREE:return _.Metric.ANGLE;case _.Unit.NEWTON:return _.Metric.FORCE;case _.Unit.NORMALIZED:return _.Metric.NORMALIZED;case _.Unit.LOGICAL:return _.Metric.LOGICAL;default:throw console.warn(e),new Error("Invalid unit found")}},_.getUnit=function(e){return F[e.name]},_.convertValue=function(e,t,i){return e*_[t.name][i.name]},Object.freeze(_);class B extends u{constructor(e,t,i,r,s){if(super(),t==B.Metric.DIMENSIONLESS)i=1;else if(isNaN(i)){let e=_.getUnit(t);i=_.getChannelResolution(e)}this.type=e,this.metric=t,this.resolution=i,this.min=r,this.max=s,e==B.Type.TIMESTAMP?this.precision=0:this.precision=2,Object.defineProperty(this,"name",{get:function(){return O.getEnumValueName(this.type.substring(this.type.lastIndexOf("/")+1))}})}getMD5Message(){if(!this.context)throw new Error("ID generation failed. This channel do not belongs to SensorChannelsContext yet");if(!Object.isFrozen(this.context)&&!Object.isFrozen(this))throw new Error("ID generation failed. Underlying SensorChannelsContext do not belongs to any SensorContext yet");let e=[];return e.push("SensorChannel"),e.push(this.context.inkProvider?this.context.inkProvider.id:""),e.push(this.context.device.id),e.push(this.type),e.push(this.metric.name),e.push(this.resolution.toFixed(4)),e.push((this.min||0).toFixed(4)),e.push((this.max||0).toFixed(4)),e.push(this.precision.toString()),e}static createCustomChannel(e,t,i,r,s,n){let o=new B(e,i,r,s,n);return o.precision=t,o}static createDefaultInstance(e,t){let i,r,s;switch(e){case B.Type.X:case B.Type.Y:case B.Type.Z:case B.Type.RADIUS_X:case B.Type.RADIUS_Y:i=_.Unit.DIP;break;case B.Type.TIMESTAMP:i=_.Unit.MILLISECOND;break;case B.Type.PRESSURE:i=_.Unit.NORMALIZED,r=0,s=1;break;case B.Type.ALTITUDE:case B.Type.AZIMUTH:case B.Type.ROTATION:i=_.Unit.RADIAN,r=0,s=2*Math.PI;break;default:console.error(`SensorChannel: createDefaultInstance fails with ${e} type`)}let n=_.getChannelResolution(i),o=_.getUnitMetric(i),a=new B(e,o,n,r,s);return a.unit=i,e!=B.Type.X&&e!=B.Type.Y||t.type!=c.Type.MOUSE||(a.precision=0),a}}B.defaults=Object.freeze({PEN:["X","Y","TIMESTAMP","PRESSURE","ALTITUDE","AZIMUTH","ROTATION"],TOUCH:["X","Y","TIMESTAMP","PRESSURE","RADIUS_X","RADIUS_Y","ROTATION"],MOUSE:["X","Y","TIMESTAMP"]}),B.Type={X:"will://input/3.0/channel/X",Y:"will://input/3.0/channel/Y",Z:"will://input/3.0/channel/Z",TIMESTAMP:"will://input/3.0/channel/Timestamp",PRESSURE:"will://input/3.0/channel/Pressure",RADIUS_X:"will://input/3.0/channel/RadiusX",RADIUS_Y:"will://input/3.0/channel/RadiusY",ALTITUDE:"will://input/3.0/channel/Altitude",AZIMUTH:"will://input/3.0/channel/Azimuth",ROTATION:"will://input/3.0/channel/Rotation"},B.Metric=_.Metric;class U extends u{constructor(e,t){super(),this.device=e.freeze(),this.inkProvider=Object.freeze(t);let i,r,s=[];Object.defineProperty(this,"channels",{get:function(){return s},set:function(e){this.invalidateID(),s=[],e.forEach((e=>this.add(e)))},enumerable:!0}),Object.defineProperty(this,"layout",{get:function(){return s.map((e=>e.name))},set:function(e){this.invalidateID(),s=s.filter((t=>e.includes(t.name)))},enumerable:!0}),Object.defineProperty(this,"samplingRate",{get:function(){return i},set:function(e){this.invalidateID(),i=e},enumerable:!0}),Object.defineProperty(this,"latency",{get:function(){return r},set:function(e){this.invalidateID(),r=e},enumerable:!0})}getMD5Message(){if(!Object.isFrozen(this))throw new Error("ID generation failed. SensorChannelsContext do not belongs to any SensorContext yet");let e=["SensorChannelsContext",...this.channels.map((e=>e.id))];return e.push(this.samplingRate||""),e.push(this.latency||""),e.push(this.inkProvider?this.inkProvider.id:""),e.push(this.device.id),e}add(e){if((e.type==B.Type.X||e.type==B.Type.Y)&&!this.inkProvider)throw new Error("inkProvider is not found. Required for ink group.");e.context=this,Object.freeze(e),this.channels.push(e)}get(e){return this.channels.filter((t=>t.id==e)).first}static createDefaultInstance(e,t){let i=new U(e,t);return i.channels=B.defaults[t.type.name].map((e=>B.createDefaultInstance(B.Type[e],t))),i}}class j extends u{constructor(){super();let e=[];Object.defineProperty(this,"channelsContexts",{get:function(){return e},set:function(t){this.invalidateID(),e=t},enumerable:!0})}getMD5Message(){if(!Object.isFrozen(this))throw new Error("ID generation failed. SensorContext do not belongs to any InputContext yet");return["SensorContext",...this.channelsContexts.map((e=>e.id))]}addContext(e){if(!this.channelsContexts.includes(e)){if(this.channelsContexts.filter((t=>t.device==e.device)).length>0)throw new Error(`Already exists channelsContext with device ${e.device.id}. Device should be unique in scope of SensorContext.`);e.inkProvider&&(this.inkChannelsContext=e),Object.freeze(e),this.channelsContexts.push(e)}}getContext(e){return this.channelsContexts.filter((t=>t.id==e)).first}getContextByChannelID(e){return this.channelsContexts.filter((t=>t.get(e))).first}static createDefaultInstance(e,t){let i=new j;return i.addContext(U.createDefaultInstance(e,t)),i}}class G extends u{constructor(e,t){super(),this.environment=Object.freeze(e),this.sensorContext=Object.freeze(t)}getMD5Message(){return["InputContext",this.environment.id,this.sensorContext.id]}addChannelsContext(e){this.sensorContext.addContext(e)}static createDefaultInstance(e,t,i){let r=j.createDefaultInstance(t,i);return new G(e,r)}}class Y extends u{constructor(e){super(),this.created=Date.now(),this.inkState=Y.InkState.PLANE,this.context=e,this.streams=[]}add(e){if(!this.context.sensorContext.getContextByChannelID(e.channels.first.id))throw new Error("SensorContext do not contains information about SensorChannelsContext corresponding with this stream");e.ink&&(this.inkStream=e),this.streams.push(e)}}Object.defineEnum(Y,"InkState",["PLANE","HOVERING","IN_VOLUME","VOLUME_HOVERING"]);class z{constructor(e){this.channels=e,this.data=[],this.ignoredIndex=[],Object.defineProperty(this,"layout",{value:e.map((e=>e.name)),enumerable:!0}),Object.defineProperty(this,"stride",{value:this.layout.length,enumerable:!0}),Object.defineProperty(this,"length",{get:function(){return this.data.length/this.stride},enumerable:!0}),this.ink=this.layout.includes("X")&&this.layout.includes("Y")}add(e,t){t&&this.ignoredIndex.push(this.length),this.channels.forEach((t=>{let i=O.getPropName(t.name),r=e[i];if(t.type==B.Type.ALTITUDE&&!("altitude"in e))throw new Error("SensorStream input data do not provides altitude");if(t.type==B.Type.AZIMUTH&&!("azimuth"in e))throw new Error("SensorStream input data do not provides azimuth");this.data.push(r)}))}get(e){if(e>=this.length||e<0)throw new Error(`Index ${e} out of range - (0, ${this.length-1})`);let t={};for(let i=0;i<this.stride;i++){let r=this.channels[i],s=O.getPropName(r.name),n=e*this.stride;t[s]=this.data[n+i]}return t}getPipelineMapping(){let e=[];if(this.ignoredIndex.length>0)for(let t=0;t<this.length;t++)this.ignoredIndex.includes(t)||e.push(t);return e}}class X extends u{constructor(){super(),this.props={},this.devices=[]}freeze(){return Object.freeze(this.props),this}getMD5Message(){if(!Object.isFrozen(this.props)&&!Object.isFrozen(this))throw new Error("ID generation failed. InputDevice do not belongs to any SensorChannelsContext yet");return["InputDevice",u.getMD5Tokens(this.props)]}link(e){this.devices.push(e)}getInkInputProvider(e){return new c(e)}getInkSensorContext(e){let t=this.getInkInputProvider(e);return j.createDefaultInstance(this,t)}openStream(e){if(!this.environment)throw new Error("Environment is not configured for current InputDevice instance");let t=c.Type[e.pointer.type.toUpperCase()],i=this.getInkSensorContext(t),r=new G(this.environment,i);i.inkChannelsContext.layout=X.getLayout(e),this.sensorData=new Y(r),this.sensorData.add(new z(i.inkChannelsContext.channels)),this.sampleTimestamp=e.timestamp,this.devices.forEach((e=>e.openStream(this.sensorData)))}add(e,t){if(!this.sensorData)throw new Error("Open ink stream not found");e.timestamp-=this.sampleTimestamp,this.sensorData.inkStream.add(e,t)}closeStream(e){let t=this.sensorData;return this.devices.forEach((t=>t.closeStream(e))),this.sensorData=null,this.sampleTimestamp=0,e?null:t}static getLayout(e){let t=[];return Object.keys(B.Type).forEach((i=>{let r,s=B.Type[i];r=s==B.Type.ALTITUDE?"tiltX":s==B.Type.AZIMUTH?"tiltY":O.getPropName(i),X.isValidInput(r,e)&&t.push(i)})),t}static isValidInput(e,t){let i=!1;return isFinite(t[e])&&(i=!0,"pressure"==e?(i=t.pressure>0,i&&t.pointer&&("mouse"==t.pointer.type?i=!1:"touch"==t.pointer.type&&(i=.5!==t.pressure&&1!==t.pressure))):"tiltX"==e||"tiltY"==e?i=0!=t.tiltX||0!=t.tiltY:"radiusX"==e||"radiusY"==e?i=t.radiusX!=t.radiusY||parseInt(t.radiusX)!=t.radiusX:"rotation"==e&&(i=0!=t.rotation)),i}static async createInstance(e){let t=new this(...Array.from(arguments).slice(1));if(void 0===M)t.props["dev.graphics.resolution"]=`${screen.width}x${screen.height}`;else{let e=await M.system(),i=await M.cpu(),r=await M.graphics(),s=r.displays.filter((e=>e.main))[0],n=r.controllers[0];t.props["dev.id"]=e.uuid.toLowerCase(),t.props["dev.manufacturer"]=e.manufacturer,t.props["dev.model"]=e.model,t.props["dev.cpu"]=`${i.manufacturer} ${i.brand} ${i.speed} - ${i.cores} core(s)`,t.props["dev.graphics.display"]=`${s.model} ${s.currentResX}x${s.currentResY} (${s.pixeldepth} bit)`,t.props["dev.graphics.adapter"]=`${n.model} ${n.vram} GB`}return t.environment=await L.createInstance(e),t}}class ${static createCircle(e=20,t=1,i={x:0,y:0}){return $.createEllipse(e,t,t,i)}static createEllipse(e=20,t=1,i=.5,r={x:0,y:0}){let s=[],n=2*Math.PI/e;for(let o=0;o<e;o++){let e=o*n,a=t*Math.cos(e),l=i*Math.sin(e);s.push(r.x+a,r.y+l)}return s.toFloat32Array()}static createStar(e=5,t=.5){let i=[],r=2*Math.PI/e;for(let s=0;s<e;s++){let e=s*r,n=1*Math.cos(e),o=1*Math.sin(e),a=t*Math.cos(e+r/2),l=t*Math.sin(e+r/2);i.push(n,o,a,l)}return i.toFloat32Array()}}let V;class H{constructor(){if(V)throw new Error("URIResolver instance already available");V=this,this.init()}init(){throw new Error("URIResolver: init should be implemented")}get(e){return this[e]}register(e,t){this[e]=t}resolve(e){let t;if(e.includes("?")){let i=this[e.split("?")[0]];if(i){let r=e.split("?")[1],s=[];r.split("&").forEach((e=>{let t=e.split("=")[1],i=parseFloat(t);isFinite(i)?t=i:"true"==t?t=!0:"false"==t&&(t=!1),s.push(t)})),t=function(){return i(...Array.from(arguments).concat(s))}}}else t=this[e];if(!t)throw new Error(`Failed to resolve ${e}`);return t}}Object.defineProperty(H,"instance",{get:()=>V,enumerable:!0});class Z{static encode(e,t=Z.Encoding.AUTO){let i;if(t==Z.Encoding.AUTO&&(t="undefined"==typeof Buffer?Z.Encoding.ARRAY:Z.Encoding.BUFFER),t==Z.Encoding.NONE)i=e;else if(t==Z.Encoding.ARRAY)i=e.toArray();else{if("undefined"==typeof Buffer)throw new Error("Buffer not found, unable to serialize. Please provide Buffer in global scope.");let r=Buffer.from(e.buffer);switch(t){case Z.Encoding.BUFFER:i=r.toJSON();break;case Z.Encoding.BASE64:i=r.toString("base64");break;default:throw new Error(`Invalid encoding provided: ${t.name}`)}}return{encoding:t.name,type:e.constructor.name,points:i}}static decode(e){let t,i=Z.Encoding[e.encoding];if(i==Z.Encoding.NONE)t=e.points;else if(i==Z.Encoding.ARRAY)t=e.points.toFloat32Array();else{if("undefined"==typeof Buffer)throw new Error("Buffer not found, unable to deserialize. Please provide Buffer in global scope.");let r;switch(i){case Z.Encoding.BUFFER:r=Buffer.from(e.points);break;case Z.Encoding.BASE64:r=Buffer.from(e.points,"base64");break;default:throw new Error(`Invalid encoding provided: ${i.name}`)}let s=new Uint8Array(r);t=new globalThis[e.type](s.buffer)}return t}static isTypedArrayData(e){return e&&e.encoding&&e.type&&e.type.endsWith("Array")}}Object.defineEnum(Z,"Encoding",["AUTO","NONE","ARRAY","BUFFER","BASE64"]);class q{constructor(e,t){this.name=e,Object.defineProperty(this,"value",{get:function(){if(!t){if(!this.name)throw new Error("Resource descriptor identifier not found. Cannot resolve resource content.");if("function"==typeof this.resolve&&(t=this.resolve(this.name)),!t){if(!H.instance)throw new Error(`Resource URI ${this.name} cannot be resolved. URIResolver not implemented yet. Please implement and instantiate.`);t=H.instance.resolve(this.name)}if(!t)throw new Error(`Resource URI ${this.name} cannot be resolved. Please provide resource definition in URIResolver init implementation.`)}return t},set:function(e){t=e},enumerable:!0})}toJSON(){let e=this.value;return ArrayBuffer.isTypedArray(e)?e=Z.encode(e,this.encoding):"function"==typeof e&&(e=e()),{name:this.name,value:e}}static fromJSON(e){let t=e.value;return Z.isTypedArrayData(t)&&(t=Z.decode(t)),new q(e.name,t)}static getInstance(e,t){return new q(t,e)}}class W{constructor(e,t=0){this.size=t,Object.defineProperty(this,"descriptor",{value:{shape:{}},enumerable:!0}),Object.defineProperty(this,"shape",{get:function(){return e||("function"==typeof(e=this.descriptor.shape.value)&&(e=e()),W.fitShape(e)),e},set:function(t){if(!t)throw new Error("BrushPrototype: shape not found");Array.isArray(t)&&(t=t.toFloat32Array()),"string"==typeof t?t=new q(t):t instanceof Float32Array?t=q.getInstance(t):t instanceof q||(t=new q(t.name,t.value)),e=null,this.descriptor.shape=t,this.descriptor.shape.resolve=W.resolve,Object.defineProperty(this.descriptor.shape,"encoding",{get:()=>this.encoding,enumerable:!0})},enumerable:!0}),this.shape=e}toJSON(){return{shape:this.descriptor.shape.toJSON(),size:this.size}}static fromJSON(e){let t=q.fromJSON(e.shape);return new W(t,e.size)}static create(e,t=0,...i){let r,s=e;switch(e){case W.Type.CIRCLE:r=$.createCircle(...i),s+=`?precision=${i[0]||""}&radius=${i[1]||""}`;break;case W.Type.ELLIPSE:r=$.createEllipse(...i),s+=`?precision=${i[0]||""}&radiusX=${i[1]||""}&radiusY=${i[2]||""}`;break;case W.Type.STAR:r=$.createStar(...i),s+=`?points=${i[0]||""}&internalRadius=${i[1]||""}`;break;default:console.error(`Brush2D: createShape fails with ${e} type`)}return new W({name:s,shape:r},t)}static resolve(e){let t,i=e.split("?"),r=i.first;if(Object.values(W.Type).includes(r)){let e=i.last.split("&"),s={};switch(e.forEach((e=>{s[e.substring(0,e.indexOf("="))]=e.substring(e.indexOf("=")+1)})),r){case W.Type.CIRCLE:{let e=s.precision?parseInt(s.precision):void 0;t=$.createCircle(e);break}case W.Type.ELLIPSE:{let e=s.precision?parseInt(s.precision):void 0,i=s.radiusX?parseFloat(s.radiusX):void 0,r=s.radiusY?parseFloat(s.radiusY):void 0;t=$.createEllipse(e,i,r);break}case W.Type.STAR:{let e=s.points?parseInt(s.points):void 0,i=s.internalRadius?parseFloat(s.internalRadius):void 0;t=$.createStar(e,i);break}default:console.error(`Brush2D: createShape fails with ${r} type`)}}return t}static fitShape(e){W.centerShape(e);let t=S.ofEdges(-1,-1,1,1),i=S.ofPolygon(e),r=t.width/i.width,s=t.height/i.height,n=r>0&&s>0?Math.min(r,s):Math.max(r,s);for(let t=0;t<e.length;t+=2)e[t]*=n,e[t+1]*=n}static centerShape(e){let t=S.ofPolygon(e);for(let i=0;i<e.length;i+=2)e[i]-=t.center.x,e[i+1]-=t.center.y}}async function K(e,t="binary",i={}){if(e instanceof Uint8Array)return e;let r,s=await fetch(e,Object.assign({mode:"no-cors"},i));if("json"==t)r=await s.json();else if("text"==t)r=await s.text();else if("binary"==t){let e=await s.arrayBuffer();r=new Uint8Array(e)}else{let e=await s.blob();r="base64"==t?await function(e){return new Promise(((t,i)=>{let r=new FileReader;r.readAsDataURL(e),r.onloadend=()=>t(r.result),r.onerror=i}))}(e):e}return r}async function J(e){let t;return t="string"==typeof e||"undefined"==typeof createImageBitmap?await function(e){return new Promise(((t,i)=>{let r,s=new Image;s.crossOrigin="anonymous",s.onload=()=>{if(o.type2D==o.Type2D.OFFSCREEN){const e=new OffscreenCanvas(s.width,s.height);e.getContext("2d").drawImage(s,0,0),t(e)}else r&&URL.revokeObjectURL(r),t(s)},s.onerror=i,"string"==typeof e?s.src=e:o.type2D==o.Type2D.OFFSCREEN?e instanceof Uint8Array?s.src=Buffer.from(e):e instanceof OffscreenCanvas?t(e):s.src=e:(e instanceof Uint8Array&&(e.byteLength!=e.buffer.byteLength&&(e=e.slice()),e=e.buffer),e instanceof ArrayBuffer&&(e=new Blob([e],{type:"image/png"})),r=URL.createObjectURL(e),s.src=r)}))}(e):e instanceof ArrayBuffer||e instanceof Uint8Array?await createImageBitmap(new Blob([e],{type:"image/png"})):await createImageBitmap(e),t}W.Type={ELLIPSE:"will://brush/3.0/shape/Ellipse",CIRCLE:"will://brush/3.0/shape/Circle",STAR:"will://brush/3.0/shape/Star"};var Q=Object.freeze({__proto__:null,loadFile:K,loadImage:J,saveAs:function(e,t,i="application/octet-stream"){let r;if(e instanceof Blob)r=URL.createObjectURL(e);else{let t;e instanceof ArrayBuffer?t=[e]:e.buffer?(e.byteLength<e.buffer.byteLength&&(e=new Uint8Array(e)),t=[e.buffer]):e instanceof Array&&(t=e);let s=new Blob(t,{type:i});r=URL.createObjectURL(s)}let s=document.createElement("a");s.href=r,s.download=t,s.appendChild(document.createTextNode(t)),s.style.display="none",document.body.appendChild(s),s.click(),setTimeout((function(){URL.revokeObjectURL(r),s.remove()}),911)}});class ee{constructor(e,t,i,r=1){isFinite(i)&&(r=i,i=void 0),r<=0&&(console.warn(`Invalid spacing found ${r}. It should be positive number.`),r=1),this.name=e,Object.defineProperty(this,"shape",{get:function(){return t},set:function(e){if(e instanceof Float32Array&&(e=new W(e)),!this.validate(e))throw console.warn(e),new Error("Brush2D: Invalid shape found");Array.isArray(e)&&(1==e.length?e=e.first:e.sort(O.comparator({sortBy:"size",sortOrder:"asc"}))),t=e},enumerable:!0}),this.shape=t,this.fill=i,this.spacing=r,Object.defineProperty(this,"encoding",{get:function(){},set:function(e){if(Array.isArray(this.shape))for(let t of this.shape)t.encoding=e;else this.shape.encoding=e},enumerable:!0})}validate(e){let t=!1;if(Array.isArray(e)){for(let i of e)if(t=i instanceof W,!t)break}else t=e instanceof W;return t}async configure(e){if(this.pattern||!this.fill)return;if(!(e instanceof CanvasRenderingContext2D||e instanceof OffscreenCanvasRenderingContext2D))throw new Error("ctx is not instance of CanvasRenderingContext2D or OffscreenCanvasRenderingContext2D");let t=await J(this.fill);this.pattern=e.createPattern(t,"repeat")}selectShape(e){let t;if(Array.isArray(this.shape)){for(let i=1;i<this.shape.length;i++)if(this.shape[i].size>e){t=this.shape[i-1];break}t||(t=this.shape.last)}else t=this.shape;return t.shape}toJSON(){let e=Array.isArray(this.shape)?this.shape:[this.shape];return{type:"Brush2D",name:this.name,spacing:this.spacing,shape:e.map((e=>e.toJSON()))}}static fromJSON(e){let t=1==e.shape.length?W.fromJSON(e.shape[0]):e.shape.map((e=>W.fromJSON(e)));return new ee(e.name,t,e.spacing)}}class te{static get excludedProps(){return[I.Property.D_X,I.Property.D_Y]}static get posProps(){return[I.Property.X,I.Property.Y,I.Property.Z]}static get colorProps(){return[I.Property.RED,I.Property.GREEN,I.Property.BLUE,I.Property.ALPHA]}static get transformProps(){return[I.Property.ROTATION,I.Property.SCALE_X,I.Property.SCALE_Y,I.Property.SCALE_Z,I.Property.OFFSET_X,I.Property.OFFSET_Y,I.Property.OFFSET_Z]}constructor(){this.state={}}isLayoutPart(e){if(te.posProps.includes(e))return this.inputLayout.includes(e.name);if(this.brush instanceof ee&&te.colorProps.includes(e))return!1;if(te.excludedProps.includes(e))return!1;if(te.transformProps.includes(e))return!1;let t=!1,i=O.getPropName(e.name),r=this.dynamics[i];if(r&&!r.disabled)if(r.dependencies&&r.dependencies.length>0){let e=this.inputLayout.map((e=>B.Type[e]));t=r.dependencies.filter((t=>e.includes(t))).length>0}else t=!0;return t}calculate(e,t,i){this.point=t.createPathPoint();for(let e in this.statics)this.point[e]=this.statics[e];return this.calculateProperty(I.Property.SIZE,e,t,i),te.colorProps.forEach((r=>this.calculateProperty(r,e,t,i))),te.transformProps.forEach((r=>this.calculateTransform(r,e,t,i))),this.point}calculateProperty(e,t,i,r){if(!this.layout.includes(e))return;let s,n=O.getPropName(e.name),o=this.dynamics[n],a=this.state[n];if("function"==typeof a.resolve)s=a.resolve(t,i,r);else if(this.inputLayout.includes("PRESSURE")){let e=i.pressure||t.pressure/2;s=te.mapTo(e,a.pressure,o.value)}else{let e=i.speed(t,r);s=te.mapTo(e,a.velocity,o.value)}this.point[O.getPropName(e.name)]=s}calculateTransform(e,t,i,r){if(!this.layout.includes(e))return;let s,n=O.getPropName(e.name),o=this.dynamics[n],a=this.state[n];if("function"==typeof a.resolve)s=a.resolve(t,i,r);else{let r=o.dependencies||[];if(e==I.Property.ROTATION)if(r.includes(B.Type.ROTATION)&&this.inputLayout.includes("ROTATION"))s=i.rotation;else{if(!r.includes(B.Type.AZIMUTH)||!this.inputLayout.includes("AZIMUTH"))throw new Error(`Property ${e.name} is not configured properly. Dependencies are expected or resolve handler.`);s=i.computeNearestAzimuthAngle(t)}else if(r.includes(B.Type.ALTITUDE)&&this.inputLayout.includes("ALTITUDE")){i.cosAltitude||(i.cosAltitude=Math.cos(i.altitude));let e=i.cosAltitude;s=te.mapTo(e,a.altitude,o.value)}else{if(e!=I.Property.SCALE_X&&e!=I.Property.SCALE_Y||!r.includes(B.Type.RADIUS_X)&&!r.includes(B.Type.RADIUS_Y)||!this.inputLayout.includes("RADIUS_X")||!this.inputLayout.includes("RADIUS_Y"))throw new Error(`Property ${e.name} is not configured properly. Dependencies are expected or resolve handler.`);{let t=e==I.Property.SCALE_X?"radiusX":"radiusY",r=i[t];s=te.mapTo(r,a[t],o.value)}}}if(isNaN(s))throw new Error(`Property ${e.name} has no value`);this.point[O.getPropName(e.name)]=s}reset(e,t,i,r={},s={}){if(this.brush=t,this.dynamics=r,this.statics={},this.color=new m(0,0,0),this.inputLayout=X.getLayout(e),this.layout=I.Property.values.filter((e=>this.isLayoutPart(e))),this.debug&&console.log(e.pointer.type,this.inputLayout,this.layout.map((e=>e.name)),e),"size"in s){if(this.isLayoutPart(I.Property.SIZE))throw new Error("Size should exist only in dynamics or statics");this.statics.size=s.size}else{if(!this.isLayoutPart(I.Property.SIZE))throw new Error("Size not found. Should be set through dynamics or statics.");if(0==e.pressure&&"pen"==e.pointer.type)throw new Error("Hover point detected. Should be handeled manually.")}te.colorProps.forEach((e=>{let t=O.getPropName(e.name);this.isLayoutPart(e)?this.color[t]=i[t]:(this.statics[t]=isFinite(s[t])?s[t]:i[t],this.color[t]=this.statics[t])})),te.transformProps.forEach((e=>{if(this.isLayoutPart(e))return;let t=O.getPropName(e.name);isFinite(s[t])&&(this.statics[t]=s[t])})),this.resetState(e)}resetState(e){this.state={},[I.Property.SIZE].concat(te.colorProps).forEach((e=>{if(!this.layout.includes(e))return;let t=O.getPropName(e.name),i=this.dynamics[t],r={};if(i.resolve)r.resolve=te.resolveAction(i.resolve);else{if(!i.value)throw new Error(`PathPointContext: dynamics ${t} value property not found`);if(i.value.min>i.value.max)throw new Error(`PathPointContext: dynamics ${t} invalid value range found: ${i.value.min} - ${i.value.max}`);let e=this.clonePropertySettings(i.velocity,0,4e3);e.remap=te.resolveAction(e.remap||i.value.remap);let s=this.clonePropertySettings(i.pressure,0,1);s.remap=te.resolveAction(s.remap||i.value.remap),r.velocity=te.validateRange(t,e,{min:0,max:3e4}),r.pressure=te.validateRange(t,s,{min:0,max:1})}this.state[t]=r})),te.transformProps.forEach((t=>{if(!this.layout.includes(t))return;let i=O.getPropName(t.name),r=this.dynamics[i],s={};if(r.resolve)s.resolve=te.resolveAction(r.resolve);else if(r.dependencies){if(r.dependencies.includes(B.Type.ALTITUDE)){if(!r.value)throw new Error(`PathPointContext: dynamics ${i} value property not found`);if(r.value.min>r.value.max)throw new Error(`PathPointContext: dynamics ${i} invalid value range found: ${r.value.min} - ${r.value.max}`);let e=this.clonePropertySettings(r.altitude,0,Math.PI/2);e.remap=te.resolveAction(e.remap||r.value.remap),s.altitude=te.validateRange(i,e,{min:0,max:Math.PI/2})}if(t==I.Property.SCALE_X&&r.dependencies.includes(B.Type.RADIUS_X)||t==I.Property.SCALE_Y&&r.dependencies.includes(B.Type.RADIUS_Y)){if(!r.value)throw new Error(`PathPointContext: dynamics ${i} value property not found`);let n=t==I.Property.SCALE_X?"radiusX":"radiusY",o=e[n]<=1?0:1,a=e[n]<=1?1:50,l=e[n]<=1?{min:0,max:1,remap:r[n].remap}:r[n],h=this.clonePropertySettings(l,o,a);h.remap=te.resolveAction(h.remap||r.value.remap),s[n]=te.validateRange(i,h,{min:o,max:a})}}this.state[i]=s}))}clonePropertySettings(e,t,i){let r;return e?(r=Object.clone(e),"min"in r||(r.min=t),"max"in r||(r.max=i)):r={min:t,max:i},r}static resolveAction(e){if(e)return"string"==typeof e?e=new q(e):"function"==typeof e?e=q.getInstance(e):e instanceof q||(e=new q(e.name,e.value)),e.value}static validateRange(e,t,i){if(t.min<i.min||t.max>i.max)throw new Error(`${e} config is out of range - (${t.min}, ${t.max}), expected values interval - (${i.min}, ${i.max})`);if(t.min>t.max)throw new Error(`${e} min ${t.min} exceeds max ${t.max}`);return t}static mapTo(e,t,i){let r=(O.clamp(e,t)-t.min)/(t.max-t.min);return t.remap&&(r=t.remap(r)),i.min+r*(i.max-i.min)}}class ie{constructor(){this.path=[],this.firstSegment=!1,this.lastSegment=!0;let e=!1;Object.defineProperty(this,"keepAllData",{get:function(){return e},set:function(t){e=t,this.reset()},enumerable:!0}),Object.defineProperty(this,"allData",{get:function(){return this.getOutput(this.path.slice(),ie.OutputType.ALL_DATA)},enumerable:!0})}add(e,t,i,r){if(e&&!this.lastSegment)throw new Error("Cannot start new segment before the previous is ended");this.debug&&console.log(this.constructor.name,e,t),this.firstSegment=e,this.lastSegment=t;let s=this.addImpl(i,r);return this.keepAllData&&this.path.push(...s.added),{added:this.getOutput(s.added,ie.OutputType.ADDITION),predicted:this.getOutput(s.predicted,ie.OutputType.PREDICTION)}}get(e){this.reset(),this.firstSegment=!0,this.lastSegment=!0;let t=this.getImpl(e,ie.OutputType.PROCESSOR);return this.getOutput(t,ie.OutputType.PROCESSOR)}addImpl(e,t){throw new Error("Abstract method addImpl of DataSequenceProcessor should be implemented")}getImpl(e){throw new Error("Abstract method getImpl of DataSequenceProcessor should be implemented")}getOutput(e,t){return e}reset(){this.path.clear(),this.firstSegment=!1,this.lastSegment=!0}}let re;Object.defineEnum(ie,"OutputType",["ADDITION","PREDICTION","ALL_DATA","PROCESSOR"]),re=o.commonJS?require("clipper-lib"):globalThis.ClipperLib;const{Clipper:se,Paths:ne,Path:oe,ClipType:ae,PolyType:le,PolyFillType:he}=re;class de{constructor(e){let t=new ne;"number"==typeof e[0]&&(e=[e]);let i=S.ofPolygons(e),r=65534/(i.width+1e-16),s=65534/(i.height+1e-16),n=Math.floor(Math.min(r,s)),o=i.left+32767/n,a=i.top+32767/n;e.forEach((e=>{let i=new oe;for(let t=0;t<e.length;t+=2){let r=(e[t]-o)*n,s=(e[t+1]-a)*n,l=r<0?Math.ceil(r):Math.floor(r),h=s<0?Math.ceil(s):Math.floor(s);i.push({X:l,Y:h})}t.push(i)})),this.subject=t,this.solution=new ne,this.bounds=i,this.transform={scale:n,offsetX:o,offsetY:a},this.filter=new Set}toPath2D(e){let t=[];return this.lastPoint={},this.lastSize=0,this.solution.forEach((i=>{let r=this.flatPath(i,e);r.length>0&&t.push(r)})),this.filter.clear(),t}flatPath(e,t){let i=[];return e.forEach(((e,r)=>{t?(this.filter.add(`${e.X}-${e.Y}`),this.filter.size>this.lastSize?(i.push(e.X/this.transform.scale+this.transform.offsetX,e.Y/this.transform.scale+this.transform.offsetY),this.lastSize++):this.debug&&console.warn(`Duplicate point detected: {${e.X}, ${e.Y}}`)):this.lastPoint.X!=e.X||this.lastPoint.Y!=e.Y?(i.push(e.X/this.transform.scale+this.transform.offsetX,e.Y/this.transform.scale+this.transform.offsetY),this.lastPoint=e):this.debug&&console.warn(`Duplicate point detected: {${e.X}, ${e.Y}}`)})),i.length<6&&(this.debug&&console.warn(`Invalid contour found: [${i.join(", ")}]`),i.clear()),i}apply(e){let t=new ne;return"number"==typeof e[0]&&(e=[e]),e.forEach((e=>{let i=new oe;for(let t=0;t<e.length;t+=2){let r=(e[t]-this.transform.offsetX)*this.transform.scale,s=(e[t+1]-this.transform.offsetY)*this.transform.scale,n=r<0?Math.ceil(r):Math.floor(r),o=s<0?Math.ceil(s):Math.floor(s);i.push({X:n,Y:o})}t.push(i)})),t}}class ue{static union(e,t){let i=new de(e),r=new se;return r.StrictlySimple=!0,r.AddPaths(i.subject,le.ptSubject,!0),r.Execute(ae.ctUnion,i.solution,he.pftNonZero,he.pftNonZero),i.toPath2D(t)}static intersection(e,t){e instanceof de||(e=new de(e)),e.clip=e.apply(t);let i=new se;return i.StrictlySimple=!0,i.AddPaths(e.subject,le.ptSubject,!0),i.AddPaths(e.clip,le.ptClip,!0),i.Execute(ae.ctIntersection,e.solution,he.pftNonZero,he.pftNonZero),e.solution.length>0?e:null}static createClipperPath(e,t=32){let i=new oe;i.scale=t;for(let r=0;r<e.length;r++){let s=r*e.stride;i.push({X:Math.round(e.points[s]*t),Y:Math.round(e.points[s+1]*t)})}return i}static containsPoint(e,t){let i={X:Math.round(t.x*e.scale),Y:Math.round(t.y*e.scale)};return 1==se.PointInPolygon(i,e)}}const ce=new m(255,165,0),pe=new m(255,255,0),fe=new m(64,224,208),me=new m(255,0,255),ge=new m(139,0,139),ye=new m(128,0,128),be=new m(255,192,203),Ee=new m(128,128,128);class Pe{constructor(e){this.canvas=e,this.ctx=e.getContext("2d"),this.operations=[];let t=this.refresh.bind(this);this.refresh=O.debounce(t,100)}addOperation(e,...t){this.operations.push({name:e,args:t})}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}refresh(){let e=[];Pe.allocateSegments(e,this.data,0),this.clear();for(let t=e.length-1;t>=0;t--){let i=e[t];i.hulls?i.hulls.forEach((e=>this.drawShape(e,i.color))):this.drawRect(i.bounds,i.color)}this.operations.forEach((e=>this[e.name](...e.args))),this.operations.clear()}drawRect(e,t=Ee.toRGBA(.3)){this.ctx.strokeStyle=`rgba(${t.red}, ${t.green}, ${t.blue}, ${t.alpha})`,this.ctx.strokeRect(e.left,e.top,e.width,e.height)}fillRect(e,t=Ee.toRGBA(.3)){this.ctx.fillStyle=`rgba(${t.red}, ${t.green}, ${t.blue}, ${t.alpha})`,this.ctx.fillRect(e.left,e.top,e.width,e.height)}fillPoint(e,t=5,i=m.BLACK){this.ctx.fillStyle=`rgba(${i.red}, ${i.green}, ${i.blue}, ${i.alpha})`,this.ctx.beginPath(),this.ctx.arc(e.x,e.y,t,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()}drawShape(e,t=ge.toRGBA(.5)){this.ctx.strokeStyle=`rgba(${t.red}, ${t.green}, ${t.blue}, ${t.alpha})`,this.drawPath(e),this.ctx.stroke()}fillShape(e,t=ce.toRGBA(.6)){this.ctx.fillStyle=`rgba(${t.red}, ${t.green}, ${t.blue}, ${t.alpha})`,this.drawPath(e),this.ctx.fill()}drawPath(e){"number"==typeof e[0]&&(e=[e]),this.ctx.beginPath(),e.forEach((e=>{this.ctx.moveTo(e[0],e[1]);for(let t=2;t<e.length;t+=2)this.ctx.lineTo(e[t],e[t+1]);this.ctx.closePath()}))}drawRange(e){e.forEach((e=>this.drawRect(e.bounds,ye)))}drawIntersection(e,t){this.drawShape(e,be),t.forEach((t=>{this.fillShape(t.shape,pe);let i=ue.intersection(t.shape,e);if(i){let e=i.toPath2D();this.fillShape(e,m.BLACK)}}))}drawSelection(e,t,i){this.fillRect(e),this.fillShape(t,ge.toRGBA(.5)),this.fillShape(i)}static allocateSegments(e,t,i){if(t){if(t.bounds){let i=t;0==t.depth?i.color=m.RED:1==t.depth?i.color=fe:2==t.depth?i.color=m.BLUE:3==t.depth?i.color=me:4==t.depth&&(i.color=m.GREEN),e.push(i)}if(t.children)if(10!==i)for(let r=0;r<t.children.length;r++)Pe.allocateSegments(e,t.children[r],i+1);else console.warn("depth 10")}}static getInstance(e,t){if(!e)return;let i=new Pe(e);return Object.defineProperty(i,"data",{get:()=>t.data,enumerable:!0}),i}}class xe extends r.default{constructor(...e){let t;super(...e),"undefined"!=typeof document&&("loading"==document.readyState?addEventListener("DOMContentLoaded",(e=>t=Pe.getInstance(document.getElementById("rbush"),this))):t=Pe.getInstance(document.getElementById("rbush"),this)),Object.defineProperty(this,"canvas",{get:()=>this.debug?t:null,enumerable:!0})}toBBox(e){return{minX:e.bounds.left,minY:e.bounds.top,maxX:e.bounds.right,maxY:e.bounds.bottom}}compareMinX(e,t){return e.bounds.x-t.bounds.x}compareMinY(e,t){return e.bounds.y-t.bounds.y}search(e){return super.search({minX:e.left,minY:e.top,maxX:e.right,maxY:e.bottom})}find(e,t=this.data,i=0,r=[]){if(t){if(t.stroke){let i=!0;Object.keys(e).forEach((r=>{i=i&&t[r]==e[r]})),i&&r.push(t)}if(t.children){if(6!==i){for(let s=0;s<t.children.length;s++)this.find(e,t.children[s]||null,i+1,r);return r}console.warn("depth 6")}}}}class ve{constructor(e,t,i={},r=0,s=1){Array.isArray(t)&&(t=ve.allocateBuffer(t)),Object.defineProperty(this,"layout",{value:e,enumerable:!0}),Object.defineProperty(this,"points",{get:()=>t,enumerable:!0}),Object.defineProperty(this,"stride",{value:e.length,enumerable:!0}),Object.defineProperty(this,"length",{value:t.length/e.length,enumerable:!0}),Object.defineProperty(this,"segmentsCount",{value:this.length-3,configurable:!0,enumerable:!0});const n={},o={};let a={},l=function(e){let t=a[e];return"visibility"==e?"boolean"!=typeof t&&(t=!0):"color"==e&&m.isColor(a)&&(t=m.fromColor(a)),t},h=function(e){let t=l(e);if(null==t)if("color"==e){let e={red:isFinite(a.red)?a.red:i.red,green:isFinite(a.green)?a.green:i.green,blue:isFinite(a.blue)?a.blue:i.blue,alpha:isFinite(a.alpha)?a.alpha:i.alpha};m.isColor(e)&&(t=m.fromColor(e))}else t=i[e];return t},d=function(t,i,r){let s;if(i&&e.includes(I.Property[O.getEnumValueName(t)])){if(!r)throw new Error(`Property ${t} value ${i} is not applicable. This is a dynamic property and is part of the layout.`);console.warn(`Property ${t} value ${i} is not applicable. This is a dynamic property and is part of the layout.`),i=void 0}if("color"==t)!i||i instanceof m||(s=`Property ${t} is not an instance of Color`);else if("blendMode"==t)""==i&&(i=void 0);else if("number"==typeof i)if("size"==t)i<0?s=`Property ${t} with value ${i} is not allowed. Value should be a positive number.`:0==i&&(i=void 0);else if("red"==t||"green"==t||"blue"==t||"alpha"==t){let e="alpha"==t?{min:0,max:1}:{min:0,max:255};i>=e.min&&i<=e.max||(s=`Property ${t} with value ${i} is out of range. Allowd range: [${e.min}, ${e.max}].`)}else"rotation"==t?0==i&&(i=void 0):"scattering"==t&&i<0&&(i=void 0);if(s)throw new Error(s);return i},u=function(e,t){if(null==t&&(t=void 0),d(e,t),"color"==e&&t)return this.red=t.red,this.green=t.green,this.blue=t.blue,void(this.alpha=t.alpha);a[e]=t};if(Object.defineProperties(n,{size:{get:l.bind(n,"size"),set:u.bind(n,"size"),enumerable:!0},red:{get:l.bind(n,"red"),set:u.bind(n,"red"),enumerable:!0},green:{get:l.bind(n,"green"),set:u.bind(n,"green"),enumerable:!0},blue:{get:l.bind(n,"blue"),set:u.bind(n,"blue"),enumerable:!0},alpha:{get:l.bind(n,"alpha"),set:u.bind(n,"alpha"),enumerable:!0},rotation:{get:l.bind(n,"rotation"),set:u.bind(n,"rotation"),enumerable:!0},scaleX:{get:l.bind(n,"scaleX"),set:u.bind(n,"scaleX"),enumerable:!0},scaleY:{get:l.bind(n,"scaleY"),set:u.bind(n,"scaleY"),enumerable:!0},scaleZ:{get:l.bind(n,"scaleZ"),set:u.bind(n,"scaleZ"),enumerable:!0},offsetX:{get:l.bind(n,"offsetX"),set:u.bind(n,"offsetX"),enumerable:!0},offsetY:{get:l.bind(n,"offsetY"),set:u.bind(n,"offsetY"),enumerable:!0},offsetZ:{get:l.bind(n,"offsetZ"),set:u.bind(n,"offsetZ"),enumerable:!0},color:{get:l.bind(n,"color"),set:u.bind(n,"color"),enumerable:!0},blendMode:{get:l.bind(n,"blendMode"),set:u.bind(n,"blendMode"),enumerable:!0},visibility:{get:l.bind(n,"visibility"),set:u.bind(n,"visibility"),enumerable:!0}}),Object.defineProperties(o,{size:{get:h.bind(o,"size"),set:u.bind(n,"size"),enumerable:!0},red:{get:h.bind(o,"red"),set:u.bind(n,"red"),enumerable:!0},green:{get:h.bind(o,"green"),set:u.bind(n,"green"),enumerable:!0},blue:{get:h.bind(o,"blue"),set:u.bind(n,"blue"),enumerable:!0},alpha:{get:h.bind(o,"alpha"),set:u.bind(n,"alpha"),enumerable:!0},rotation:{get:h.bind(o,"rotation"),set:u.bind(n,"rotation"),enumerable:!0},scaleX:{get:h.bind(o,"scaleX"),set:u.bind(n,"scaleX"),enumerable:!0},scaleY:{get:h.bind(o,"scaleY"),set:u.bind(n,"scaleY"),enumerable:!0},scaleZ:{get:h.bind(o,"scaleZ"),set:u.bind(n,"scaleZ"),enumerable:!0},offsetX:{get:h.bind(o,"offsetX"),set:u.bind(n,"offsetX"),enumerable:!0},offsetY:{get:h.bind(o,"offsetY"),set:u.bind(n,"offsetY"),enumerable:!0},offsetZ:{get:h.bind(o,"offsetZ"),set:u.bind(n,"offsetZ"),enumerable:!0},color:{get:h.bind(o,"color"),set:u.bind(n,"color"),enumerable:!0},blendMode:{get:h.bind(o,"blendMode"),set:u.bind(n,"blendMode"),enumerable:!0},visibility:{get:h.bind(o,"visibility"),set:u.bind(n,"visibility"),enumerable:!0}}),!Object.isSealed(i))for(let e in i)void 0!==i[e]&&(i[e]=d(e,i[e],!0));e.includes(I.Property.ROTATION)||"rotation"in i||(i.rotation=void 0),Object.defineProperty(this,"pointProps",{value:Object.seal(i),enumerable:!0}),Object.defineProperty(this,"style",{value:Object.freeze(o),enumerable:!0}),this.clearStyle=()=>{for(let e in a)a[e]=void 0},this.ts=r,this.tf=s,Object.defineProperty(this,"bounds",{get:()=>S.ofSpline(this,this.pointProps.scattering).ceil(),enumerable:!0}),this.restoreBuffer=e=>{if("undefined"!=typeof SharedArrayBuffer&&this.points.buffer instanceof SharedArrayBuffer)throw new Error("Underlying buffer is SharedArrayBuffer and cannot be restored");if(t.buffer.byteLength>0)throw new Error("Cannot restore buffer when underlying buffer is not empty");t=new Float32Array(e)},Object.defineProperty(this,"color",{get:function(){return h("color")},set:function(e){if(!e)throw new Error("Spline color cannot be removed");"red"in this.pointProps&&(this.pointProps.red=e.red),"green"in this.pointProps&&(this.pointProps.green=e.green),"blue"in this.pointProps&&(this.pointProps.blue=e.blue),"alpha"in this.pointProps&&(this.pointProps.alpha=e.alpha)},enumerable:!0}),this.validate()}static allocateBuffer(e){if("undefined"==typeof SharedArrayBuffer)return e.toFloat32Array();{let t=new SharedArrayBuffer(e.length*Float32Array.BYTES_PER_ELEMENT),i=new Float32Array(t);return i.set(e),i}}validate(){if(!this.layout.includes(I.Property.X))throw new Error("Layout doesn't contains required properties X");if(!this.layout.includes(I.Property.Y))throw new Error("Layout doesn't contains required properties Y");if(!this.layout.includes(I.Property.SIZE)&&isNaN(this.pointProps.size))throw new Error("Size information is required. Please provide via layout or through pointProps property.");if(0==this.points.length)throw new Error("Empty spline is not allowed");if(this.points.length%this.stride!=0)throw new Error("Path length doesn't match the stride provided via the layout");this.validateSegmentsCount()}validateSegmentsCount(){if(this.segmentsCount<1)throw new Error("Incompleted spline found. Spline is defined with at least 4 control points.")}clone(){return new ve(this.layout.slice(),this.points.clone(),Object.clone(this.pointProps),this.ts,this.tf)}getPoint(e){if(e>=this.length||e<0)throw new Error(`Index ${e} out of range - (0, ${this.length-1})`);let t=I.createInstance(this.layout,this.points,e,this.style);return this.matrix&&t.transform(this.matrix),t}setPoint(e,t){let i=e*this.stride;this.layout.forEach(((e,r)=>this.points[i+r]=t.getProperty(e)))}getPath(){let e=[],t=this.layout.indexOf(I.Property.X),i=this.layout.indexOf(I.Property.Y);for(let r=0;r<this.length;r++)e.push(this.points[r*this.stride+t],this.points[r*this.stride+i]);return e}slice(e,t,i,r){if(e<0||e>this.length-4)throw new Error(`Invalid fromIndex ${e} found. Ensure that fromIndex range is {0, ${this.length-4}}.`);if(t<1||t+1>this.length)throw new Error(`Invalid toIndex ${t} found. Ensure that fromIndex range is {1, ${this.length}}.`);if(t+1-e<4)throw new Error(`Invalid range {${e}, ${t}} found. At least 4 points are needed to define spline.`);let s;if("undefined"!=typeof SharedArrayBuffer&&this.points.buffer instanceof SharedArrayBuffer){let i=this.points.subarray(e*this.stride,(t+1)*this.stride),r=new SharedArrayBuffer(i.length*Float32Array.BYTES_PER_ELEMENT);s=new Float32Array(r),s.set(i)}else s=this.points.slice(e*this.stride,(t+1)*this.stride);let n=new ve(this.layout.slice(),s,Object.clone(this.pointProps),i,r);return n.randomSeed=this.randomSeed,n}setTransform(e){this.matrix=e}transform(e=this.matrix){let t=0;for(let i=0;i<this.length;i++){let r=this.getPoint(i);r.transform(e),this.setPoint(i,r),t=r.rotation}this.layout.includes(I.Property.ROTATION)||(this.pointProps.rotation=0==t?void 0:t)}toJSON(){return{type:"Spline",layout:this.layout.map((e=>e.name)),points:Z.encode(this.points,this.encoding),pointProps:this.pointProps,ts:this.ts,tf:this.tf,randomSeed:this.randomSeed}}static fromJSON(e){let t=Z.decode(e.points),i=new ve(e.layout.map((e=>I.Property[e])),t,e.pointProps,e.ts,e.tf);return i.randomSeed=e.randomSeed,i}static createRect(e,t,i){let r=e.toPath(t,i);return new ve(r.layout,r.points,{size:r.size,red:t.red,green:t.green,blue:t.blue,alpha:t.alpha})}}class we extends ve{get slice(){}constructor(e,t,i,r=[]){super(e,t,i),Object.defineProperty(this,"tValues",{value:Object.freeze(r),enumerable:!0}),Object.defineProperty(this,"ts",{get:function(){return r.first},enumerable:!0}),Object.defineProperty(this,"tf",{get:function(){return r.last},enumerable:!0}),delete this.segmentsCount}validateSegmentsCount(){}clone(){return new we(this.layout.slice(),this.points.clone(),Object.clone(this.pointProps),this.tValues.slice())}getPointT(e){return this.tValues[e]}toJSON(){return{type:"InterpolatedSpline",layout:this.layout.map((e=>e.name)),points:Z.encode(this.points,this.encoding),pointProps:this.pointProps,tValues:this.tValues}}static fromJSON(e){let t=Z.decode(e.points);return new we(e.layout.map((e=>I.Property[e])),t,e.pointProps,e.tValues)}}const Ie=e.mat4.fromValues(0,-.5,1,-.5,1,0,-2.5,1.5,0,.5,2,-1.5,0,0,-.5,.5);class Te extends ie{constructor(e=!1,t=!1){super(),this.calculateDerivates=e,this.keepTValues=t,this.state={lastPointPosition:void 0,lastPointSize:0}}initState(t){this.state.layout={},t.layout.forEach(((t,i)=>{this.state.layout[t.name]={index:i,polynomials:e.vec4.create()}})),this.keepTValues&&(this.state.tValues=[]),this.splineLayout=t.layout,this.pathPointProps=Object.clone(t.pointProps),this.scattering&&(this.pathPointProps.scattering=this.scattering),this.layout=this.calculateDerivates?t.layout.concat([I.Property.D_X,I.Property.D_Y]):t.layout,this.state.ready=!0}addImpl(e,t){return{added:this.getImpl(e,Te.OutputType.ADDITION),predicted:this.getImpl(t,Te.OutputType.PREDICTION)}}getImpl(e,t){if(!e)return[];let i;if(this.state.ready||this.initState(e),t==Te.OutputType.PREDICTION){let t=Object.clone(this.state);delete this.state.tValues,this.resetState(),i=this.discretize(e),this.state=t}else i=this.discretize(e);return i}getOutput(e,t){if(0!=e.length){let i=t==Te.OutputType.PREDICTION?void 0:this.state.tValues;return i&&(i=i.slice()),new we(this.layout,e,this.pathPointProps,i)}}discretize(e){throw new Error("This method is abstract and should be implemented")}storeLastPoint(e,t=0){this.state.lastPointPosition=new f(this.getPropValue(I.Property.X,e,t),this.getPropValue(I.Property.Y,e,t),this.getPropValue(I.Property.Z,e,t)),this.state.lastPointSize=this.getPropValue(I.Property.SIZE,e,t)}getPropValue(e,t,i=0){return this.state.layout[e.name]?t[i+this.state.layout[e.name].index]:void 0}calculatePolynomials(t,i){let r=this.splineLayout.length*(i+0),s=this.splineLayout.length*(i+1),n=this.splineLayout.length*(i+2),o=this.splineLayout.length*(i+3);this.splineLayout.forEach(((i,a)=>{let l=e.vec4.fromValues(t[r+a],t[s+a],t[n+a],t[o+a]);e.vec4.transformMat4(this.state.layout[i.name].polynomials,l,Ie)}))}samplePoint(t){let i=[],r=e.vec4.fromValues(1,t,t*t,t*t*t);return this.splineLayout.forEach((t=>{let s=e.vec4.dot(this.state.layout[t.name].polynomials,r);i.push(s)})),this.calculateDerivates&&(i.push(this.getDerivativeOf(this.state.layout.X.polynomials,r)),i.push(this.getDerivativeOf(this.state.layout.Y.polynomials,r))),i}getDerivativeOf(t,i){let r=e.vec4.fromValues(t[1],2*t[2],3*t[3],0);return e.vec4.dot(r,i)}addT(e){this.state.tValues&&this.state.tValues.push(e)}resetState(){}reset(){super.reset(),this.state.ready=!1,this.state.lastPointPosition=void 0,this.state.lastPointSize=0,delete this.state.tValues}}class Se extends Te{constructor(e=.1,t,i){super(t,i),this.spacing=e}split(e,t=8){let i=this.spacing;this.spacing=1,this.splitCount=t;let r=this.get(e);return this.spacing=i,delete this.splitCount,r}discretize(t){let i=[],r=this.splitCount,s=Math.max(1,10*(this.spacing>1?1:this.spacing));for(let n=0;n<t.segmentsCount;n++){if(this.calculatePolynomials(t.points,n),isNaN(this.splitCount)){let i=t.getPoint(n+1),o=t.getPoint(n+2),a=e.vec2.distance(i.value,o.value),l=this.pathPointProps.size;this.state.layout.SIZE&&(l=Math.min(i.size,o.size)),r=Math.floor(s*(a/l)/this.spacing)+1}let o=1/r;for(let e=0;e<=r;e++){let s=!this.state.lastPointPosition,a=e/r;if(0==n&&a<t.ts){if(!(a+o>=t.ts))continue;a=t.ts,s=this.spacing<=1}if(n==t.segmentsCount-1&&a>=t.tf){if(!(a<t.tf+o))continue;a=t.tf,s=this.lastSegment&&this.spacing<=1}if(n>0&&0==a)continue;let l=this.samplePoint(a);if(!s&&this.state.lastPointPosition){let e=new f(this.getPropValue(I.Property.X,l),this.getPropValue(I.Property.Y,l),this.getPropValue(I.Property.Z,l)),t=this.state.lastPointPosition.vec.squaredDistance(this.state.lastPointPosition.value,e.value),i=(this.state.layout.SIZE?(this.state.lastPointSize+l[this.state.layout.SIZE.index])/2:this.pathPointProps.size)*this.spacing;s=t>=i*i}s&&(i.push(...l),this.storeLastPoint(l),this.addT(a))}}return this.state.tValues&&(0!=i.length&&this.state.tValues.first==t.ts||(i.unshift(...this.samplePoint(t.ts)),this.state.tValues.unshift(t.ts)),this.state.tValues.last!=t.tf&&(i.push(...this.samplePoint(t.tf)),this.state.tValues.push(t.tf))),i}}class Re{constructor(){this.interpolator=new Se(.1,!1,!0)}build(e,t,i){return this.context=e,this.pathContext=new de(i),this.result={},this.holes=[],this.debug&&(t=t.unique()),t.sort(O.comparator({sortBy:"strokeID",sortOrder:"asc"},{sortBy:"segmentIndex",sortOrder:"asc"},{sortBy:"splineIndex",sortOrder:"asc"},{sortBy:"pointIndex",sortOrder:"asc"})),this.debug&&(this.table=new R([{name:"strokeID",title:"Stroke ID"},{name:"segmentIndex",title:"Segment Index"},{name:"splineIndex",title:"Spline Index"},{name:"pointIndex",title:"Point Index"},{name:"prevT",title:"Prev T"},{name:"t",title:"T Value"},{name:"nextT",title:"Next T"},{name:"ts",title:"Start T"},{name:"tf",title:"End T"},{name:"size",title:"Size"},{name:"shapeSize",title:"Shape Size"},{name:"hole",title:"HolePart"},{name:"nodeIndex",title:"Node Index"}])),t.forEach((e=>{this.isHolePart(e)?this.update(e):this.add(e),this.debug&&this.table.insert({strokeID:e.strokeID,segmentIndex:e.segmentIndex,splineIndex:e.splineIndex,pointIndex:e.pointIndex,prevT:e.prevT.toFixed(4),t:e.t.toFixed(4),nextT:e.nextT.toFixed(4),ts:e.spline.ts.toFixed(4),tf:e.spline.tf.toFixed(4),size:`${e.bounds.width.toFixed(2)} / ${e.bounds.height.toFixed(2)}`,shapeSize:`${e.shapeBounds.width.toFixed(2)} / ${e.shapeBounds.height.toFixed(2)}`,hole:e.hole,nodeIndex:e.nodeIndex})})),this.debug&&this.table.length>0&&console.log(this.table.toString()),this.narrow(),this.result}add(e){this.holes=this.result[e.strokeID],this.holes||(this.holes=[],this.result[e.strokeID]=this.holes);let t=e.segmentIndex,i=e.segmentIndex,r=this.context.getNodes(e.strokeID).indexOf(e);this.holes.push({fromIndex:t,toIndex:i,fromTValue:e.prevT,toTValue:e.nextT,fromNodeIndex:r,toNodeIndex:r,strokeID:e.strokeID}),this.debug&&(e.hole=!1,e.nodeIndex=r)}update(e){let t=this.holes.last;t.toIndex=e.segmentIndex,t.toTValue=e.nextT,t.toNodeIndex=this.context.getNodes(e.strokeID).indexOf(e),this.debug&&(e.hole=!0,e.nodeIndex=t.toNodeIndex)}isHolePart(e){let t=this.holes.last;return!(!t||t.strokeID!=e.strokeID)&&(e.segmentIndex==t.toIndex&&e.prevT<=t.toTValue||e.segmentIndex==t.toIndex+1&&1==t.toTValue&&0==e.prevT)}narrow(){this.holes.forEach((e=>{let t,i=this.context.getNodes(e.strokeID),r=i[e.fromNodeIndex],s=i[e.toNodeIndex];t=e.toNodeIndex+1-e.fromNodeIndex<=2?this.extractT(r,"sf",r.prevT,s.nextT):{s:this.extractT(r,"s",r.prevT,r.nextT).s,f:this.extractT(s,"f",s.prevT,s.nextT).f},r.ts=t.s,s.tf=t.f,e.fromTValue=t.s,e.toTValue=t.f}))}extractT(e,t,i,r){if(i==r)return{};let s,n={},o=t.startsWith("s"),a=new ve(e.spline.layout,e.spline.points,e.spline.pointProps,i,r),l=this.interpolator.get(a);for(let i=0;i<l.length;i++){let r=l.getPoint(i),a=this.context.getBrushApplier(e.strokeID).applyBrush(r);if(ue.intersection(this.pathContext,a)){if(o){if(n.s=s,t.endsWith("f")){s=l.getPointT(i),o=!1;continue}break}s=l.getPointT(i)}else if(o&&(s=l.getPointT(i)),!o&&(n.f=s,s))break}if(isNaN(n.s)&&(n.s=i),isNaN(n.f)&&(n.f=r),n.s==n.f){let e=l.tValues.indexOf(n.s);0==e?n.f=l.tValues[e+1]:n.s=l.tValues[e-1]}return n}}let Ae;Object.defineProperty(globalThis,"DIGITAL_INK_DEBUG",{get:()=>Ae,set:function(e){Ae=e||{},D.debug=Ae.InputListener,p.prototype.debug=Ae.Pipeline,ie.prototype.debug=Ae.Pipeline,te.prototype.debug=Ae.PathPointContext,de.prototype.debug=Ae.ClipperContext,xe.prototype.debug=Ae.RTree,Re.prototype.debug=Ae.HolesBuilder},enumerable:!0,configurable:!0});var Oe=Object.freeze({__proto__:null,vector:function(e,t){let i,r={};return Object.defineProperty(r,"x",{value:t.x-e.x,enumerable:!0}),Object.defineProperty(r,"y",{value:t.y-e.y,enumerable:!0}),Object.defineProperty(r,"length",{get:()=>(isNaN(i)&&(i=Math.sqrt(r.x*r.x+r.y*r.y)),i),enumerable:!0}),r},angle:function(e,t){let i=e.x*t.x+e.y*t.y,r=e.x*t.y-e.y*t.x;return Math.atan2(r,i)}});class Ce{constructor(e){this.phase=e.phase;let t=isNaN(e.altitude)||isNaN(e.azimuth)?void 0:{altitude:e.altitude,azimuth:e.azimuth};Object.defineProperty(this,"x",{value:e.x,enumerable:!0}),Object.defineProperty(this,"y",{value:e.y,enumerable:!0}),Object.defineProperty(this,"z",{value:e.z,enumerable:!0}),Object.defineProperty(this,"timestamp",{value:e.timestamp,enumerable:!0,writable:!0}),Object.defineProperty(this,"force",{value:e.pressure,enumerable:!0}),Object.defineProperty(this,"pressure",{value:e.pressure,enumerable:!0}),Object.defineProperty(this,"rotation",{value:e.rotation,enumerable:!0}),Object.defineProperty(this,"radiusX",{value:e.radiusX,enumerable:!0}),Object.defineProperty(this,"radiusY",{value:e.radiusY,enumerable:!0}),Object.defineProperty(this,"altitude",{get:()=>(t||(t=this.computeTilt(e)||{}),t.altitude),enumerable:!0}),Object.defineProperty(this,"azimuth",{get:()=>(t||(t=this.computeTilt(e)||{}),t.azimuth),enumerable:!0}),e.pointer&&Object.defineProperty(this,"pointer",{value:e.pointer,enumerable:!0}),this.computedAzimuth=void 0}createPathPoint(){return new I(this.x,this.y,this.z)}computeTilt(e){if(isNaN(e.tiltX)||isNaN(e.tiltY))return;let{tiltX:t,tiltY:i}=e,r=Math.tan(Math.toRadians(t)),s=Math.tan(Math.toRadians(i)),n=Math.sqrt(r*r+s*s);return{altitude:Math.atan2(1,n),azimuth:Math.atan2(s,r)}}speed(e,t){let i={x:0,y:0,time:0};if(i=e&&!t?this.minus(e):t&&!e?t.minus(this):t.minus(e),i.time>0)return Ce.getMagnitude(i.x,i.y)/(i.time/1e3);if(0==i.time)return 0;throw new Error(`Speed out of range: ${i.time}`)}computeNearestAzimuthAngle(e){let t;if(isNaN(this.azimuth))return 0;if(e){if(isNaN(e.azimuth))return 0;let i=2*Math.PI,r=e.computedAzimuth||e.azimuth,s=parseInt(r/i);t=this.azimuth+s*i;let n=t-r;n>=Math.PI?t-=i:n<-Math.PI&&(t+=i)}else t=this.azimuth;return this.computedAzimuth=t,t}minus(e){return{x:this.x-e.x,y:this.y-e.y,time:this.timestamp-e.timestamp}}static getMagnitude(e,t){return Math.sqrt(e*e+t*t)}}Object.defineEnum(Ce,"Property",["X","Y","Z","PHASE","TIMESTAMP","PRESSURE","RADIUS_X","RADIUS_Y","ALTITUDE","AZIMUTH","ROTATION"]);class De{constructor(){this.reset()}add(e,t,i){e==p.Phase.BEGIN?this.reset(!0):e==p.Phase.END&&(this.last=!0),t&&this.accumulatedAddition.push(...t),i&&(this.lastPrediction=i)}reset(e=!1){this.first=e,this.last=!1,this.accumulatedAddition=[],this.lastPrediction=[]}}class Ne extends Array{constructor(...e){let t;super(...e),Object.defineProperty(this,"bounds",{get:()=>(t||(t=S.ofPolygons(this).ceil()),t),enumerable:!0}),Object.defineProperty(this,"verticesCount",{get:()=>{if(!this.shapesList)return this.map((e=>e.length)).reduce(((e,t)=>e+t),0)/2},enumerable:!0}),this.resetBounds=()=>t=null,this.shapesList=!1,this.holesClockwise=!1}clone(){return this.map((e=>e.slice()))}setTransform(e){this.matrix=e}transform(e=this.matrix){this.forEach((t=>{for(let i=0;i<t.length;i+=2){let r=new f(t[i],t[i+1]);r.transformSelf(e),t[i]=r.x,t[i+1]=r.y}})),this.resetBounds()}toArray(){return Array.from(this)}toJSON(){return{type:"InkPath2D",contours:this.toArray(),shapesList:this.shapesList,holesClockwise:this.holesClockwise}}static fromJSON(e){if("InkPath2D"!=e.type)throw new Error("Invalid data found");let t=new Ne(...e.contours);return t.shapesList=e.shapesList,t.holesClockwise=e.holesClockwise,t}static fromArray(e){return new Ne(...e.slice(0))}}let Me={stride:2,sort(e,t){return this.sortArrayPart(e,0,e.length-this.stride,t),e},partition(e,t,i,r){let s=e[i],n=e[i+1],o=t-this.stride;for(let a=t;a<i;a+=2)r?r(s,n,e[a],e[a+1])&&(o+=this.stride,this.swap(e,o,a)):(s>e[a]||s==e[a]&&n>e[a+1])&&(o+=this.stride,this.swap(e,o,a));return this.swap(e,o+this.stride,i),o+this.stride},swap(e,t,i){let r=e[t],s=e[t+1];return e[t]=e[i],e[t+1]=e[i+1],e[i]=r,e[i+1]=s,e},sortArrayPart(e,t,i,r){if(t<i){let s=this.partition(e,t,i,r);this.sortArrayPart(e,t,s-this.stride,r),this.sortArrayPart(e,s+this.stride,i,r)}}},Le={monotoneChain(e){let t=Le.ARRAY_TYPE;if(t||(t=Array),e.length<=0)return new t;Me.sort(e);let i=new t(e.length),r=0;for(let t=0;t<e.length;t+=2){for(;r>=4&&this.cross(i[r-4],i[r-3],i[r-2],i[r-1],e[t],e[t+1])<=0;)r-=2;i[r]=e[t],i[r+1]=e[t+1],r+=2}i=i.slice(0,r);let s,n=new t(e.length);r=0;for(let t=e.length-2;t>=0;t-=2){for(;r>=4&&this.cross(n[r-4],n[r-3],n[r-2],n[r-1],e[t],e[t+1])<=0;)r-=2;n[r]=e[t],n[r+1]=e[t+1],r+=2}return n=n.slice(0,r-2),t==Float32Array?(s=new Float32Array(n.length+i.length),s.set(n),s.set(i,n.length)):s=n.concat(i),s},cross:(e,t,i,r,s,n)=>(i-e)*(n-t)-(r-t)*(s-e)};class ke extends p{constructor(e,t){super(),this.inputBuffer=[],this.hasPrediction=!0,Object.defineProperty(this,"layout",{get:function(){return e},set:function(t){e=t,this.reset()},enumerable:!0}),Object.defineProperty(this,"pathPointCalculator",{get:function(){return t},set:function(e){t=e,this.reset()},enumerable:!0})}togglePrediction(e){this.hasPrediction=e}addImpl(e,t){if(e.phase!=this.phase)throw new Error(`The phase of the addition (${e.phase.name}) doesn't match the phase of the PathProducer (${this.phase.name})`);let i=[],r=[];e&&this.inputBuffer.push(e);let s=this.inputBuffer.length>=3?this.inputBuffer[this.inputBuffer.length-3]:null,n=this.inputBuffer.length>=2?this.inputBuffer[this.inputBuffer.length-2]:null,o=this.inputBuffer.length>=1?this.inputBuffer[this.inputBuffer.length-1]:null,a=this.calculate(s,n,o);return e&&a&&i.push(...a.toArray(this.layout)),this.phase==p.Phase.END?(a=this.calculate(n,o,null),a&&i.push(...a.toArray(this.layout))):!this.hasPrediction||this.phase!=p.Phase.UPDATE&&null==t||(a=this.calculate(n,o,t),a&&(r.push(...a.toArray(this.layout)),a=this.calculate(o,t,null),a&&r.push(...a.toArray(this.layout)))),{added:i,predicted:r}}calculate(e,t,i){return t?this.pathPointCalculator(e,t,i):null}reset(){super.reset(),this.inputBuffer.clear()}}const _e=[-6e-6,-139e-6,-185e-6,414e-6,.002357,.003357,-.003135,-.023928,-.042909,-.017858,.096525,.254692,.347072,.26881,.114933];class Fe extends ie{constructor(e,t=15){super(),this.buffer=[],this.pointsCount=0,this.filter=_e.slice(),Object.defineProperty(this,"dimsCount",{get:function(){return e},set:function(t){e=t,this.reset()},enumerable:!0}),Object.defineProperty(this,"movingAverageWindowSize",{get:function(){return t},set:function(e){t=e,this.filter.length!=e&&(this.filter=Fe.resample(_e,e)),this.predictionPointsCount=4*e/15,this.windowSize=this.filter.length,this.reset()},enumerable:!0}),this.movingAverageWindowSize=t}addImpl(e=[],t=[]){return{added:this.lastSegment?this.project(e):this.addSequence(e),predicted:this.project(t)}}getImpl(e){return this.project(e)}project(e){if(e.length%this.dimsCount!=0)throw new Error(`Points size ('${e.length}') must be multiple of the dimensions count ('${this.dimsCount}').`);if(0==e.length)return[];let t=[],i=this.buffer.slice(),r=e.slice(0,e.length-this.dimsCount),s=this.addSequence(r);t.push(...s);let n=e.slice(e.length-this.dimsCount,e.length),o=this.predictionPointsCount;for(let e=0;e<o;e++){let i=this.addPoint(n);o-e<=this.pointsCount&&t.push(...i)}return this.buffer=i,t}addSequence(e){if(e.length%this.dimsCount!=0)throw new Error(`Points size ('${e.length}') must be multiple of the dimensions count ('${this.dimsCount}').`);let t=[],i=e.length/this.dimsCount;for(let r=0;r<i;r++){let i=this.addPoint(e.slice(r*this.dimsCount,(r+1)*this.dimsCount));t.push(...i)}return this.pointsCount+=i,t}addPoint(e){for(this.buffer.push(...e);this.buffer.length<this.windowSize*this.dimsCount;)this.buffer.unshift(...this.buffer.slice(0,this.dimsCount));for(;this.buffer.length>this.windowSize*this.dimsCount;)this.buffer=this.buffer.slice(this.dimsCount);return this.filterBuffer()}filterBuffer(){let e=[];for(let t=0;t<this.windowSize;t++)for(let i=0;i<this.dimsCount;i++)isNaN(e[i])&&(e[i]=0),e[i]+=this.buffer[t*this.dimsCount+i]*this.filter[t];return e}reset(){super.reset(),this.pointsCount=0,this.buffer.clear()}static resample(e,t){let i=new Float32Array(t),r=e.length/t,s=0;for(let n=0;n<t;n++){let o=(e.length-1)*n/(t-1),a=Math.floor(o),l=Math.ceil(o),h=o-a,d=r*(e[a]*(1-h)+e[l]*h);s+=d,i[n]=d}let n=1/s;for(let e=0;e<t;e++)i[e]*=n;return i}}class Be extends ie{constructor(e){super(),this.pathPointProps={},this.lastSpline=[],Object.defineProperty(this,"layout",{get:function(){return e},set:function(t){e=t,this.reset()},enumerable:!0})}addImpl(e,t){0==this.lastSpline.length&&e.length>0&&e.unshift(...e.slice(0,this.layout.length)),this.lastSegment&&(e.length>=this.layout.length?e.push(...e.slice(e.length-this.layout.length,e.length)):e.push(...this.getLastPart()));let i=this.getFirstPart();return this.lastSpline=i.concat(e),{added:e,predicted:this.getPredictedSpline(t)}}getImpl(e){let t=[];return e.length>0&&(t.push(...e.slice(0,this.layout.length)),t.push(...e),e.length>=this.layout.length&&t.push(...e.slice(e.length-this.layout.length,e.length))),e}getOutput(e,t){let i=t==ie.OutputType.ADDITION?this.lastSpline.length>=4*this.layout.length?this.lastSpline:[]:e;return 0==i.length?void 0:new ve(this.layout,i,this.pathPointProps,0,1)}getFirstPart(){return this.lastSpline.slice(Math.max(0,this.lastSpline.length-3*this.layout.length),this.lastSpline.length)}getLastPart(){return this.lastSpline.slice(this.lastSpline.length-this.layout.length,this.lastSpline.length)}getPredictedSpline(e=[]){let t=[];if(e.length>0){let i=this.getFirstPart();for(t.push(...i),t.push(...e),t.push(...t.slice(t.length-this.layout.length,t.length));t.length<4*this.layout.length;)t.unshift(t.slice(0,this.layout.length))}return t}reset(){super.reset(),this.lastSpline.clear()}}class Ue{constructor(e){this.key=e,this.height=1}leftRotate(){let e=this.right,t=e.left;return e.left=this,this.right=t,this.height=Math.max(Ue.height(this.left),Ue.height(this.right))+1,e.height=Math.max(Ue.height(e.left),Ue.height(e.right))+1,e}rightRotate(){let e=this.left,t=e.right;return e.right=this,this.left=t,this.height=Math.max(Ue.height(this.left),Ue.height(this.right))+1,e.height=Math.max(Ue.height(e.left),Ue.height(e.right))+1,e}getBalanceFactor(){return Ue.height(this.left)-Ue.height(this.right)}static height(e){return e?e.height:0}static minValue(e){if(!e)return;let t=e;for(;t.left;)t=t.left;return t.key}static maxValue(e){if(!e)return;let t=e;for(;t.right;)t=t.right;return t.key}}class je{constructor(){this.count=0,this.hasKey=!1,this.root}min(){return Ue.minValue(this.root)}max(){return Ue.maxValue(this.root)}add(e){return this.hasKey=!1,this.root=this.insertNode(this.root,e),this.hasKey||this.count++,!this.hasKey}insertNode(e,t){if(!e)return new Ue(t);if(t<e.key)e.left=this.insertNode(e.left,t);else{if(!(t>e.key))return this.hasKey=!0,e;e.right=this.insertNode(e.right,t)}if(!this.hasKey){e.height=1+Math.max(Ue.height(e.left),Ue.height(e.right));let i=e.getBalanceFactor();if(i>1){if(t<e.left.key)return e.rightRotate();if(t>e.left.key)return e.left=e.left.leftRotate(),e.rightRotate()}else if(i<-1){if(t>e.right.key)return e.leftRotate();if(t<e.right.key)return e.right=e.right.rightRotate(),e.leftRotate()}}return e}contains(e){return this.containsNode(this.root,e)}containsNode(e,t){return!!e&&(t<e.key?this.containsNode(e.left,t):!(t>e.key)||this.containsNode(e.right,t))}printTree(){if(!this.root)return;let e=[this.root],t=this.root.height;for(;e.length>0;){let i=e.shift();t!=i.height&&console.log("-"),console.log(`${i.key} with height: ${i.height}, balance: ${i.getBalanceFactor()}`),t=i.height;let r=i.left,s=i.right;r&&e.push(r),s&&e.push(s)}}toArray(){let e=[];return je.fillArray(e,this.root),e}static fillArray(e,t){t&&(this.fillArray(e,t.left),e.push(t.key),this.fillArray(e,t.right))}}class Ge{constructor(){this.tree=new je,Object.defineProperty(this,"length",{get:()=>this.tree.count,enumerable:!0})}clear(){this.tree=new je}add(e){return this.tree.add(e)}includes(e){return this.tree.contains(e)}min(){return this.tree.min()}max(){return this.tree.max()}toArray(){return this.tree.toArray()}}class Ye extends Te{constructor(e,t){super(e,t),this.state.segmentIndex=-1,this.state.lastSegmentIndex=-1,this.state.lastPointRotation=0,this.state.lastPointT=0,this.state.absAccumulatedErrorPos=0,this.state.absAccumulatedErrorS=0,this.setT=new Ge,Object.defineProperty(this,"errorThreshold",{get:function(){return this.error},set:function(e){this.error=e,this.errorDistSq=this.error*this.error,this.error10=10*this.error},enumerable:!0}),this.errorThreshold=.15}discretize(e){let t=[],i=e.segmentsCount,r=i-1;for(let s=0;s<i;s++){this.calculatePolynomials(e.points,s);let i=this.calculateTParams(s==r,e.ts,e.tf);t.push(...this.samplePoints(i)),i.length>0&&(this.resetAccumulatedErrors(),this.storeLastPoint(t))}return t}samplePoints(e){let t=[];return e.toArray().forEach((e=>{this.addT(e),t.push(...this.samplePoint(e))})),t}storeLastPoint(e){let t=e.length-this.layout.length;super.storeLastPoint(e,t),this.state.lastPointRotation=this.getPropValue(I.Property.ROTATION,e,t),this.state.lastPointT=this.setT.max(),this.state.lastSegmentIndex=this.state.segmentIndex}calculateTParams(e,t,i){this.state.segmentIndex++;let r=0==this.state.segmentIndex?t:0,s=e?i:1;return this.setT.clear(),this.getTForPos(r,s),this.state.layout.SIZE&&this.getTForCubic(r,s,this.state.layout.SIZE.polynomials,this.error),this.mustAddStartT()&&this.setT.add(r),e&&this.setT.add(s),this.state.layout.ROTATION&&this.getTForRotation(r,s),this.setT}mustAddStartT(){if(this.state.lastSegmentIndex<0)return!0;let e=this.state.lastPointT-(this.state.segmentIndex-this.state.lastSegmentIndex),t=this.setT.length>0?this.setT.min():1,i=this.getPosErrorAtT0(t,this.state.lastPointPosition);if(this.state.absAccumulatedErrorPos+=Math.abs(i),this.state.layout.SIZE){let i=this.getErrorAtT0(this.state.layout.SIZE.polynomials,t,e,this.state.lastPointSize);this.state.absAccumulatedErrorS+=Math.abs(i)}return this.state.absAccumulatedErrorPos>this.errorDistSq||this.state.absAccumulatedErrorS>this.error}getPosErrorAtT0(e,t){let i=this.getTPoint(e),r=this.getTPoint(0);return this.minDistanceSq(t,i,r)}getErrorAtT0(e,t,i,r){let s=i,n=r,o=t,a=this.cubicCalc(e,o),l=this.cubicCalc(e,0),h=n+(0-s)*(a-n)/(o-s);return Math.abs(l-h)}getTForPos(e,t){let i=this.getTPoint(e),r=this.getTPoint(t),s=this.subdividePos(i,r);if(s.split)this.subdivideRecursivePos(i,s),this.setT.add(s.t),this.subdivideRecursivePos(s,r);else{let e=this.subdividePos(i,s),t=this.subdividePos(s,r);e.split&&(this.subdivideRecursivePos(i,e),this.setT.add(e.t),this.subdivideRecursivePos(e,s)),(e.split||t.split)&&this.setT.add(s.t),t.split&&(this.subdivideRecursivePos(s,t),this.setT.add(t.t),this.subdivideRecursivePos(t,r))}}subdivideRecursivePos(e,t){let i=this.subdividePos(e,t);i.split&&(this.subdivideRecursivePos(e,i),this.setT.add(i.t),this.subdivideRecursivePos(i,t))}subdividePos(e,t){let i=.5*(e.t+t.t),r=this.getTPoint(i),s=this.minDistanceSq(e,t,r),n=e.add(t).scaleSelf(.5),o=r.subtract(n).absSelf();return r.split=s>this.errorDistSq||o.x>this.error10||o.y>this.error10,this.state.layout.Z&&(r.split=r.split||o.z>this.error10),r}getTForCubic(e,t,i,r){let s={v:this.cubicCalc(i,e),t:e},n={v:this.cubicCalc(i,t),t:t},o=this.subdivide(s,n,i);if(o.diff>r)this.subdivideRecursive(s,o,i,r),this.setT.add(o.t),this.subdivideRecursive(o,n,i,r);else{let e=this.subdivide(s,o,i),t=this.subdivide(o,n,i);e.diff>r&&(this.subdivideRecursive(s,e,i,r),this.setT.add(e.t),this.subdivideRecursive(e,o,i,r)),(e.diff>r||t.diff>r)&&this.setT.add(o.t),t.diff>r&&(this.subdivideRecursive(o,t,i,r),this.setT.add(t.t),this.subdivideRecursive(t,n,i,r))}}subdivideRecursive(e,t,i,r){let s=this.subdivide(e,t,i);s.diff>r&&(this.subdivideRecursive(e,s,i,r),this.setT.add(s.t),this.subdivideRecursive(s,t,i,r))}subdivide(e,t,i){let r=.5*(e.t+t.t),s=this.cubicCalc(i,r),n=.5*(e.v+t.v);return{v:s,t:r,diff:Math.abs(s-n)}}getTForRotation(e,t){let i=this.state.layout.ROTATION.polynomials,r=this.state.lastPointRotation;this.state.lastSegmentIndex<0&&(r=this.cubicCalc(i,e));let s=.25*(t-e);for(let t=0;t<4;t++){let n=e+t*s,o=this.cubicCalc(i,n);Math.abs(o-r)>.06&&(this.setT.add(n),r=o)}}minDistanceSq(e,t,i){let r=i.vec,s=r.squaredDistance(e.value,t.value);if(0==s)return r.squaredDistance(i.value,e.value);let n=Math.max(0,Math.min(1,r.dot(i.subtract(e).value,t.subtract(e).value)/s)),o=t.subtract(e).scale(n).add(e);return r.squaredDistance(i.value,o.value)}getTPoint(e){let t=new f(this.cubicCalc(this.state.layout.X.polynomials,e),this.cubicCalc(this.state.layout.Y.polynomials,e),this.state.layout.Z?this.cubicCalc(this.state.layout.Z.polynomials,e):void 0);return t.t=e,t}cubicCalc(e,t){return e[0]+e[1]*t+e[2]*t*t+e[3]*t*t*t}resetAccumulatedErrors(){this.state.absAccumulatedErrorPos=0,this.state.absAccumulatedErrorS=0}resetState(){this.state.segmentIndex=-1,this.state.lastSegmentIndex=-1,this.state.lastPointT=0,this.state.lastPointRotation=0,this.resetAccumulatedErrors()}reset(){super.reset(),this.resetState()}}class ze extends ie{constructor(e){super(),Object.defineProperty(this,"brush",{get:function(){if(!e)throw new Error("brush not found");return e},set:function(t){e=t,this.reset()},enumerable:!0})}addImpl(e,t){return{added:this.generatePolygons(e),predicted:this.generatePolygons(t)}}getImpl(e){return this.generatePolygons(e)}getOutput(e,t){let i=new Ne(...e);return i.shapesList=this.brush.spacing>1,i}generatePolygons(e){if(!e)return[];let t=[];for(let i=0;i<e.length;i++){let r=e.getPoint(i),s=this.applyBrush(r);t.push(s)}return t}applyBrush(t){let i=[],r=this.createTransform(t),s=this.brush.selectShape(r.maxScale);for(let t=0;t<s.length;t+=2){let n=e.vec4.create(),o=e.vec4.fromValues(s[t],s[t+1],0,1);e.vec4.transformMat4(n,o,r),i.push(n[0]/n[3],n[1]/n[3])}return i}createTransform(t){if(isNaN(t.size))throw new Error("Size information not found.");let i=e.mat4.create(),r=t.size*t.scaleX,s=t.size*t.scaleY,n=t.size*t.scaleZ;return i.maxScale=Math.max(r,s,n),e.mat4.translate(i,i,e.vec3.fromValues(t.x,t.y,t.z||0)),e.mat4.rotateZ(i,i,t.rotation),e.mat4.translate(i,i,e.vec3.fromValues(t.offsetX,t.offsetY,t.offsetZ)),e.mat4.scale(i,i,e.vec3.fromValues(r,s,n)),i}}class Xe extends ie{constructor(){super(),this.lastPolygon=[]}addImpl(e,t){return{added:this.getConvexHulls(e,!0),predicted:this.getConvexHulls(t)}}getImpl(e){return this.getConvexHulls(e)}getOutput(e,t){return new Ne(...e)}getConvexHulls(e,t){let i=[],r=this.lastPolygon;return e.forEach((e=>{r.push(...e),i.push(Le.monotoneChain(r)),r=e})),t&&e.length>0&&(this.lastPolygon=e.last.slice()),i}reset(){super.reset(),this.lastPolygon.clear()}}class $e{constructor(){this.state={},this.nextKey=0,this.workers=[],this.status=$e.Status.CLOSED,this.lastPolygon}async open(){if(this.status!=$e.Status.CLOSED)throw new Error(`Producer cannot be opened. Current status is ${this.status.name}.`);let e=new Blob(['\nlet QuickSort;\nlet ConvexHullProducer;\n\nlet worker = parseInt(self.name.replace(/^\\D+/g, ""));\n\nself.onmessage = function(e) {\n\tlet message = e.data;\n\n\tif (message.imports) {\n\t\tmessage.imports.forEach(url => self.importScripts(url));\n\n\t\tConvexHullProducer.ARRAY_TYPE = Float32Array;\n\n\t\tself.postMessage({worker, ready: true});\n\t\treturn;\n\t}\n\n\tlet result = ConvexHullProducer.monotoneChain(message.data);\n\tself.postMessage({worker, key: message.key, index: message.index, data: result}, [result.buffer]);\n}\n'],{type:"application/javascript"}),t=URL.createObjectURL(e);this.ready=0,this.imports=[{name:"QuickSort",value:Me},{name:"ConvexHullProducer",value:Le}].map((e=>URL.createObjectURL(new Blob([Object.toSource(e.value,e.name)],{type:"application/javascript"}))));let i=navigator.hardwareConcurrency;for(let e=0;e<i;e++){let i=new Worker(t,{name:`ConvexHullChainWorker${e}`});i.name=e,i.onmessage=e=>this.recieve(e.data),i.onerror=t=>this.recieveError(t,e),this.workers.push(i)}return URL.revokeObjectURL(t),this.status=$e.Status.OPEN_IN_PROGRESS,new Promise(((e,t)=>{this.workers.forEach((e=>e.postMessage({imports:this.imports}))),this.resolve=e}))}close(){this.workers.forEach((e=>e.terminate())),this.workers.clear(),this.status=$e.Status.CLOSED}async add(e,t,i=[]){if(this.status!=$e.Status.OPEN)throw new Error(`Producer is not opened yet. Current status is ${this.status.name}.`);let r=this.nextKey++,s=this.lastPolygon;return t.length>0&&(this.lastPolygon=t.last),e==p.Phase.END&&(this.lastPolygon=null),this.state[r]={addition:t,prediction:i,data:[...t.slice(),...i.slice()],queue:[...t.slice(),...i.slice()],lastPolygon:s,added:[],predicted:[],expected:t.length+i.length,processed:0},new Promise(((e,t)=>{this.state[r].resolve=e,this.workers.forEach((e=>this.send(e.name,r)))}))}reset(){this.lastPolygon=null}send(e,t){let i=this.state[t],r=i.queue.shift();if(!r)return;let s=i.data.indexOf(r),n=(0==s?i.lastPolygon:i.data[s-1])||[];n.push(...r),this.workers[e].postMessage({key:t,index:s,data:n})}recieve(e){if(e.ready)return this.ready++,void(this.ready==this.workers.length&&(this.imports.forEach((e=>URL.revokeObjectURL(e))),this.resolve(),delete this.ready,delete this.resolve,this.status=$e.Status.OPEN));let t,i,r=this.state[e.key];e.index>r.addition.length-1?(t=e.index-r.addition.length,i="predicted"):(t=e.index,i="added"),r[i][t]=e.data,r.processed++,r.processed==r.expected?(delete this.state[e.key],r.resolve({added:r.added,predicted:r.predicted})):this.send(e.worker,e.key)}recieveError(e,t){console.warn(`ConvexHullChainProducer Worker ${t}`),console.error(e)}}Object.defineEnum($e,"Status",["OPEN","OPEN_IN_PROGRESS","CLOSED"]);class Ve extends ie{constructor(){super(),this.processPrediction=!1,this.filterDuplicates=!1}addImpl(e,t){return{added:this.merge(e),predicted:this.processPrediction?this.merge(t):t}}getImpl(e){return this.merge(e)}getOutput(e,t){return new Ne(...e)}merge(e){return e.length?ue.union(e,this.filterDuplicates):[]}}class He extends ie{constructor(e=.1){super(),this.epsilon=e}addImpl(e,t){return{added:this.simplify(e),predicted:t}}getImpl(e){return this.simplify(e)}getOutput(e,t){return new Ne(...e)}simplify(e){return e.map((e=>this.simplifyPolygonDouglasPeucker(e)))}simplifyPolygonDouglasPeucker(e){if(e.length<6)return e;e instanceof Float32Array&&(e=e.toArray());let t=this.simplifyPolylineDouglasPeucker(e.concat([e[0],e[1]]));return t.length<8?e:t.slice(0,t.length-2)}simplifyPolylineDouglasPeucker(e){if(this.epsilon<=0)return[];if(e.length<4)return e;let t,i=0,r=0;for(let t=2;t<e.length-2;t+=2){let s=He.perpendicularDistance(e[t],e[t+1],e[0],e[1],e[e.length-2],e[e.length-1]);s>i&&(r=t,i=s)}if(i>this.epsilon){let i=this.simplifyPolylineDouglasPeucker(e.slice(0,r+2)),s=this.simplifyPolylineDouglasPeucker(e.slice(r,e.length));t=i.concat(s.slice(2,s.length))}else t=[e[0],e[1],e[e.length-2],e[e.length-1]];return t}static perpendicularDistance(e,t,i,r,s,n){let o=e-i,a=s-i,l=o*(n-r)-a*(t-r);l*=l,o=s-i,a=n-r;let h=o*o+a*a;return h>0?Math.sqrt(l/h):Math.sqrt((i-e)*(i-e)+(r-t)*(r-t))}}function Ze(){}Object.defineEnum(Ze,"Stage",["PATH_PRODUCER","SMOOTHER","SPLINE_PRODUCER","SPLINE_INTERPOLATOR","BRUSH_APPLIER","CONVEX_HULL_CHAIN_PRODUCER","POLYGON_MERGER","POLYGON_SIMPLIFIER"]);const qe=Ze.Stage;var We=Object.freeze({__proto__:null,Stage:qe,PathProducer:ke,Smoother:Fe,SplineProducer:Be,DistanceBasedInterpolator:Se,CurvatureBasedInterpolator:Ye,BrushApplier:ze,ConvexHullChainProducer:Xe,ConvexHullChainProducerAsync:$e,PolygonMerger:Ve,PolygonSimplifier:He});function Ke(){}Ke.BlendMode={SOURCE_OVER:"source-over",DESTINATION_OVER:"destination-over",DESTINATION_IN:"destination-in",DESTINATION_OUT:"destination-out",LIGHTER:"lighter",COPY:"copy",MIN:"MIN",MAX:"MAX"};const Je=Ke.BlendMode;class Qe{constructor(e,t){Object.defineProperty(this,"ctx",{value:e,enumerable:!0}),Object.defineProperty(this,"value",{value:t,enumerable:!0}),Object.defineProperty(this,"texture",{value:t,enumerable:!0})}async update(e,t){if(Array.isArray(e)){let i=[],r=e;for(let e of r){let t=await J(e);i.push(t)}this.completeMipMap(i),this.fill(i,t)}else{let t=e,i=await J(t);this.fill(i)}}completeMipMap(e){if(e.sort(((e,t)=>t.width-e.width)),1==e.last.width)return;let t=e.last.width;for(;t>1;){t/=2;let i=new OffscreenCanvas(e.last.width/2,e.last.height/2);i.getContext("2d").drawImage(e.last,0,0,i.width,i.height),e.push(i)}}fill(e,t){let i=this.ctx,r=this.value;if(i.bindTexture(i.TEXTURE_2D,r),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),Array.isArray(e)){let r=e;this.size=[],r.forEach(((e,t)=>{i.texImage2D(i.TEXTURE_2D,t,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,e),this.size.push({width:e.width,height:e.height}),e.close&&e.close()})),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,t?i.LINEAR_MIPMAP_LINEAR:i.LINEAR_MIPMAP_NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR)}else i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,e),this.size={width:e.width,height:e.height},e.close&&e.close();i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.bindTexture(i.TEXTURE_2D,null),this.logError(this.ctx,r.name)}readPixels(){let e=this.ctx,t=this.value,i=(i,r)=>{let s=new Uint8Array(i.width*i.height*4);return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,r),e.readPixels(0,0,i.width,i.height,e.RGBA,e.UNSIGNED_BYTE,s),s},r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r);let s=Array.isArray(this.size)?this.size.map(i):i(this.size,0);return e.deleteFramebuffer(r),s}logError(){let e=this.ctx.getError();if(e>0){let t=Object.keys(this.ctx.constructor.prototype).filter((t=>this.ctx[t]===e)).join(" | ");console.error(`WebGL error - ${this.texture.name}: ${e} - ${t}`)}}static createInstance(e,t=e.CLAMP_TO_EDGE,i=e.NEAREST){let r=e.createTexture();return e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,i),e.bindTexture(e.TEXTURE_2D,null),new Qe(e,r)}}class et{constructor(e,t,i,r={},s={}){this.name=e,this.spacing=r.spacing||.15,this.scattering=r.scattering||0,this.blendMode=r.blendMode||Je.SOURCE_OVER,this.rotationMode=r.rotationMode||et.RotationMode.RANDOM,Object.defineProperty(this,"particleSettings",{get:()=>({spacing:this.spacing,scattering:this.scattering,blendMode:this.blendMode,rotationMode:this.rotationMode}),enumerable:!0}),Object.defineProperty(this,"fillTextureSettings",{get:()=>({randomize:this.randomizeFill,size:this.fillTextureSize,offset:this.fillTextureOffset}),enumerable:!0}),Object.defineProperty(this,"descriptor",{value:{shape:{},fill:{}},enumerable:!0}),Object.defineProperty(this,"shape",{get:()=>Array.isArray(this.descriptor.shape)?this.descriptor.shape.map((e=>e.value)):this.descriptor.shape.value,enumerable:!0}),Object.defineProperty(this,"fill",{get:()=>this.descriptor.fill.value,enumerable:!0}),this.updateShape(t),this.updateFill(i,s)}async updateShape(e){Array.isArray(e)?e=e.map((e=>"string"==typeof e?q.getInstance(e):e instanceof q?e:new q(e.name,e.value))):"string"==typeof e?e=q.getInstance(e):e instanceof q||(e=new q(e.name,e.value)),this.descriptor.shape=e,this.ctx&&await this.configureShape()}async updateFill(e,t={}){if(this.randomizeFill=!("randomize"in t)||t.randomize,this.fillTextureSize=t.size,this.fillTextureOffset=t.offset||{x:0,y:0},Array.isArray(e))throw new Error("Mipmap is not compatible whith fill texture");"string"==typeof e?e=q.getInstance(e):e instanceof q||(e=new q(e.name,e.value)),this.descriptor.fill=e,this.ctx&&await this.configureFill()}async configure(e){this.ctx=e,await this.configureShape(),await this.configureFill()}async configureShape(){this.shapeTexture||(this.shapeTexture=Qe.createInstance(this.ctx,this.ctx.CLAMP_TO_EDGE,this.ctx.LINEAR)),await this.shapeTexture.update(this.shape,this.spacing<=1)}async configureFill(){this.fillTexture||(this.fillTexture=Qe.createInstance(this.ctx,this.ctx.REPEAT,this.ctx.NEAREST)),await this.fillTexture.update(this.fill),this.fillTextureSize||(this.fillTextureSize=this.fillTexture.size)}async getShapeBinary(){let e;if(Array.isArray(this.shape)){let t=[];for(let e of this.shape){let i=await K(e);t.push(i)}e=t}else e=await K(this.shape);return e}async getFillBinary(){return await K(this.fill)}toJSON(){return{type:"BrushGL",name:this.name,shape:Array.isArray(this.descriptor.shape)?this.descriptor.shape.map((e=>e.toJSON())):this.descriptor.shape.toJSON(),fill:this.descriptor.fill.toJSON(),particleSettings:{spacing:this.spacing,scattering:this.scattering,blendMode:this.blendMode.name,rotationMode:this.rotationMode.name},fillTextureSettings:{randomize:this.randomizeFill,size:this.fillTextureSize,offset:this.fillTextureOffset}}}static fromJSON(e){e.particleSettings.blendMode=Je[e.particleSettings.blendMode],e.particleSettings.rotationMode=et.RotationMode[e.particleSettings.rotationMode];let t=Array.isArray(e.shape)?e.shape.map((e=>q.fromJSON(e))):q.fromJSON(e.shape),i=q.fromJSON(e.fill);return new et(e.name,t,i,e.particleSettings,e.fillTextureSettings)}equals(e){return e==this&&e.shapeTexture==this.shapeTexture&&e.fillTexture==this.fillTexture}delete(){this.deleteShape(),this.deleteFill()}deleteShape(){this.shapeTexture&&(this.ctx.deleteTexture(this.shapeTexture),delete this.shapeTexture)}deleteFill(){this.fillTexture&&(this.ctx.deleteTexture(this.fillTexture),delete this.fillTexture)}}Object.defineEnum(et,"RotationMode",["NONE","RANDOM","TRAJECTORY"]);const tt=[qe.SMOOTHER,qe.POLYGON_MERGER,qe.POLYGON_SIMPLIFIER],it=[qe.SPLINE_INTERPOLATOR,qe.BRUSH_APPLIER,qe.CONVEX_HULL_CHAIN_PRODUCER,qe.POLYGON_MERGER,qe.POLYGON_SIMPLIFIER];class rt{constructor(){this.layout=[I.Property.X,I.Property.Y],this.pathSegment=new De,this.pathProducer=new ke(this.layout,((e,t,i)=>t.createPathPoint())),this.smoother=new Fe(this.layout.length),this.splineProducer=new Be(this.layout),this.distanceInterpolator=new Se,this.curvatureInterpolator=new Ye,this.brushApplier=new ze,this.polygonMerger=new Ve,this.polygonSimplifier=new He,this.splineProducer.keepAllData=!0,this.phase=void 0,this.pointerID=void 0,this.lastPipelineStage=void 0,this.excludedPipelineStages=[],this.configured=!1}configure(e={}){if(this.reset(),e.onBuildComplete)throw new Error("InkBuilderSettings onBuildComplete property is deprecated. Use InkBuilder instance onComplete property to set callback.");if(e.excludedPipelineStages){if(!Array.isArray(e.excludedPipelineStages))throw new Error("Expected type of excludedPipelineStages is Array instance");let t=e.excludedPipelineStages.filter((e=>!tt.includes(e)));t.length>0&&console.warn(`excludedPipelineStages property includes steps which cannot be excluded: ${t.map((e=>e.name)).join(", ")}`),this.excludedPipelineStages=e.excludedPipelineStages}if(e.lastPipelineStage){if(!it.includes(e.lastPipelineStage))throw new Error(`lastPipelineStage property expects one of: ${it.map((e=>e.name)).join(", ")}`);if(this.excludedPipelineStages.includes(e.lastPipelineStage))throw new Error(`lastPipelineStage ${e.lastPipelineStage.name} is disabled, check excludedPipelineStages configuration`);if(e.brush instanceof et&&e.lastPipelineStage!=qe.SPLINE_INTERPOLATOR)throw new Error(`lastPipelineStage ${e.lastPipelineStage.name} is not compatible with provided brush`);this.lastPipelineStage=e.lastPipelineStage}if(!e.brush)throw new Error("InkBuilderSettings brush property is required");switch(this.brush=e.brush,this.brush instanceof ee&&(this.brushApplier.brush=this.brush),this.lastPipelineStage||(this.brush instanceof ee?this.brush.spacing>1?this.lastPipelineStage=qe.BRUSH_APPLIER:this.excludedPipelineStages.includes(qe.POLYGON_SIMPLIFIER)?this.excludedPipelineStages.includes(qe.POLYGON_MERGER)?this.lastPipelineStage=qe.CONVEX_HULL_CHAIN_PRODUCER:this.lastPipelineStage=qe.POLYGON_MERGER:this.lastPipelineStage=qe.POLYGON_SIMPLIFIER:this.lastPipelineStage=qe.SPLINE_INTERPOLATOR),this.lastPipelineStage==qe.SPLINE_INTERPOLATOR||this.lastPipelineStage==qe.BRUSH_APPLIER?(this.splineInterpolator=this.distanceInterpolator,this.splineInterpolator.spacing=this.brush.spacing,this.splineInterpolator.scattering=this.brush.scattering,this.splineInterpolator.calculateDerivates=this.brush instanceof et):this.splineInterpolator=this.curvatureInterpolator,this.splineInterpolator.keepAllData=!1,this.brushApplier.keepAllData=!1,this.convexHullChainProducer.keepAllData=!1,this.polygonMerger.keepAllData=!1,this.polygonSimplifier.keepAllData=!1,this.lastPipelineStage){case qe.SPLINE_INTERPOLATOR:this.splineInterpolator.keepAllData=!0;break;case qe.BRUSH_APPLIER:this.brushApplier.keepAllData=!0;break;case qe.CONVEX_HULL_CHAIN_PRODUCER:this.convexHullChainProducer.keepAllData=!0;break;case qe.POLYGON_MERGER:this.polygonMerger.keepAllData=!0;break;case qe.POLYGON_SIMPLIFIER:this.polygonSimplifier.keepAllData=!0;break;default:throw console.warn(this.lastPipelineStage),new Error("Invalid lastPipelineStage found")}if(e.pathPointCalculator&&(this.calculator=e.pathPointCalculator,this.pathProducer.pathPointCalculator=e.pathPointCalculator),!e.layout)throw new Error("InkBuilderSettings layout property is required");{let t=e.pathPointProps||{};if(this.layout=e.layout,this.brush instanceof ee){if(this.layout.includes(I.Property.RED))throw new Error("RED layout channel is not supported for non particles strokes");if(this.layout.includes(I.Property.GREEN))throw new Error("GREEN layout channel is not supported for non particles strokes");if(this.layout.includes(I.Property.BLUE))throw new Error("BLUE layout channel is not supported for non particles strokes");if(this.layout.includes(I.Property.ALPHA))throw new Error("ALPHA layout channel is not supported for non particles strokes")}if(!this.layout.includes(I.Property.RED)&&isNaN(t.red))throw new Error("Stroke color red channel information is required. Please provide via layout or through configure settings via pathPointProps property.");if(!this.layout.includes(I.Property.GREEN)&&isNaN(t.green))throw new Error("Stroke color green channel information is required. Please provide via layout or through configure settings via pathPointProps property.");if(!this.layout.includes(I.Property.BLUE)&&isNaN(t.blue))throw new Error("Stroke color blue channel information is required. Please provide via layout or through configure settings via pathPointProps property.");if(!this.layout.includes(I.Property.ALPHA)&&isNaN(t.alpha))throw new Error("Stroke color alpha channel information is required. Please provide via layout or through configure settings via pathPointProps property.");if(!this.layout.includes(I.Property.SIZE)&&isNaN(t.size))throw new Error("Stroke size information is required. Please provide via layout or through configure settings via pathPointProps property.");this.pathProducer.layout=this.layout,this.smoother.dimsCount=this.layout.length,this.splineProducer.layout=this.layout,this.splineProducer.pathPointProps=t}this.smoother.movingAverageWindowSize=e.movingAverageWindowSize||15,this.curvatureInterpolator.errorThreshold=e.errorThreshold||.15,this.polygonMerger.processPrediction=!!e.mergePrediction,this.polygonSimplifier.epsilon=e.epsilon||.1,this.configured=!0}add(e,t){if(!this.configured)throw new Error("InkBuilder instance is not configured yet, use configure method to configure the instance.");if(!this.calculator)throw new Error("InkBuilder instance is not configured properly, pathPointCalculator property is required");if(!e.phase)throw new Error("SensorPoint phase is not found");this.aborted=!1,this.phase=e.phase;let i,r=new Ce(e);t&&(i=new Ce(t)),this.device&&(this.phase==ke.Phase.BEGIN&&this.device.openStream(e),this.device.add(r),this.phase==ke.Phase.END&&(this.sensorData=this.device.closeStream()));let s=this.pathProducer.add(this.phase,r,i);this.pathSegment.add(this.phase,s.added,s.predicted)}ignore(e){if(!e.phase)throw new Error("SensorPoint phase is not found");this.device&&e&&e.phase==ke.Phase.UPDATE&&this.device.add(new Ce(e),!0)}build(){throw new Error("Abstract method build of InkBuilderAbstract should be implemented")}processSpline(e,t,i,r){throw new Error("Abstract method processSpline of InkBuilderAbstract should be implemented")}mergeAndSimplify(e,t,i){return this.excludedPipelineStages.includes(qe.POLYGON_MERGER)||(i=this.polygonMerger.add(e,t,i.added,i.predicted),this.lastPipelineStage!=qe.POLYGON_MERGER)?(this.excludedPipelineStages.includes(qe.POLYGON_SIMPLIFIER)||(i=this.polygonSimplifier.add(e,t,i.added,i.predicted)),i):i}getSensorData(){return this.sensorData}getSpline(){return new ve(this.layout,this.splineProducer.allData.points,this.splineProducer.pathPointProps)}getInkPath(e){let t;switch(this.lastPipelineStage){case qe.SPLINE_INTERPOLATOR:t=this.splineInterpolator.allData;break;case qe.BRUSH_APPLIER:t=this.brushApplier.allData;break;case qe.CONVEX_HULL_CHAIN_PRODUCER:t=this.convexHullChainProducer.allData;break;case qe.POLYGON_MERGER:t=this.polygonMerger.allData;break;case qe.POLYGON_SIMPLIFIER:t=this.polygonSimplifier.allData;break;default:throw console.warn(this.lastPipelineStage),new Error("Invalid lastPipelineStage found")}return e&&(this.lastPipelineStage!=qe.POLYGON_MERGER&&this.lastPipelineStage!=qe.POLYGON_SIMPLIFIER||(t=this.polygonMerger.merge(t)),this.lastPipelineStage==qe.POLYGON_SIMPLIFIER&&(t=this.polygonSimplifier.simplify(t))),t}abort(){this.aborted=!0,this.device&&this.device.closeStream(!0),this.reset(),this.restart()}reset(){this.sensorData=null,this.pathProducer.reset(),this.smoother.reset(),this.splineProducer.reset(),this.distanceInterpolator.reset(),this.curvatureInterpolator.reset(),this.brushApplier.reset(),this.convexHullChainProducer.reset(),this.polygonMerger.reset(),this.polygonSimplifier.reset()}restart(){this.phase=void 0,this.pointerID=void 0,this.lastPipelineStage=null,this.excludedPipelineStages=[],this.configured=!1}}rt.Phase=ke.Phase;class st extends rt{constructor(){super(),this.convexHullChainProducer=new Xe}build(){let e=this.buildSegment();return e.phase=this.phase,e.pointerID=this.pointerID,e.predicted&&(e.predicted.predicted=!0),this.onComplete&&this.onComplete(e),this.phase==ke.Phase.END&&this.restart(),e}buildSegment(){let e={added:this.pathSegment.accumulatedAddition,predicted:this.pathSegment.lastPrediction};return this.excludedPipelineStages.includes(qe.SMOOTHER)||(e=this.smoother.add(this.pathSegment.first,this.pathSegment.last,e.added,e.predicted)),e=this.splineProducer.add(this.pathSegment.first,this.pathSegment.last,e.added,e.predicted),e=this.processSegment(this.pathSegment.first,this.pathSegment.last,e.added,e.predicted),this.pathSegment.reset(),e}processSegment(e,t,i,r){let s=this.splineInterpolator.add(e,t,i,r);if(this.lastPipelineStage==qe.SPLINE_INTERPOLATOR)return s;if(s.added||s.predicted){if(s=this.brushApplier.add(e,t,s.added,s.predicted),this.lastPipelineStage==qe.BRUSH_APPLIER)return s;if(s=this.convexHullChainProducer.add(e,t,s.added,s.predicted),this.lastPipelineStage==qe.CONVEX_HULL_CHAIN_PRODUCER)return s;s=this.mergeAndSimplify(e,t,s)}else s={added:s.added?s.added.points:new Ne,predicted:s.predicted?s.predicted.points:new Ne};return s}processSpline(e,t){let i=this.splineInterpolator.get(e);return this.lastPipelineStage==qe.SPLINE_INTERPOLATOR?i:i?(i=this.brushApplier.get(i),this.lastPipelineStage==qe.BRUSH_APPLIER?i:(i=this.convexHullChainProducer.get(i),this.lastPipelineStage==qe.CONVEX_HULL_CHAIN_PRODUCER?i:(this.brush.spacing>1?this.polygonMerger.filterDuplicates=!1:this.polygonMerger.filterDuplicates=t,i=this.polygonMerger.get(i),this.lastPipelineStage==qe.POLYGON_MERGER||(i=this.polygonSimplifier.get(i)),i))):new Ne}}class nt{constructor(){this.queue=Promise.resolve(),this.thenables=[]}then(e,t,i){return this.thenables.push(e),this.queue=this.queue.then(((...t)=>(this.thenables.shift(),e.canceled?Promise.resolve():e(...t)))),t&&this.then((e=>t(e,i))),this}catch(e){return this.queue=this.queue.catch(e),this}cancel(){this.thenables.forEach((e=>e.canceled=!0))}isEmpty(){return 0==this.thenables.length}static async serial(e,t){let i=new nt;return e.forEach(((e,r)=>i.then(e,t,r))),i.queue}}const ot=[];class at extends rt{constructor(){super(),this.convexHullChainProducer=new $e,this.queue=Promise.resolve(),this.chainQueue=new nt}async open(){await this.convexHullChainProducer.open(),ot.push(this.convexHullChainProducer)}close(){ot.remove(this.convexHullChainProducer),this.convexHullChainProducer.close()}add(e,t){this.pathProducer.togglePrediction(this.chainQueue.isEmpty()),super.add(e,t)}configure(e){this.chainQueue.isEmpty()?super.configure(e):this.chainQueue.then((()=>super.configure(e)))}build(){if(this.phase){let e=this.phase;this.phase==ke.Phase.END&&this.restart();let t=()=>Promise.resolve().then((()=>(this.buildPhase=e,this.buildSegment()))).then((t=>{this.building=!1,this.aborted||(t.phase=e,t.pointerID=this.pointerID,t.predicted.predicted=!0,this.onComplete(t))}));e==ke.Phase.END?this.queue=this.queue.then(t):this.building?this.queue=Promise.resolve():(this.building=!0,this.queue=t())}}buildChain(){if(this.phase){let e=this.phase,t=this.getLastPathSegment();this.phase==ke.Phase.END&&this.restart(),this.chainQueue.then((()=>(this.buildPhase=e,this.buildSegment(t)))).then((t=>{t.phase=e,t.pointerID=this.pointerID,t.predicted.predicted=!0,this.onComplete(t)}))}return this.chainQueue}getLastPathSegment(){let e=this.pathSegment;return this.pathSegment=new De,e}async buildSegment(e){e||(e=this.pathSegment);let t={added:e.accumulatedAddition,predicted:e.lastPrediction};return this.excludedPipelineStages.includes(qe.SMOOTHER)||(t=this.smoother.add(e.first,e.last,t.added,t.predicted)),t=this.splineProducer.add(e.first,e.last,t.added,t.predicted),t=await this.processSegment(e.first,e.last,t.added,t.predicted),e.reset(),t}async processSegment(e,t,i,r){let s=this.splineInterpolator.add(e,t,i,r);return this.lastPipelineStage==qe.SPLINE_INTERPOLATOR?s:s.added||s.predicted?(s=this.brushApplier.add(e,t,s.added,s.predicted),this.lastPipelineStage==qe.BRUSH_APPLIER?s:(s=await this.convexHullChainProducer.add(this.phase,s.added,s.predicted),this.lastPipelineStage==qe.CONVEX_HULL_CHAIN_PRODUCER||(s=this.mergeAndSimplify(e,t,s)),s)):{added:s.added?s.added.points:new Ne,predicted:s.predicted?s.predicted.points:new Ne}}onComplete(e){throw new Error("InkBuilderAsync.onComplete() should be implemented")}async processSpline(e,t){let i=this.splineInterpolator.get(e);return this.lastPipelineStage==qe.SPLINE_INTERPOLATOR?i:i?(i=this.brushApplier.get(i),this.lastPipelineStage==qe.BRUSH_APPLIER?i:(i=(await this.convexHullChainProducer.add(ke.Phase.END,i)).added,this.lastPipelineStage==qe.CONVEX_HULL_CHAIN_PRODUCER?i:(this.brush.spacing>1?this.polygonMerger.filterDuplicates=!1:this.polygonMerger.filterDuplicates=t,i=this.polygonMerger.get(i),this.lastPipelineStage==qe.POLYGON_MERGER||(i=this.polygonSimplifier.get(i)),i))):new Ne}abort(){super.abort(),this.buildPhase=null,this.chainQueue.cancel()}static closeAll(){ot.forEach((e=>e.close())),ot.clear()}}let lt,ht,dt;class ut extends u{constructor(e,t,i,r){let s;super(t.id);let n=!0;Object.defineProperty(this,"layout",{value:t.layout,enumerable:!0}),Object.defineProperty(this,"points",{get:()=>t.points,enumerable:!0}),Object.defineProperty(this,"pointProps",{value:t.pointProps,enumerable:!0}),Object.defineProperty(this,"style",{value:t.style,enumerable:!0}),Object.defineProperty(this,"ts",{value:t.ts,enumerable:!0}),Object.defineProperty(this,"tf",{value:t.tf,enumerable:!0}),Object.defineProperty(this,"stride",{value:t.stride,enumerable:!0}),Object.defineProperty(this,"length",{value:t.length,enumerable:!0}),Object.defineProperty(this,"segmentsCount",{value:t.segmentsCount,enumerable:!0}),t.randomSeed&&Object.defineProperty(this,"randomSeed",{value:t.randomSeed,enumerable:!0}),Object.defineProperty(this,"color",{get:function(){return t.color},set:function(e){t.color=e,i&&(i.color=e)},enumerable:!0}),Object.defineProperty(this,"sensorData",{value:r,enumerable:!0}),Object.defineProperty(this,"spline",{value:t,enumerable:!0}),Object.defineProperty(this,"hasPath",{get:()=>!!i,enumerable:!0}),Object.defineProperty(this,"path",{get:function(){return i||this.buildPath(),i},set:function(e){i=e},enumerable:!0}),Object.defineProperty(this,"bounds",{get:function(){return s||(s=this.path.bounds),this.matrix?s.transform(this.matrix).ceil():s},enumerable:!0}),this.reset=(e,r)=>{e&&(t=e),i=r,this.resetBounds()},this.resetBounds=()=>s=null,Object.defineProperty(this,"descriptor",{value:{brush:{}},enumerable:!0}),Object.defineProperty(this,"brush",{get:function(){return e||(e=this.descriptor.brush.value),e},set:function(i){if(n||this.reset(),"string"==typeof i?i=new q(i):i instanceof ee||i instanceof et?i=new q(i.name,i):i instanceof q||(i=new q(i.name,i.value)),i instanceof et&&!t.randomSeed)throw new Error("Spline do not provides randomSeed. Raster rendering requires it.");e=null,this.descriptor.brush=i},enumerable:!0}),this.brush=e,this.renderMode=void 0,this.sensorDataOffset=0,this.sensorDataMapping=[],n=!1}clone(){let e=new ut(this.descriptor.brush,this.spline.clone(),void 0,this.sensorData);return e.renderMode=this.renderMode,e.sensorDataOffset=this.sensorDataOffset,e.sensorDataMapping=this.sensorDataMapping.clone(),e}async init(e){this.pathProceessInProgress=!0,ht||(ht=new at,await ht.open()),ht.configure({brush:this.brush,layout:this.layout,pathPointProps:this.pointProps}),e&&ht.configure(e),this.path=await ht.processSpline(this.spline,this.target==ut.Target.GL),delete this.pathProceessInProgress}buildPath(e){if(this.pathProceessInProgress)throw new Error("Init process in progress. Await init stroke.");lt||(lt=new st),lt.configure({brush:this.brush,layout:this.layout,pathPointProps:this.pointProps}),e&&lt.configure(e),this.path=lt.processSpline(this.spline,this.target==ut.Target.GL)}getSegment(e){let t=e,i=e+3,r=0==t?this.ts:0,s=i+1==this.length?this.tf:1;return this.spline.slice(t,i,r,s)}getSensorPoint(e){if(e>=this.length||e<0)throw new Error(`Index ${e} out of range - (0, ${this.length-1})`);let t;if(this.sensorData){let i=this.sensorData.inkStream;if(i){let r;this.sensorDataMapping.length>0?r=e>=this.sensorDataMapping.length?this.sensorDataMapping.last:this.sensorDataMapping[e]:(r=this.sensorDataOffset+e,r>=i.length&&(r=i.length-1)),t=i.get(r),t.index=r,t.timespan=t.timestamp,t.timestamp+=this.sensorData.created}}return t}getPoint(e){return this.spline.getPoint(e)}setPoint(e,t){let i=e*this.stride;this.layout.forEach(((e,r)=>this.points[i+r]=t.getProperty(e)))}pointAt(e){return this.getPoint(e)}getAverageWidth(){let e=0;if(this.layout.includes(I.Property.SIZE)){let t=0;for(let e=0;e<this.length;e++)t+=this.getPoint(e).size;e=t/this.length}else e=this.pointProps.size;return e}split(e){let t=e.map((e=>this.subStroke(e)));return t.includes(this)||0==t.length?void 0:t}subStroke(e){let{fromIndex:t,toIndex:i,fromTValue:r,toTValue:s}=e;if(0==t&&i+1==this.length&&r==this.ts&&s==this.tf)return this;{let e=this.spline.slice(t,i,r,s),n=new ut(this.descriptor.brush,e,void 0,this.sensorData);return n.renderMode=this.renderMode,this.sensorData&&(n.sensorDataOffset=this.sensorDataOffset+t,this.sensorDataMapping.length>0?n.sensorDataMapping=this.sensorDataMapping.slice(t,i+1):n.sensorDataMapping=[]),n}}transform(e){e||(e=this.matrix,this.matrix=null),e&&(this.spline.transform(e),this.hasPath&&this.path.transform(e),this.resetBounds())}setTransform(e){this.matrix=e}clearStyle(){this.spline.clearStyle()}static createInstance(e,t,i,r={},s,n=0,o=1){let a=r.color;a&&(delete r.color,(r=Object.assign({},r)).red=a.red,r.green=a.green,r.blue=a.blue,r.alpha=a.alpha);let l=new ve(i,t,r,n,o);return l.randomSeed=s,new ut(e,l)}static validatePath(e){if(!e)return!1;if(0==e.length)return!1;if(e instanceof Ne)return!0;if(Array.isArray(e))throw new Error("path should be instance of InkPath2D");let t=!1,i=0,r=!1,{size:s,red:n,green:o,blue:a,alpha:l}=e.pointProps;if(!(e instanceof we)){let t=e.points.length,s=e.layout.length;r=0==t||t<4*s,i=t%s}return 0!=i?console.error(`The points array (length: ${e.points.length}) does not refer to provided layout (${e.layout.map((e=>e.name)).join(", ")})`):r?console.error("Less than needed minimum of points passed (At least 4 points are needed to define a path)!"):!e.layout.includes(I.Property.SIZE)&&isNaN(s)?console.error("Either the size property must be set or the path layout must include a SIZE property"):!e.layout.includes(I.Property.RED)&&isNaN(n)?console.error("Either the color property must be set or the path layout must include a RED property"):!e.layout.includes(I.Property.GREEN)&&isNaN(o)?console.error("Either the color property must be set or the path layout must include a GREEN property"):!e.layout.includes(I.Property.BLUE)&&isNaN(a)?console.error("Either the color property must be set or the path layout must include a BLUE property"):!e.layout.includes(I.Property.ALPHA)&&isNaN(l)?console.error("Either the color property must be set or the path layout must include a ALPHA property"):t=!0,t}static decodeInkPath(e){if("InkPath2D"==e.type)return Ne.fromJSON(e);if("InterpolatedSpline"==e.type)return we.fromJSON(e);throw new Error(`Decode ink path faild. Cannot identify type: ${e.type}`)}}if(ut.RenderMode=Object.assign({},...Object.keys(Je).map((e=>({[e]:`will://rasterization/3.0/blend-mode/${O.getPropName(e,!0)}`})))),ut.RenderMode.get=e=>ut.RenderMode[O.getEnumValueName(e.replace(/-/g,"_"))],ut.RenderMode.getBlendMode=e=>Je[Object.keys(ut.RenderMode).filter((t=>ut.RenderMode[t]==e)).first],Object.defineEnum(ut,"Target",["2D","GL"]),o.type2D==o.Type2D.OFFSCREEN)if(o.commonJS){const{Canvas:e,ImageData:t,Image:i}=require("canvas");global.OffscreenCanvas=e,global.ImageData=t,global.Image=i}else console.warn(`Current env - ${o.type.name}, do not provides OffscreenCanvas support`);class ct{constructor(){}setTransform(e){this.transform=e}getExportCanvas(e){throw new Error("Abstract method getExportCanvas of Layer inheritor should be implemented")}async toBlob(e,t="image/png",i=.92){if("undefined"==typeof Blob)throw"undefined"==typeof Buffer?new Error("Current environment do not have neither Blob nor Buffer support."):new Error("This method is not compliant in underlying environment. Use `toBuffer` instead.");let r=this.getExportCanvas(e);return r.toBlob?new Promise(((e,s)=>r.toBlob(e,t,i))):r.convertToBlob({type:t,quality:i})}async toBuffer(e,t="image/png",i={}){if("undefined"==typeof Buffer)throw"undefined"==typeof Blob?new Error("Current environment do not have neither Blob nor Buffer support."):new Error("This method is not compliant in underlying environment. Use `toBlob` instead.");let r=this.getExportCanvas(e);if(i.filters){let e=Array.isArray(i.filters)?i.filters.slice():[i.filters],t=0;e.forEach((e=>{t|=r[`PNG_FILTER_${e.name}`]})),Object.assign({},i,{filters:t})}return new Promise(((e,s)=>r.toBuffer(((t,i)=>t?s(t):e(i)),t,i)))}static getDefaultSize(e,t){let i={};return"undefined"==typeof screen?(i.width=e,i.height=t):navigator.maxTouchPoints?(i.width=Math.max(screen.width,screen.height),i.height=i.width):(i.width=screen.width,i.height=screen.height),i}}Object.defineEnum(ct,"PNGFilterType",["NO","ALL","NONE","SUB","UP","AVG","PAETH"]);class pt extends ct{get width(){return this.surface.width}get height(){return this.surface.height}constructor(e){super(),Object.defineProperty(this,"surface",{value:e.canvas}),Object.defineProperty(this,"ctx",{value:e}),Object.defineProperty(this,"bounds",{get:()=>new S(0,0,this.width,this.height),enumerable:!0}),this.ctx.getContextAttributes||(this.ctx.getContextAttributes=()=>({}))}clear(e,t){if(t){if(m.isColor(e))throw new Error("`clear` first argument should be Rectangle")}else m.isColor(e)&&(t=e,e=null);e||(e=this.bounds),this.ctx.clearRect(e.left,e.top,e.width,e.height),t&&(this.ctx.fillStyle=t.toString(),this.ctx.fillRect(e.left,e.top,e.width,e.height))}draw(e){return this.drawStroke(e.brush,e.path,e.color,e.matrix)}drawStroke(e,t,i,r){if(!ut.validatePath(t))return null;if(!(e instanceof ee))throw new Error("Incompatible brush found. It should be Brush2D instance.");r?this.transform&&(r=this.transform.multiply(r)):r=this.transform;let s=t.bounds;if(s&&(r&&(s=s.transform(r)),s=s.ceil()),s=this.bounds.intersect(s),s){if(this.ctx.save(),r?this.ctx.setTransform(r.a,r.b,r.c,r.d,r.tx,r.ty):(this.ctx.rect(s.left,s.top,s.width,s.height),this.ctx.clip()),t instanceof Ne)t.holesClockwise=!0,this.drawPath(t,i.toRGB().toString()),e.pattern&&this.drawPath(t,e.pattern);else{if(!(t instanceof we))throw new Error("drawStroke 'path' instance expected type is unexpected. Expects InkPath2D or InterpolatedSpline.");this.drawSpline(t,i)}this.ctx.restore()}return s}drawPath(e,t){this.ctx.beginPath(),e.forEach(((t,i)=>{if(this.ctx.moveTo(t[0],t[1]),e.holesClockwise||0==i)for(let e=2;e<t.length;e+=2)this.ctx.lineTo(t[e],t[e+1]);else for(let e=t.length-2;e>=0;e-=2)this.ctx.lineTo(t[e],t[e+1]);this.ctx.closePath()})),t&&(this.ctx.fillStyle=t),this.ctx.fill()}drawSpline(e,t){t||(t=e.color),this.ctx.fillStyle=`rgb(${t.red}, ${t.green}, ${t.blue})`;for(let t=0;t<e.length;t++){let i=e.getPoint(t),r=i.size/2;this.ctx.beginPath(),this.ctx.arc(i.x,i.y,r,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()}}fill(e,t){let i;if(S.isRect(e))i=e;else{if("number"==typeof e[0])e=new Ne(e);else if(!(e instanceof Ne))throw new Error("fill shape type missmatch, expected InkPath2D");i=e.bounds}return i=this.bounds.intersect(i),i&&(i=i.ceil(),this.ctx.fillStyle=t.toString(),S.isRect(e)?this.ctx.fillRect(e.left,e.top,e.width,e.height):(this.ctx.save(),this.ctx.rect(i.left,i.top,i.width,i.height),this.ctx.clip(),this.drawPath(e),this.ctx.restore())),i}blend(e,t={}){if(t.mode||(t.mode=Je.SOURCE_OVER),t.transform&&t.destinationRect)throw new Error("`destinationRect` is not applicable with `transform`");if(t.sourceRect&&!t.destinationRect)throw new Error("With `sourceRect`, `destinationRect` is required");if(t.destinationRect&&!t.sourceRect)throw new Error("With `destinationRect`, `sourceRect`is required");t.rect&&(t.sourceRect=t.rect,t.destinationRect=t.rect),this.ctx.save(),t.transform?this.ctx.setTransform(t.transform.a,t.transform.b,t.transform.c,t.transform.d,t.transform.tx,t.transform.ty):t.clipRect&&(this.ctx.rect(t.clipRect.left,t.clipRect.top,t.clipRect.width,t.clipRect.height),this.ctx.clip()),this.ctx.globalCompositeOperation=t.mode,t.sourceRect&&t.destinationRect?this.ctx.drawImage(e.ctx.canvas,t.sourceRect.left,t.sourceRect.top,t.sourceRect.width,t.sourceRect.height,t.destinationRect.left,t.destinationRect.top,t.destinationRect.width,t.destinationRect.height):this.ctx.drawImage(e.ctx.canvas,0,0),this.ctx.restore()}createImageData(e,t,i){return new ImageData(e,t,i)}getImageData(e){e||(e=this.bounds);let t=this.ctx.getImageData(e.x,e.y,e.width,e.height);return t.x=e.x,t.y=e.y,t}putImageData(e,t,i){if(!(e instanceof ImageData))throw new Error("putImageData 'imageData' parameter is not instance of ImageData");(isNaN(t)||isNaN(i))&&(t=e.x||0,i=e.y||0),this.ctx.putImageData(e,t,i)}readPixels(e){return this.getImageData(e).data}writePixels(e,t){if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("writePixels 'data' parameter is not instance of Uint8Array or Uint8ClampedArray");t||(t=this.bounds),e instanceof Uint8Array&&(e=new Uint8ClampedArray(e.buffer)),this.putImageData(this.createImageData(e,t.width,t.height),t.x,t.y)}getExportCanvas(e){let t=this.surface;return e&&(e=e.intersect(this.bounds).ceil(),t=new OffscreenCanvas(e.width,e.height),t.getContext("2d").putImageData(this.getImageData(e),0,0)),t}resize(e,t){this.surface.width=e,this.surface.height=t}}class ft extends pt{constructor(e){super(e)}createLayer(e,t){if(!e||!t){let i=ft.getDefaultSize(this.width,this.height);e=i.width,t=i.height}let i=new OffscreenCanvas(e,t);return new pt(i.getContext("2d",this.ctx.getContextAttributes()))}static createInstance(e,t,i,r){if(!e||"function"!=typeof e.getContext)throw new Error("CanvasRenderingContext2D context provider is required");if(t>0&&i>0&&(e.width=t,e.height=i),!(e.width>0&&e.width>0))throw new Error("width and height are required and should be positive whole numbers");return new ft(e.getContext("2d",r))}}o.typeGL==o.TypeGL.STACK&&(o.commonJS?dt=require("gl"):console.warn(`Current env - ${o.type.name}, do not provides WebGL support`));var mt=dt;var gt=mt?class{constructor(e=300,t=150){this.width=e,this.height=t}getContext(e="webgl",t){if(!this.context){let e=this.width,i=this.height;this.context=mt(e,i,t),this.context.canvas=this;let r=this.context.getExtension("STACKGL_resize_drawingbuffer");Object.defineProperty(this,"width",{get:()=>e,set:t=>{e=t,r.resize(e,i)},enumerable:!0}),Object.defineProperty(this,"height",{get:()=>e,set:t=>{i=t,r.resize(e,i)},enumerable:!0})}return this.context}destroy(){if(this.context){this.context.getExtension("STACKGL_destroy_context").destroy(),delete this.context}}}:void 0;class yt extends ct{constructor(e,t={}){if(super(),this.inkGLContext=e,this.gl=e.gl,this.scaleFactor=t.scaleFactor||1,this.flipY=!!t.flipY,this.useTextureStorage=!1,t.renderbuffer){if(!t.framebuffer)throw new Error("`framebuffer` is required when `renderbuffer` available");let e=this.initWithGLBuffers(t.framebuffer,t.renderbuffer);this.flipY=!0,this.ownGLResources=!!t.ownGLResources,this.setDimensions(e.width,e.height)}else if(t.framebuffer){let e=this.initWithGLFramebuffer(t.framebuffer);this.flipY=!0,this.ownGLResources=!!t.ownGLResources,this.setDimensions(e.width,e.height)}else if(t.texture){if(!(t.texture instanceof WebGLTexture))throw new Error("`texture` is not instance of WebGLTexture");let e;if(this.texture=t.texture,this.useTextureStorage=!0,t.width>0&&t.height>0)e={width:t.width,height:t.height};else if(this.texture.image)e={width:this.texture.image.width,height:this.texture.image.height};else{if(!this.texture.size)throw new Error("`width` and `height` are required when `texture` is available");e=this.texture.size}this.ownGLResources=!!t.ownGLResources,this.setDimensions(e.width,e.height)}else if(this.setDimensions(t.width,t.height),t.display)this.framebuffer=null,this.renderbuffer=null,this.texture=null;else if(this.useTextureStorage=!t.useBuffersStorage,this.ownGLResources=!0,this.useTextureStorage){let e=this.inkGLContext.generateBuffersExt(this.storageWidth,this.storageHeight,this.gl.LINEAR,this.gl.UNSIGNED_BYTE);this.framebuffer=e.framebuffer,this.texture=e.texture}else{let e=this.inkGLContext.genFrameAndRenders(this.gl.RGBA8||this.gl.RGBA4,this.storageWidth,this.storageHeight);this.framebuffer=e.framebuffer,this.renderbuffer=e.renderbuffer}this.releaseRenderbuffer=!1,this.deleted=!1}initWithGLFramebuffer(e){if(!(e instanceof WebGLFramebuffer))throw new Error("`framebuffer` is not instance of WebGLFramebuffer");let t,i=this.gl.getParameter(this.gl.RENDERBUFFER_BINDING);if(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,e),this.gl.getError()==this.gl.INVALID_OPERATION)throw new Error("Invalid framebuffer");if(this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER)!=this.gl.FRAMEBUFFER_COMPLETE)throw new Error("Incomplete framebuffer");if(this.gl.getFramebufferAttachmentParameter(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)!=this.gl.RENDERBUFFER)throw new Error("Renderbuffer attachment not found");return t=this.gl.getFramebufferAttachmentParameter(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,i),this.initWithGLBuffers(e,t)}initWithGLBuffers(e,t){if(!(e instanceof WebGLFramebuffer))throw new Error("`framebuffer` is not instance of WebGLFramebuffer");if(!(t instanceof WebGLRenderbuffer))throw new Error("`renderbuffer` is not instance of WebGLRenderbuffer");let i=this.gl.getParameter(this.gl.RENDERBUFFER_BINDING);this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,t);let r=this.gl.getRenderbufferParameter(this.gl.RENDERBUFFER,this.gl.RENDERBUFFER_WIDTH),s=this.gl.getRenderbufferParameter(this.gl.RENDERBUFFER,this.gl.RENDERBUFFER_HEIGHT);return this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,i),this.framebuffer=e,this.renderbuffer=t,{width:r,height:s}}setDimensions(e,t){let i=Math.ceil(e*this.scaleFactor),r=Math.ceil(t*this.scaleFactor),s=new T(0,0,e,t),n=new T(0,0,i,r);Object.defineProperties(this,{width:{value:e,enumerable:!0,configurable:!0},height:{value:t,enumerable:!0,configurable:!0},graphicsBounds:{value:s,enumerable:!0,configurable:!0},storageWidth:{value:i,enumerable:!0,configurable:!0},storageHeight:{value:r,enumerable:!0,configurable:!0},storageBounds:{value:n,enumerable:!0,configurable:!0}})}resize(e,t){e>0&&t>0&&(this.width!=e||this.height!=t)&&(this.setDimensions(e,t),this.useTextureStorage?(this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.storageWidth,this.storageHeight,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null)):this.renderbuffer&&(this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,this.renderbuffer),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.RGBA8||this.gl.RGBA4,this.storageWidth,this.storageHeight)))}fillTexture(e){if(!this.texture)throw new Error("Underlying layer is not texture based");new Qe(this.gl,this.texture).fill(e)}delete(){this.ownGLResources&&(this.useTextureStorage?this.inkGLContext.deleteBuffers(this.framebuffer,this.texture):this.inkGLContext.deleteFrameAndRender(this.framebuffer,this.renderbuffer)),this.releaseRenderbuffer&&this.renderbuffer&&(this.gl.deleteRenderbuffer(this.renderbuffer),this.renderbuffer=null,this.releaseRenderbuffer=!1),this.deleted=!0}deleteLater(){setTimeout((()=>this.delete()),0)}isDeleted(){return this.deleted}}class bt{constructor(e){this.randomSeed=e||parseInt(Date.now()/1e3)}copyTo(e){e.randomSeed=this.randomSeed}}class Et extends yt{constructor(e,t){super(e.inkGLContext,t),this.convexHullChainProducer=new Xe,this.polygonSimplifier=new He,Object.defineProperty(this,"inkContext",{value:e,enumerable:!0}),Object.defineProperty(this,"bounds",{get:()=>S.fromGLRect(this.graphicsBounds),enumerable:!0})}clear(e,t){if(t){if(m.isColor(e))throw new Error("`clear` first argument should be Rect")}else m.isColor(e)?(t=e,e=null):t=m.TRANSPERENT;let i;if(S.isRect(e)){if(!e.intersect(this.bounds))return;i=S.fromRect(e).toGLRect()}Array.isArray(e)||e instanceof Float32Array?this.fill(e,t,!1):(this.inkContext.setTarget(this,i),this.inkContext.clearColor(t)),i&&this.inkContext.disableTargetClipRect()}draw(e){let t,i=e.brush;return i instanceof et?isFinite(e.randomSeed)&&(t=new bt(e.randomSeed)):t=e.color,this.drawStroke(i,e.path,t)}drawStroke(e,t,i){if(!ut.validatePath(t))return null;this.inkContext.setTarget(this);let r=this.inkContext.drawStroke(e,t,i);return r instanceof T&&(r=S.fromGLRect(r)),r}fill(e,t,i=!0){let r,s=!1;if(S.isRect(e))r=e,e=new Ne(e.toPath().points),s=!0;else{if("number"==typeof e[0])e=new Ne(e);else if(!(e instanceof Ne))throw new Error("fill shape type missmatch, expected InkPath2D");r=e.bounds}if(r=this.bounds.intersect(r),r){s||(e=this.convexHullChainProducer.get(e)),e=this.polygonSimplifier.get(e);let n=this.inkContext.triangulate(e);n.length>0?(this.inkContext.setTarget(this),this.inkContext.fill(n,t,i)):r=void 0}return r?r.ceil():void 0}blend(e,t={}){if(t.mode||(t.mode=Je.SOURCE_OVER),t.rect&&!t.transform&&(t.sourceRect=t.rect,t.destinationRect=t.rect),t.transform&&t.destinationRect)throw new Error("`destinationRect` is not applicable with `transform`");if(t.sourceRect&&!t.destinationRect)throw new Error("With `sourceRect`, `destinationRect` is required");if(t.destinationRect&&!t.sourceRect)throw new Error("With `destinationRect`, `sourceRect`is required");if(this.inkContext.setTarget(this,S.isRect(t.clipRect)?S.fromRect(t.clipRect).toGLRect():void 0),"boolean"==typeof t.flipY&&(e.flipY=t.flipY),t.transform&&t.rect){let i=S.fromRect(t.rect).toGLRect().toQuad(),r=S.fromRect(t.rect).toGLRect().toQuad(t.transform);this.inkContext.drawLayer(e,i,r,t.mode)}else t.transform?this.inkContext.drawLayerWithTransform(e,t.transform,t.mode):t.sourceRect&&t.destinationRect?this.inkContext.drawLayer(e,S.fromRect(t.sourceRect).toGLRect().toQuad(),S.fromRect(t.destinationRect).toGLRect().toQuad(),t.mode):this.inkContext.drawLayerWithTransform(e,null,t.mode)}createImageData(e,t,i){return e instanceof Uint8Array&&(e=new Uint8ClampedArray(e.buffer)),new ImageData(e,t,i)}getImageData(e,t=!1){e||(e=this.bounds);let i=this.createImageData(this.readPixels(e,t),e.width,e.height);return i.x=e.x,i.y=e.y,i}putImageData(e,t,i){if(!(e instanceof ImageData))throw new Error("putImageData 'imageData' parameter is not instance of ImageData");(isNaN(t)||isNaN(i))&&(t=e.x||0,i=e.y||0),this.writePixels(e.data,new S(t,i,e.width,e.height))}readPixels(e,t){e&&(e=S.fromRect(e).toGLRect()),this.inkContext.setTarget(this);let i=this.inkContext.readPixels(e);if(t)for(let e=0;e<i.length;e+=4){let t=i[e+3];i[e]=parseInt(255*i[e]/t),i[e+1]=parseInt(255*i[e+1]/t),i[e+2]=parseInt(255*i[e+2]/t)}return i}writePixels(e,t){if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("writePixels 'data' parameter is not instance of Uint8Array or Uint8ClampedArray");t&&(t=S.fromRect(t).toGLRect()),this.inkContext.setTarget(this),this.inkContext.writePixels(t,e)}getExportCanvas(e){e=e?e.intersect(this.bounds).ceil():this.bounds;let t=new OffscreenCanvas(e.width,e.height);return t.getContext("2d").putImageData(this.getImageData(e,!0),0,0),t}}let Pt;Pt=o.commonJS?require("poly2tri"):globalThis.poly2tri;const{SweepContext:xt,Point:vt}=Pt;class wt{constructor(e){if(!e)throw new Error("GL context is not available in current environment");let t;this.gl=e,this.program=null,this.programs=[],Object.defineProperty(this,"blendMode",{get:function(){return t},set:function(e){if(!e)throw new Error("blendMode is required");t!=e&&(this.activeBlendMode(e),t=e)},enumerable:!0}),Object.defineProperty(wt,"VERTEX_SHADER_PRECISION",{value:this.getSupportedFloatPrecision(this.gl.VERTEX_SHADER),enumerable:!0,configurable:!0}),Object.defineProperty(wt,"FRAGMENT_SHADER_PRECISION",{value:this.getSupportedFloatPrecision(this.gl.FRAGMENT_SHADER),enumerable:!0,configurable:!0}),Object.defineProperty(wt,"VERTEX_BATCH_SIZE",{value:1e3,enumerable:!0})}init(e,t){this.gl.disable(this.gl.DITHER),this.gl.disable(this.gl.BLEND),this.gl.disable(this.gl.STENCIL_TEST),this.gl.disable(this.gl.DEPTH_TEST),this.gl.disable(this.gl.SCISSOR_TEST),this.gl.activeTexture(this.gl.TEXTURE0),this.blendMinMaxExt=this.gl.getExtension("EXT_blend_minmax"),this.blendMaxFallback=!this.gl.MAX&&!this.blendMinMaxExt,this.blendMode=Je.COPY,this.resize(e,t),this.scatterMethodRandomSeed=parseInt(Date.now()/1e3),this.onChange();for(let e=0;e<this.programs.length;e++)this.programs[e].init()}getSupportedFloatPrecision(e){return this.gl.getShaderPrecisionFormat(e,this.gl.HIGH_FLOAT).precision>0?"highp":this.gl.getShaderPrecisionFormat(e,this.gl.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}random(){return this.scatterMethodRandomSeed=1103515245*this.scatterMethodRandomSeed+12345&2147483647,this.scatterMethodRandomSeed/2147483647}static random(e){return(1103515245*e+12345&2147483647)/2147483647}setUniforms(t){let i=e.mat4.create();this._scaleVectorAbs=new Float32Array([this.bounds.width/this.graphicsBox.width,this.bounds.height/this.graphicsBox.height]),t?e.mat4.ortho(i,this.graphicsBox.left,this.graphicsBox.right,this.graphicsBox.top,this.graphicsBox.bottom,1,-1):e.mat4.ortho(i,this.graphicsBox.left,this.graphicsBox.right,this.graphicsBox.bottom,this.graphicsBox.top,1,-1),this._graphicsSpaceToFramebufferSpaceT=i,this.onChange()}resize(e,t){this.gl.viewport(e.x,e.y,e.width,e.height),this.bounds=e,this.graphicsBox=t,this._clipRect=this.graphicsBox}activeBlendMode(e){switch(e){case Je.COPY:this.gl.disable(this.gl.BLEND);break;case Je.SOURCE_OVER:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA);break;case Je.DESTINATION_OVER:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ONE_MINUS_DST_ALPHA,this.gl.ONE);break;case Je.DESTINATION_IN:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ZERO,this.gl.SRC_ALPHA);break;case Je.DESTINATION_OUT:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ZERO,this.gl.ONE_MINUS_SRC_ALPHA);break;case Je.DESTINATION_IN_NO_ALPHA:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ZERO,this.gl.SRC_COLOR);break;case Je.DESTINATION_OUT_NO_ALPHA:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ZERO,this.gl.ONE_MINUS_SRC_COLOR);break;case Je.LIGHTER:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ONE,this.gl.ONE);break;case Je.MIN:this.gl.enable(this.gl.BLEND),this.gl.MIN?this.gl.blendEquation(this.gl.MIN):this.blendMinMaxExt?this.gl.blendEquation(this.blendMinMaxExt.MIN_EXT):(this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA));break;case Je.MAX:this.gl.enable(this.gl.BLEND),this.gl.MAX?this.gl.blendEquation(this.gl.MAX):this.blendMinMaxExt?this.gl.blendEquation(this.blendMinMaxExt.MAX_EXT):(this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA));break;case Je.SUBTRACT:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_SUBTRACT),this.gl.blendFunc(this.gl.ONE,this.gl.ONE);break;case Je.SUBTRACT_REVERSE:this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_REVERSE_SUBTRACT),this.gl.blendFunc(this.gl.ONE,this.gl.ONE);break;default:throw new Error(`Unsupported blend mode: ${e}`)}}clearColorBuffer(e){this.gl.clearColor(e.red*e.alpha/255,e.green*e.alpha/255,e.blue*e.alpha/255,e.alpha),this.gl.clear(this.gl.COLOR_BUFFER_BIT)}scissors(e){if(e&&!(e instanceof T))throw new TypeError("rect must be undefined or instanceof RectGL");let t=this.gl.isEnabled(this.gl.SCISSOR_TEST);e?(t||this.gl.enable(this.gl.SCISSOR_TEST),this.gl.scissor(e.x,e.y,e.width,e.height)):t&&this.gl.disable(this.gl.SCISSOR_TEST)}isProgramActive(e){return this.program==e}activateProgram(e){this.isProgramActive(e)?e.contextChanged&&(e.onContextChange(),e.contextChanged=!1):(this.program&&this.program.onDeactivate(),this.gl.useProgram(e.program),this.program=e,e.onActivate(),e.onContextChange(),e.contextChanged=!1)}generateBuffersExt(e,t,i,r){let s=this.gl,n=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,n);let o=s.createTexture();return s.activeTexture(s.TEXTURE0),s.bindTexture(s.TEXTURE_2D,o),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,i),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,i),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,e,t,0,s.RGBA,r,null),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,o,0),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),{framebuffer:n,texture:o}}genFrameAndRenders(e,t,i){let r=this.gl.createFramebuffer(),s=this.gl.createRenderbuffer();return this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,r),this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,s),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,e,t,i),this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.RENDERBUFFER,s),{framebuffer:r,renderbuffer:s}}deleteBuffers(e,t){t&&this.gl.deleteTexture(t),e&&this.gl.deleteFramebuffer(e)}deleteFrameAndRender(e,t){t&&this.gl.deleteRenderbuffer(t),e&&this.gl.deleteFramebuffer(e)}onChange(){for(let e=0;e<this.programs.length;e++)this.programs[e].contextChanged=!0}enableStencilBufferForBlending(e){this.gl.enable(this.gl.STENCIL_TEST),this.gl.stencilMask(4294967295),this.gl.clearStencil(0),this.gl.clear(this.gl.STENCIL_BUFFER_BIT),this.isStencilBufferAvailable()||this.attachStencilBufferForBlending(e)}isStencilBufferAvailable(){return this.gl.getFramebufferAttachmentParameter(this.gl.FRAMEBUFFER,this.gl.STENCIL_ATTACHMENT,this.gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)==this.gl.RENDERBUFFER}attachStencilBufferForBlending(e){let t=this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);if(e.framebuffer==t){let t=this.gl.createRenderbuffer();this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,t),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.STENCIL_INDEX8,e.width,e.height),this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.STENCIL_ATTACHMENT,this.gl.RENDERBUFFER,t),e.renderbuffer=t,e.releaseRenderbuffer=!0}}drawArrays(e,t,i){this.blendMode==Je.MAX&&this.blendMaxFallback?this.drawBlendMaxFallback(this.gl.drawArrays.bind(this.gl,e,t,i)):this.gl.drawArrays(e,t,i)}drawElements(e,t,i,r){this.blendMode==Je.MAX&&this.blendMaxFallback?this.drawBlendMaxFallback(this.gl.drawElements.bind(this.gl,e,t,i,r)):this.gl.drawElements(e,t,i,r)}drawBlendMaxFallback(e){this.gl.enable(this.gl.STENCIL_TEST),this.gl.stencilFunc(this.gl.NOTEQUAL,1,1),this.gl.stencilOp(this.gl.REPLACE,this.gl.REPLACE,this.gl.REPLACE),this.gl.blendFunc(this.gl.ONE,this.gl.ONE),this.gl.blendEquation(this.gl.FUNC_REVERSE_SUBTRACT),e(),this.gl.stencilFunc(this.gl.NOTEQUAL,2,1),this.gl.stencilOp(this.gl.REPLACE,this.gl.REPLACE,this.gl.REPLACE),this.gl.blendFunc(this.gl.ONE,this.gl.ONE),this.gl.blendEquation(this.gl.FUNC_ADD),e(),this.gl.disable(this.gl.STENCIL_TEST)}}class It{constructor(e){Object.defineProperties(this,{inkGLContext:{value:e,enumerable:!0},gl:{value:e.gl,enumerable:!0}}),this.program=this.createProgram(this.compileShader(this.constructor.getVertexShader(),this.gl.VERTEX_SHADER),this.compileShader(this.constructor.getFragmentShader(this.gl.getContextAttributes().premultipliedAlpha),this.gl.FRAGMENT_SHADER)),this.contextChanged=!0}init(){}compileShader(e,t){let i=this.gl.createShader(t);if(this.gl.shaderSource(i,e),this.gl.compileShader(i),!this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))throw new Error(`${this.constructor.name} could not compile shader: ${this.gl.getShaderInfoLog(i)}`);return i}createProgram(e,t){let i=this.gl.createProgram();if(this.gl.attachShader(i,e),this.gl.attachShader(i,t),this.gl.linkProgram(i),!this.gl.getProgramParameter(i,this.gl.LINK_STATUS))throw new Error(`${this.constructor.name} failed to link: ${this.gl.getProgramInfoLog(i)}`);return i}onActivate(){}onDeactivate(){}onContextChange(){}activate(){this.inkGLContext.activateProgram(this)}}class Tt extends It{constructor(e){super(e),this.vertsBuffer=this.gl.createBuffer(),this.colorsBuffer=this.gl.createBuffer()}init(){this.a_position=this.gl.getAttribLocation(this.program,"a_position"),this.a_color=this.gl.getAttribLocation(this.program,"a_color"),this.u_projectionMatrix=this.gl.getUniformLocation(this.program,"u_projectionMatrix")}onContextChange(){this.gl.uniformMatrix4fv(this.u_projectionMatrix,!1,this.inkGLContext._graphicsSpaceToFramebufferSpaceT)}onDeactivate(){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)}drawVertices(e,t,i){this.activate(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertsBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,e,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.a_position),this.gl.vertexAttribPointer(this.a_position,2,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.colorsBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,t,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.a_color),this.gl.vertexAttribPointer(this.a_color,4,this.gl.FLOAT,!1,0,0),e.length&&this.inkGLContext.drawArrays(this.gl.TRIANGLES,0,e.length/2)}drawPathVerticesPatch(e,t,i){this.activate(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertsBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,e,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.a_position),this.gl.vertexAttribPointer(this.a_position,2,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.colorsBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,t,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.a_color),this.gl.vertexAttribPointer(this.a_color,4,this.gl.FLOAT,!1,0,0),e.length&&(this.gl.blendFunc(this.gl.ONE,this.gl.ONE),this.gl.blendEquation(this.gl.FUNC_REVERSE_SUBTRACT),this.gl.drawArrays(this.gl.TRIANGLES,0,e.length/2),this.gl.blendFunc(this.gl.ONE,this.gl.ONE),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.drawArrays(this.gl.TRIANGLES,0,e.length/2))}static getVertexShader(){return`\n\t\t\tprecision ${wt.VERTEX_SHADER_PRECISION} float;\n\n\t\t\tuniform mat4 u_projectionMatrix;\n\n\t\t\tattribute highp vec4 a_position;\n\t\t\tattribute lowp vec4 a_color;\n\n\t\t\tvarying lowp vec4 v_color;\n\n\t\t\tvoid main() {\n\t\t\t\tgl_Position = u_projectionMatrix * a_position;\n\t\t\t\tv_color = a_color;\n\t\t\t}\n\t\t`}static getFragmentShader(){return"\n\t\t\tvarying lowp vec4 v_color;\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = v_color;\n\t\t\t}\n\t\t"}}class St extends It{constructor(e){super(e),this.destBuffer=this.gl.createBuffer(),this.srcBuffer=this.gl.createBuffer()}init(){this.a_position=this.gl.getAttribLocation(this.program,"a_position"),this.a_srcPosition=this.gl.getAttribLocation(this.program,"a_srcPosition"),this.u_texture=this.gl.getUniformLocation(this.program,"u_texture"),this.u_projectionMatrix=this.gl.getUniformLocation(this.program,"u_projectionMatrix"),this.u_textureMatrix=this.gl.getUniformLocation(this.program,"u_textureMatrix")}onDeactivate(){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)}drawTexture(e,t,i,r,s){this.activate(),this.gl.disable(this.gl.DEPTH_TEST),this.gl.disable(this.gl.STENCIL_TEST),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,e),this.gl.uniform1i(this.u_texture,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.destBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,t,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.a_position),this.gl.vertexAttribPointer(this.a_position,2,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.srcBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,i,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.a_srcPosition),this.gl.vertexAttribPointer(this.a_srcPosition,2,this.gl.FLOAT,!1,0,0),this.gl.uniformMatrix4fv(this.u_projectionMatrix,!1,r),this.gl.uniformMatrix4fv(this.u_textureMatrix,!1,s),this.inkGLContext.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}static getVertexShader(){return`\n\t\t\tprecision ${wt.VERTEX_SHADER_PRECISION} float;\n\n\t\t\tuniform mat4 u_projectionMatrix;\n\t\t\tuniform mat4 u_textureMatrix;\n\t\t\tattribute highp vec4 a_position;\n\t\t\tattribute highp vec4 a_srcPosition;\n\t\t\tvarying highp vec2 v_textureCoordinate;\n\n\t\t\tvoid main() {\n\t\t\t\tgl_Position = u_projectionMatrix * a_position;\n\t\t\t\tv_textureCoordinate = (u_textureMatrix * a_srcPosition).xy;\n\t\t\t}\n\t\t`}static getFragmentShader(){return`\n\t\t\tprecision ${wt.FRAGMENT_SHADER_PRECISION} float;\n\n\t\t\tvarying vec2 v_textureCoordinate;\n\t\t\tuniform lowp sampler2D u_texture;\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = texture2D(u_texture, v_textureCoordinate);\n\t\t\t}\n\t\t`}}class Rt extends It{constructor(e){super(e),this.buffer=this.gl.createBuffer(),this.indexBuffer=this.gl.createBuffer()}init(){this.a_coordinates=this.gl.getAttribLocation(this.program,"a_coordinates"),this.a_xys=this.gl.getAttribLocation(this.program,"a_xys"),this.a_spriteRotation=this.gl.getAttribLocation(this.program,"a_spriteRotation"),this.a_spriteScaleAndOffset=this.gl.getAttribLocation(this.program,"a_spriteScaleAndOffset"),this.a_color=this.gl.getAttribLocation(this.program,"a_color"),this.a_velocity=this.gl.getAttribLocation(this.program,"a_velocity"),this.a_transformParams=this.gl.getAttribLocation(this.program,"a_transformParams"),this.u_projectionMatrix=this.gl.getUniformLocation(this.program,"u_projectionMatrix"),this.u_fillTextureSize=this.gl.getUniformLocation(this.program,"u_fillTextureSize"),this.u_fillTextureOffset=this.gl.getUniformLocation(this.program,"u_fillTextureOffset"),this.u_shapeTexture=this.gl.getUniformLocation(this.program,"u_shapeTexture"),this.u_fillTexture=this.gl.getUniformLocation(this.program,"u_fillTexture")}setBrush(e){this.brush=e,this.brushChanged=!0}onActivate(){this.brushChanged=!0,this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);let e=19*Float32Array.BYTES_PER_ELEMENT;this.gl.vertexAttribPointer(this.a_coordinates,2,this.gl.FLOAT,!1,e,0*Float32Array.BYTES_PER_ELEMENT),this.gl.vertexAttribPointer(this.a_xys,3,this.gl.FLOAT,!1,e,2*Float32Array.BYTES_PER_ELEMENT),this.gl.vertexAttribPointer(this.a_spriteRotation,1,this.gl.FLOAT,!1,e,5*Float32Array.BYTES_PER_ELEMENT),this.gl.vertexAttribPointer(this.a_spriteScaleAndOffset,4,this.gl.FLOAT,!1,e,6*Float32Array.BYTES_PER_ELEMENT),this.gl.vertexAttribPointer(this.a_color,4,this.gl.FLOAT,!1,e,10*Float32Array.BYTES_PER_ELEMENT),this.gl.vertexAttribPointer(this.a_velocity,2,this.gl.FLOAT,!1,e,14*Float32Array.BYTES_PER_ELEMENT),this.gl.vertexAttribPointer(this.a_transformParams,3,this.gl.FLOAT,!1,e,16*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.a_coordinates),this.gl.enableVertexAttribArray(this.a_xys),this.gl.enableVertexAttribArray(this.a_spriteRotation),this.gl.enableVertexAttribArray(this.a_spriteScaleAndOffset),this.gl.enableVertexAttribArray(this.a_color),this.gl.enableVertexAttribArray(this.a_velocity),this.gl.enableVertexAttribArray(this.a_transformParams)}onContextChange(){this.gl.uniformMatrix4fv(this.u_projectionMatrix,!1,this.inkGLContext._graphicsSpaceToFramebufferSpaceT)}onDeactivate(){this.gl.disableVertexAttribArray(this.a_coordinates),this.gl.disableVertexAttribArray(this.a_xys),this.gl.disableVertexAttribArray(this.a_spriteRotation),this.gl.disableVertexAttribArray(this.a_spriteScaleAndOffset),this.gl.disableVertexAttribArray(this.a_color),this.gl.disableVertexAttribArray(this.a_velocity),this.gl.disableVertexAttribArray(this.a_transformParams),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)}updateTextures(){this.brushChanged&&(this.brushChanged=!1,this.gl.uniform2f(this.u_fillTextureOffset,this.brush.fillTextureOffset.x,this.brush.fillTextureOffset.y),this.gl.uniform2f(this.u_fillTextureSize,this.brush.fillTextureSize.width,this.brush.fillTextureSize.height),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.brush.shapeTexture.value),this.gl.uniform1i(this.u_shapeTexture,0),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D,this.brush.fillTexture.value),this.gl.uniform1i(this.u_fillTexture,1))}drawSpritesBatch(e,t){let i;this.activate(),this.updateTextures();let r=t*wt.VERTEX_BATCH_SIZE,s=r+wt.VERTEX_BATCH_SIZE;s>e.length&&(s=r+e.length%wt.VERTEX_BATCH_SIZE);let n=s-r,o=new Float32Array(76*n),a=new Uint16Array(6*n),l=this.brush.rotationMode==et.RotationMode.TRAJECTORY?1:0;for(let t=r;t<s;t++){let s=e.getPoint(t),n=76*(t-r);i=T.calculateBrushGLSegmentBounds(s,this.brush.scattering).union(i);let a=s.red/255*s.alpha,h=s.green/255*s.alpha,d=s.blue/255*s.alpha;0==s.dX&&0==s.dY&&(s.dX=2*this.inkGLContext.random()-1,s.dY=2*this.inkGLContext.random()-1);let u=this.brush.rotationMode==et.RotationMode.RANDOM?2*this.inkGLContext.random()*Math.PI:0,c=(2*this.inkGLContext.random()-1)*this.brush.scattering;T.SQURE.forEach(((e,t)=>{let i=n+19*t;o[i]=e.x,o[i+1]=e.y,o[i+2]=s.x,o[i+3]=s.y,o[i+4]=s.size,o[i+5]=s.rotation,o[i+6]=s.scaleX,o[i+7]=s.scaleY,o[i+8]=s.offsetX,o[i+9]=s.offsetY,o[i+10]=a,o[i+11]=h,o[i+12]=d,o[i+13]=s.alpha,o[i+14]=s.dX,o[i+15]=s.dY,o[i+16]=l,o[i+17]=u,o[i+18]=c}))}let h=0;for(let e=0;e<a.length;e+=6)a[e]=h,a[e+1]=h+1,a[e+2]=h+2,a[e+3]=h+2,a[e+4]=h+1,a[e+5]=h+3,h+=4;return this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,a,this.gl.STATIC_DRAW),this.inkGLContext.drawElements(this.gl.TRIANGLES,a.length,this.gl.UNSIGNED_SHORT,0),i}static getVertexShader(){return`\n\t\t\tprecision ${wt.VERTEX_SHADER_PRECISION} float;\n\n\t\t\tuniform mat4 u_projectionMatrix;\n\t\t\tuniform vec2 u_fillTextureSize;\n\t\t\tuniform vec2 u_fillTextureOffset;\n\n\t\t\tattribute lowp vec4 a_color;\n\t\t\t/* (x,y) is the center. z is the offset by x, w is the offset by y */\n\t\t\tattribute highp vec2 a_coordinates;\n\t\t\t/* the velocity at that point. It is the derivative of the function */\n\t\t\tattribute vec2 a_velocity;\n\t\t\t/* 1-shape trajectory rotation coficient, 2-shape randrom rotation angle, 3-scattering value */\n\t\t\tattribute vec3 a_transformParams;\n\n\t\t\t/* sprite rotation angle */\n\t\t\tattribute highp float a_spriteRotation;\n\t\t\t/* sprite's: 1-scaleX, 2-scaleY, 3-offsetX, 4-offsetY */\n\t\t\tattribute highp vec4 a_spriteScaleAndOffset;\n\n\t\t\tvarying lowp vec4 v_color;\n\t\t\tattribute vec3 a_xys;\n\t\t\tvarying highp vec2 v_shapeTexturePosition;\n\t\t\tvarying highp vec2 v_fillTexturePosition;\n\n\t\t\tmat2 trajectoryRotate(vec2 vNormal, float value) {\n\t\t\t\tvec2 base = vec2(1.0, 0.0);\n\n\t\t\t\tvec2 vNormalR = mix(base, vNormal, value);\n\t\t\t\tvNormalR = normalize(vNormalR);\n\n\t\t\t\tfloat cosfi = dot(vNormalR, base);\n\t\t\t\tfloat sinfi = vNormalR.x * base.y - vNormalR.y * base.x;\n\n\t\t\t\treturn mat2(\n\t\t\t\t\tcosfi, -sinfi,\n\t\t\t\t\tsinfi, cosfi\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmat2 angleRotate2(float fi) {\n\t\t\t\tfloat sinfi = sin(fi);\n\t\t\t\tfloat cosfi = cos(fi);\n\n\t\t\t\treturn mat2(\n\t\t\t\t\tcosfi, -sinfi,\n\t\t\t\t\tsinfi, cosfi\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmat2 scale2(float sx, float sy) {\n\t\t\t\treturn mat2(sx, 0.0, 0.0, sy);\n\t\t\t}\n\n\t\t\tmat3 rotate2h(float fi) {\n\t\t\t\tfloat sinfi = sin(fi);\n\t\t\t\tfloat cosfi = cos(fi);\n\n\t\t\t\treturn mat3(\n\t\t\t\t\tcosfi, -sinfi, 0.0,\n\t\t\t\t\tsinfi, cosfi, 0.0,\n\t\t\t\t\t0.0, 0.0, 1.0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmat3 scale2h(float sx, float sy) {\n\t\t\t\treturn mat3(\n\t\t\t\t\tsx, 0.0, 0.0,\n\t\t\t\t\t0.0, sy, 0.0,\n\t\t\t\t\t0.0, 0.0, 1.0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmat3 translate2h(float tx, float ty) {\n\t\t\t\treturn mat3(\n\t\t\t\t\t1.0, 0.0, 0.0,\n\t\t\t\t\t0.0, 1.0, 0.0,\n\t\t\t\t\ttx, ty, 1.0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvec2 orthoOffset(vec2 vNormal, float value) {\n\t\t\t\tvec2 vno = vec2(vNormal.y * value, vNormal.x * value);\n\t\t\t\treturn vno;\n\t\t\t}\n\n\t\t\tvoid main() {\n\t\t\t\tfloat halfSize = a_xys.z / 2.0;\n\t\t\t\tvec2 vNormal = normalize(a_velocity);\n\n\t\t\t\t// Because this applied to the texture, the y reversed because the texture coordinate system y is increasing downwards.\n\t\t\t\tvNormal.y = -vNormal.y;\n\n\t\t\t\tfloat spriteRotation = a_spriteRotation;\n\t\t\t\tvec4 spriteScaleAndOffset = a_spriteScaleAndOffset;\n\t\t\t\tspriteScaleAndOffset.y = -spriteScaleAndOffset.y;\n\t\t\t\tspriteScaleAndOffset.w = -spriteScaleAndOffset.w;\n\n\t\t\t\tmat2 productRotateMatrix = angleRotate2(a_transformParams.y) * trajectoryRotate(vNormal, a_transformParams.x);\n\t\t\t\tvec2 scatterOffset = orthoOffset(vNormal, a_transformParams.z * halfSize);\n\t\t\t\tvec2 transformedCoordinates = productRotateMatrix * a_coordinates;\n\n\t\t\t\tvec3 coordinatesH = vec3(transformedCoordinates.x, transformedCoordinates.y, 1.0);\n\t\t\t\tcoordinatesH = rotate2h(spriteRotation) * translate2h(spriteScaleAndOffset.z, spriteScaleAndOffset.w) * scale2h(spriteScaleAndOffset.x * halfSize, spriteScaleAndOffset.y * halfSize) * coordinatesH;\n\t\t\t\tvec2 coordinates = coordinatesH.xy;\n\n\t\t\t\tvec2 offset = coordinates + scatterOffset;\n\t\t\t\tvec4 position = vec4(a_xys.x + offset.x, a_xys.y + offset.y, 0.0, 1.0);\n\n\t\t\t\tv_color = a_color;\n\t\t\t\tgl_Position = u_projectionMatrix * position;\n\t\t\t\tv_fillTexturePosition = position.xy / u_fillTextureSize + u_fillTextureOffset;\n\t\t\t\tv_shapeTexturePosition = (a_coordinates + 1.0) * 0.5; /* [-1;1] -> [0;1] */\n\t\t\t}\n\t\t`}static getFragmentShader(e){return`\n\t\t\tuniform lowp sampler2D u_shapeTexture;\n\t\t\tuniform lowp sampler2D u_fillTexture;\n\n\t\t\t/* lowp seems to lead to an overflow on PowerVR SGX540, so use mediump instead :)*/\n\t\t\tvarying mediump vec4 v_color;\n\t\t\tvarying highp vec2 v_shapeTexturePosition;\n\t\t\tvarying highp vec2 v_fillTexturePosition;\n\n\t\t\tvoid main() {\n\t\t\t\tlowp vec4 c = v_color * texture2D(u_shapeTexture, v_shapeTexturePosition) * texture2D(u_fillTexture, v_fillTexturePosition);\n\n\t\t\t\tgl_FragColor = ${e?"c":"vec4(c.x / c.w, c.y / c.w, c.z / c.w, c.w * 255.0)"};\n\t\t\t}\n\t\t`}}class At{constructor(e,t){let i=e.getContext("webgl2",t)||e.getContext("webgl",t);this.inkGLContext=new wt(i),this.gl=this.inkGLContext.gl,this.simpleProgram=new Tt(this.inkGLContext),this.textureProgram=new St(this.inkGLContext),this.spriteProgram=new Rt(this.inkGLContext),this.inkGLContext.programs=[this.simpleProgram,this.textureProgram,this.spriteProgram],this.currentTarget=null,this.inkGLContext.init(new T(0,0,0,0),new T(0,0,0,0))}createLayer(e,t){return new yt(this.inkGLContext,e,t)}drawLayerWithTransform(e,t,i){if(!this.currentTarget)return;let r=e.graphicsBounds.toQuad(),s=e.graphicsBounds.toQuad(t);this.drawLayer(e,r,s,i)}drawLayer(t,i,r,s){if(!this.currentTarget)return;if(!t.useTextureStorage)return;let n=e.mat4.create(),o=e.mat4.create(),a=this.currentTarget;a.flipY?e.mat4.ortho(o,0,a.width,a.height,0,1,-1):e.mat4.ortho(o,0,a.width,0,a.height,1,-1),t.flipY?e.mat4.ortho(n,-t.width,t.width,2*t.height,0,0,1):e.mat4.ortho(n,-t.width,t.width,-t.height,t.height,0,1),this.inkGLContext.blendMode=s,this.textureProgram.drawTexture(t.texture,r,i,o,n)}setTarget(e,t){let i=this.inkGLContext,r=i.gl;if(e&&!(e instanceof yt))throw new TypeError("layer must be unset or instanceof InkLayer");if(t&&!(t instanceof T))throw new TypeError("clipRect must be unset or instanceof RectGL");if(e){this.currentTarget=e;let s=new T(0,0,e.storageWidth,e.storageHeight),n=new T(0,0,e.width,e.height);i.resize(s,n),i.setUniforms(e.flipY),t?this.setTargetClipRect(t):this.disableTargetClipRect(),r.bindFramebuffer(r.FRAMEBUFFER,e.framebuffer)}}clearColor(e){this.inkGLContext.clearColorBuffer(e)}setTargetClipRect(e){let t=this.inkGLContext;e=e.floor().intersect(this.currentTarget.graphicsBounds),t._clipRect=e;let i=this.currentTarget.scaleFactor;e=this.currentTarget.flipY?new T(e.x,this.currentTarget.storageHeight-e.top,e.width,e.height):new T(e.x*i,e.y*i,e.width*i,e.height*i),t.scissors(e)}disableTargetClipRect(){let e=this.inkGLContext;e.scissors(null),e._clipRect=e.graphicsBox}drawStroke(e,t,i){return this.currentTarget?0==t.length?null:(this.inkGLContext.blendMaxFallback&&e.blendMode==Je.MAX&&this.inkGLContext.enableStencilBufferForBlending(this.currentTarget),e instanceof et?this.drawGL(e,t,i):this.draw2D(e,t,i)):null}drawGL(e,t,i){let r,s=null,n=this.inkGLContext._clipRect;i&&(r=this.inkGLContext.scatterMethodRandomSeed,this.inkGLContext.scatterMethodRandomSeed=i.randomSeed),e.blendMode?this.inkGLContext.blendMode=e.blendMode:this.inkGLContext.blendMode=Je.SOURCE_OVER,this.spriteProgram.setBrush(e);let o=Math.ceil(t.length/wt.VERTEX_BATCH_SIZE);for(let e=0;e<o;e++){s=this.spriteProgram.drawSpritesBatch(t,e).union(s)}return i&&(i.randomSeed=this.inkGLContext.scatterMethodRandomSeed,this.inkGLContext.scatterMethodRandomSeed=r),s=n.intersect(s),s&&(s=s.ceil()),s}draw2D(e,t,i){let r=this.currentTarget.bounds.intersect(t.bounds);if(!r)return null;if(e.spacing>1)t.forEach((e=>{let t=this.triangulate([e]);this.fillStroke(t,i)}));else{let e=this.triangulate(t);this.fillStroke(e,i)}return r}triangulate(e){let t=[],i=[],r=0;e.forEach((e=>{let t=[];for(let i=0;i<e.length;i+=2){let s=new vt(e[i],e[i+1]);s.index=r++,t.push(s)}i.push(t)}));let s=new xt(i.shift());i.forEach((e=>s.addHole(e)));let n=[];try{s.triangulate(),n=s.getTriangles()}catch(e){console.warn(e)}return t.index=[],n.forEach((e=>{let i=e.getPoints().filter((e=>isFinite(e.index)));3==i.length?i.forEach((e=>{t.push(e.x,e.y),t.index.push(e.index)})):console.warn("Undefined triangle:",e.getPoints())})),t}fillStroke(e,t){this.fill(e,t,!0,!0)}fill(e,t,i,r){t=t.premultiply();let s=i?4:1,n=s*s,o=1.01/n,a=1.25,l=a/s,h=i?new m(o*t.red,o*t.green,o*t.blue,o*t.alpha):t,d=new Float32Array(e.length*n),u=new Float32Array(2*e.length*n),c=0,p=0;for(let t=0;t<s;t++)for(let i=0;i<s;i++){let r={x:t*l-(a-l)/2,y:i*l-(a-l)/2};for(let t=0;t<e.length;t+=6){let i=[{x:e[t],y:e[t+1]},{x:e[t+2],y:e[t+3]},{x:e[t+4],y:e[t+5]}];for(let e=0;e<3;e++)d[c++]=i[e%3].x+r.x,d[c++]=i[e%3].y+r.y,u[p++]=h.red,u[p++]=h.green,u[p++]=h.blue,u[p++]=h.alpha}}let f=Je.SOURCE_OVER;r?f=Je.MAX:i?f=Je.LIGHTER:t.equals(m.TRANSPERENT)&&(f=Je.COPY),this.inkGLContext.blendMode=f,this.inkGLContext.gl.bindFramebuffer(this.inkGLContext.gl.FRAMEBUFFER,this.currentTarget.framebuffer),r?this.simpleProgram.drawPathVerticesPatch(d,u):this.simpleProgram.drawVertices(d,u)}readPixels(e){let t=this.currentTarget,i=this.inkGLContext.gl;if(e){if(!(e instanceof T))throw new TypeError("box must be instance of RectGL")}else e=t.graphicsBounds;t.flipY&&(e=new T(e.x,t.height-e.y-e.height,e.width,e.height)),this.setTarget(t);let r=new Uint8Array(e.width*e.height*4);return i.readPixels(parseInt(e.x*t.scaleFactor),parseInt(e.y*t.scaleFactor),parseInt(e.width*t.scaleFactor),parseInt(e.height*t.scaleFactor),i.RGBA,i.UNSIGNED_BYTE,r),r}writePixels(e,t){if(e&&!(e instanceof T))throw new TypeError("rect must be instance of RectGL");let i=this.currentTarget,r=this.inkGLContext.gl;if(e||(e=new T(0,0,i.width,i.height)),!i.useTextureStorage)throw new Error("writePixels layer without texture is not supported!");{i.flipY&&(e=new T(e.x,i.height-e.y-e.height,e.width,e.height));let s=new T(e.x*i.scaleFactor,e.y*i.scaleFactor,e.width*i.scaleFactor,e.height*i.scaleFactor);r.finish(),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,i.texture),r.texSubImage2D(r.TEXTURE_2D,0,parseInt(s.x),parseInt(s.y),parseInt(s.width),parseInt(s.height),r.RGBA,r.UNSIGNED_BYTE,t)}}}class Ot extends Et{constructor(e){super(e,{display:!0,width:e.inkGLContext.gl.canvas.width,height:e.inkGLContext.gl.canvas.height,flipY:o.typeGL==o.TypeGL.WEB}),Object.defineProperty(this,"surface",{value:e.inkGLContext.gl.canvas,enumerable:!0}),Object.defineProperty(this,"ctx",{value:e.inkGLContext.gl,enumerable:!0}),Object.defineProperty(this,"MAX_SIZE",{value:4096,enumerable:!0});let t=this.ctx.getContextAttributes();if("function"==typeof requestAnimationFrame&&!t.preserveDrawingBuffer){let e=this.createLayer();Object.defineProperty(this,"backbuffer",{value:e,enumerable:!0});let t=i=>{this.present&&(delete this.present,super.blend(e,{mode:Je.COPY})),this.frameID=requestAnimationFrame(t)};this.frameID=requestAnimationFrame(t)}}createLayer(e={}){let t=e.width,i=e.height;if(t&&i){if(t>this.MAX_SIZE)throw new Error(`Max width exceeded: ${t} found, ${this.MAX_SIZE} allowed`);if(i>this.MAX_SIZE)throw new Error(`Max height exceeded: ${i} found, ${this.MAX_SIZE} allowed`)}else{let t=Ot.getDefaultSize(this.width,this.height);e.width=t.width,e.height=t.height}return new Et(this.inkContext,e)}clear(e,t){this.backbuffer?(this.backbuffer.clear(e,t),this.present=!0):super.clear(e,t)}draw(e,t){let i;return this.backbuffer?(i=this.backbuffer.draw(e,t),this.present=!0):i=super.draw(e,t),i}drawStroke(e,t,i){let r;return this.backbuffer?(r=this.backbuffer.drawStroke(e,t,i),this.present=!0):r=super.drawStroke(e,t,i),r}fill(e,t,i){let r;return this.backbuffer?(r=this.backbuffer.fill(e,t,i),this.present=!0):r=super.fill(e,t,i),r}blend(e,t){this.backbuffer?(this.backbuffer.blend(e,t),this.present=!0):super.blend(e,t)}readPixels(e,t){return this.backbuffer?this.backbuffer.readPixels(e,t):super.readPixels(e,t)}writePixels(e,t){this.backbuffer?(this.backbuffer.writePixels(e,t),this.present=!0):super.writePixels(e,t)}async toBlob(e=this.bounds,t,i){return this.backbuffer?await this.backbuffer.toBlob(e,t,i):await super.toBlob(e,t,i)}resize(e,t){super.resize(e,t),this.surface.width=e,this.surface.height=t}delete(){"number"==typeof this.frameID&&cancelAnimationFrame(this.frameID),super.delete(),this.backbuffer&&this.backbuffer.delete()}deleteLater(){return super.deleteLater(),this.backbuffer&&this.backbuffer.deleteLater(),this}static createInstance(e,t,i,r){if(!e||"function"!=typeof e.getContext)throw new Error("WebGL context provider is required");if(t>0&&i>0&&(e.width=t,e.height=i),!(e.width>0&&e.width>0))throw new Error("width and height are required and should be positive whole numbers");let s=new At(e,r);return new Ot(s)}static logGLError(e){let t=e.getError();if(t>0){let i=Object.keys(e.constructor.prototype).filter((i=>e[i]===t)).join(" | ");console.error(`WebGL: ${t} - ${i}`)}}}class Ct{constructor(e,t,i){this.subject=e,this.predicate=t,this.object=i}}class Dt{constructor(){this.statements=[],Object.defineProperty(this,"length",{get:()=>this.statements.length,enumerable:!0})}add(...e){e.forEach((e=>this.statements.push(e)))}remove(...e){e.forEach((e=>this.statements.remove(e)))}addTriple(e,t,i){this.statements.push(new Ct(e,t,i))}search(e){return this.statements.filter((t=>{let i=!0;return Object.keys(e).forEach((r=>{i=i&&t[r]==e[r]})),i}))}}let Nt;Nt=o.commonJS?require("protobufjs"):globalThis.protobuf;var Mt=Nt,Lt={nested:{WacomInkFormat3:{options:{optimize_for:"SPEED",java_multiple_files:!1,java_package:"com.wacom.ink.protobuf",java_outer_classname:"Will3_0_0",csharp_namespace:"Protobuf.WILL_3_0_0"},nested:{Rectangle:{fields:{x:{type:"float",id:1},y:{type:"float",id:2},width:{type:"float",id:3},height:{type:"float",id:4}}},Matrix4:{fields:{m00:{type:"float",id:1},m01:{type:"float",id:2},m02:{type:"float",id:3},m03:{type:"float",id:4},m10:{type:"float",id:5},m11:{type:"float",id:6},m12:{type:"float",id:7},m13:{type:"float",id:8},m20:{type:"float",id:9},m21:{type:"float",id:10},m22:{type:"float",id:11},m23:{type:"float",id:12},m30:{type:"float",id:13},m31:{type:"float",id:14},m32:{type:"float",id:15},m33:{type:"float",id:16}}},Range:{fields:{min:{type:"float",id:1},max:{type:"float",id:2},remapURI:{type:"string",id:3}}},Float32:{fields:{value:{type:"float",id:1}}},Uint32:{fields:{value:{type:"uint32",id:1}}},Property:{fields:{name:{type:"string",id:1},value:{type:"string",id:2}}},SemanticTriple:{fields:{subject:{type:"string",id:1},predicate:{type:"string",id:2},object:{type:"string",id:3}}},InkState:{values:{PLANE:0,HOVERING:1,IN_VOLUME:2,VOLUME_HOVERING:3}},InkSensorMetricType:{values:{LENGTH:0,TIME:1,FORCE:2,ANGLE:3,NORMALIZED:4,LOGICAL:5,DIMENSIONLESS:6}},InkInputProviderType:{values:{PEN:0,TOUCH:1,MOUSE:2,CONTROLLER:3}},InputContext:{fields:{id:{type:"string",id:1},environmentID:{type:"string",id:2},sensorContextID:{type:"string",id:3}}},Environment:{fields:{id:{type:"string",id:1},properties:{rule:"repeated",type:"Property",id:2}}},InkInputProvider:{fields:{id:{type:"string",id:1},type:{type:"InkInputProviderType",id:2},properties:{rule:"repeated",type:"Property",id:3}}},InputDevice:{fields:{id:{type:"string",id:1},properties:{rule:"repeated",type:"Property",id:2}}},SensorContext:{fields:{id:{type:"string",id:1},sensorChannelsContext:{rule:"repeated",type:"SensorChannelsContext",id:2}}},SensorChannelsContext:{fields:{id:{type:"string",id:1},channels:{rule:"repeated",type:"SensorChannel",id:2},samplingRateHint:{type:"Uint32",id:3},latency:{type:"Uint32",id:4},inkInputProviderID:{type:"string",id:5},inputDeviceID:{type:"string",id:6}}},SensorChannel:{fields:{id:{type:"string",id:1},type:{type:"string",id:2},metric:{type:"InkSensorMetricType",id:3},resolution:{type:"double",id:4},min:{type:"float",id:5},max:{type:"float",id:6},precision:{type:"uint32",id:7}}},InputContextData:{fields:{inputContexts:{rule:"repeated",type:"InputContext",id:1},inkInputProviders:{rule:"repeated",type:"InkInputProvider",id:2},inputDevices:{rule:"repeated",type:"InputDevice",id:3},environments:{rule:"repeated",type:"Environment",id:4},sensorContexts:{rule:"repeated",type:"SensorContext",id:5}}},ChannelData:{fields:{sensorChannelID:{type:"string",id:1},values:{rule:"repeated",type:"sint32",id:2}}},SensorData:{fields:{id:{type:"string",id:1},inputContextID:{type:"string",id:2},state:{type:"InkState",id:3},timestamp:{type:"uint64",id:4},dataChannels:{rule:"repeated",type:"ChannelData",id:5}}},Stroke:{fields:{id:{type:"string",id:1},startParameter:{type:"float",id:2},endParameter:{type:"float",id:3},splineX:{rule:"repeated",type:"float",id:4},splineY:{rule:"repeated",type:"float",id:5},splineZ:{rule:"repeated",type:"float",id:6},red:{rule:"repeated",type:"float",id:7},green:{rule:"repeated",type:"float",id:8},blue:{rule:"repeated",type:"float",id:9},alpha:{rule:"repeated",type:"float",id:10},size:{rule:"repeated",type:"float",id:11},rotation:{rule:"repeated",type:"float",id:12},scaleX:{rule:"repeated",type:"float",id:13},scaleY:{rule:"repeated",type:"float",id:14},scaleZ:{rule:"repeated",type:"float",id:15},offsetX:{rule:"repeated",type:"float",id:16},offsetY:{rule:"repeated",type:"float",id:17},offsetZ:{rule:"repeated",type:"float",id:18},sensorDataOffset:{type:"uint32",id:19},sensorDataID:{type:"string",id:20},sensorDataMapping:{rule:"repeated",type:"uint32",id:21},style:{type:"Style",id:22}}},RotationMode:{values:{NONE:0,RANDOM:1,TRAJECTORY:2}},BlendMode:{values:{SOURCE_OVER:0,DESTINATION_OVER:1,DESTINATION_OUT:2,LIGHTER:3,COPY:4,MIN:5,MAX:6}},BrushPrototype:{fields:{coordX:{rule:"repeated",type:"float",id:1},coordY:{rule:"repeated",type:"float",id:2},coordZ:{rule:"repeated",type:"float",id:3},indices:{rule:"repeated",type:"uint32",id:4},shapeURI:{type:"string",id:5},size:{type:"float",id:6}}},VectorBrush:{fields:{name:{type:"string",id:1},prototype:{rule:"repeated",type:"BrushPrototype",id:2},spacing:{type:"float",id:3}}},RasterBrush:{fields:{name:{type:"string",id:1},spacing:{type:"float",id:2},scattering:{type:"float",id:3},rotationMode:{type:"RotationMode",id:4},shapeTexture:{rule:"repeated",type:"bytes",id:5},shapeTextureURI:{rule:"repeated",type:"string",id:6},fillTexture:{type:"bytes",id:7},fillTextureURI:{type:"string",id:8},fillWidth:{type:"float",id:9},fillHeight:{type:"float",id:10},randomizeFill:{type:"bool",id:11},blendMode:{type:"BlendMode",id:12}}},NodeType:{values:{STROKE_GROUP:0,SENSOR_DATA_GROUP:1,STROKE:2,SENSOR_DATA:3}},Node:{fields:{id:{type:"string",id:1},depth:{type:"uint32",id:2},index:{type:"uint32",id:3},type:{type:"NodeType",id:4},groupBoundingBox:{type:"Rectangle",id:5},chunkFromIndex:{type:"uint32",id:6},chunkToIndex:{type:"uint32",id:7}}},View:{fields:{name:{type:"string",id:1},tree:{rule:"repeated",type:"Node",id:2}}},PathPointProperties:{fields:{size:{type:"Float32",id:1},red:{type:"Float32",id:2},green:{type:"Float32",id:3},blue:{type:"Float32",id:4},alpha:{type:"Float32",id:5},rotation:{type:"Float32",id:6},scaleX:{type:"Float32",id:7},scaleY:{type:"Float32",id:8},scaleZ:{type:"Float32",id:9},offsetX:{type:"Float32",id:11},offsetY:{type:"Float32",id:12},offsetZ:{type:"Float32",id:13}}},Style:{fields:{properties:{type:"PathPointProperties",id:1},brushURI:{type:"string",id:2},particlesRandomSeed:{type:"uint32",id:3},renderModeURI:{type:"string",id:4}}},InputData:{fields:{inputContextData:{type:"InputContextData",id:1},sensorData:{rule:"repeated",type:"SensorData",id:2}}},InkData:{fields:{strokes:{rule:"repeated",type:"Stroke",id:1}}},Brushes:{fields:{vectorBrushes:{rule:"repeated",type:"VectorBrush",id:1},rasterBrushes:{rule:"repeated",type:"RasterBrush",id:2}}},TripleStore:{fields:{statements:{rule:"repeated",type:"SemanticTriple",id:1}}},Tool:{oneofs:{brush:{oneof:["vectorBrush","rasterBrush"]}},fields:{vectorBrush:{type:"VectorBrush",id:1},rasterBrush:{type:"RasterBrush",id:2},blendMode:{type:"BlendMode",id:3},context:{type:"PathPointContext",id:4}}},PathPointContext:{fields:{statics:{type:"PathPointProperties",id:1},dynamics:{type:"PathPointSettings",id:2}}},PathPointSettings:{fields:{size:{type:"PropertySettings",id:1},red:{type:"PropertySettings",id:2},green:{type:"PropertySettings",id:3},blue:{type:"PropertySettings",id:4},alpha:{type:"PropertySettings",id:5},rotation:{type:"PropertySettings",id:6},scaleX:{type:"PropertySettings",id:7},scaleY:{type:"PropertySettings",id:8},scaleZ:{type:"PropertySettings",id:9},offsetX:{type:"PropertySettings",id:11},offsetY:{type:"PropertySettings",id:12},offsetZ:{type:"PropertySettings",id:13}}},PropertySettings:{fields:{value:{type:"Range",id:1},velocity:{type:"Range",id:2},pressure:{type:"Range",id:3},altitude:{type:"Range",id:4},radiusX:{type:"Range",id:5},radiusY:{type:"Range",id:6},resolveURI:{type:"string",id:7},dependencies:{rule:"repeated",type:"InputPropertyType",id:8}}},InputPropertyType:{values:{PRESSURE:0,RADIUS_X:1,RADIUS_Y:2,AZIMUTH:3,ALTITUDE:4,ROTATION:5}},InkObject:{fields:{inputData:{type:"InputData",id:1},inkData:{type:"InkData",id:2},brushes:{type:"Brushes",id:3},inkTree:{rule:"repeated",type:"Node",id:4},views:{rule:"repeated",type:"View",id:5},knowledgeGraph:{type:"TripleStore",id:6},transform:{type:"Matrix4",id:7},properties:{rule:"repeated",type:"Property",id:8}}}}}}};class kt extends u{constructor(e){super(e)}}class _t extends kt{constructor(e){let t;super(e),Object.defineProperty(this,"bounds",{get:function(){return t||(t=this.getBounds()),t},set:function(e){t=e},enumerable:!0}),Object.defineProperty(this,"root",{get:function(){let e=this.parent,t=this;for(;e;)t=e,e=e.parent;return t},enumerable:!0})}updateID(e,t){let i=this.root.model;i&&i.updateRegistry(e,t)}getBounds(){return this.content.bounds}invalidateBounds(){this.bounds=void 0}remove(){this.parent.removeChild(this)}}class Ft extends _t{constructor(e){super(e),this.children=[],Object.defineProperty(this,"type",{value:"GROUP",enumerable:!0}),Object.defineProperty(this,"content",{value:this.children,enumerable:!0})}getBounds(){let e;return this.children.forEach((t=>{e=e?e.union(t.bounds):t.bounds})),e}contains(e){if(!(e instanceof _t))throw new Error(`Incompatible node found - ${e.constructor.name}. It should be ink model Element.`);let t=!1,i=e.parent;for(;i;){if(i==this){t=!0;break}i=i.parent}return t}indexOf(e){if(!(e instanceof _t))throw new Error(`Incompatible node found - ${e.constructor.name}. It should be ink model Element.`);return this.children.indexOf(e)}appendChild(e,t){if(!(e instanceof _t))throw new Error(`Incompatible node found - ${e.constructor.name}. It should be ink model Element.`);if(t<0)throw new Error("Index should be a positive number");let i=e.parent;if(i){if(this.root.id!=e.root.id)throw new Error("Moving nodes from one hierarchy to another is not allowed. Make sure root is common for this operation.");e.parent.children.remove(e),e.parent.invalidateBounds()}if(e.parent=this,isFinite(t)&&t<this.children.length?this.children.insert(e,t):this.children.push(e),!i){let i=this.root.model;i&&i.register(e,t)}return this.invalidateBounds(),e}removeChild(e){if(!this.children.includes(e))throw new Error("Node was not found");let t=this.root.model;t&&t.unregister(e),this.invalidateBounds(),this.children.remove(e)}remove(){this.parent?this.parent.removeChild(this):(this.model&&this.model.unregister(this),this.invalidateBounds())}}class Bt extends _t{constructor(e,t){super(),t&&(t=Object.assign({id:void 0},t)),Object.defineProperty(this,"type",{value:"PATH",enumerable:!0}),Object.defineProperty(this,"index",{get:()=>this.parent?this.parent.indexOf(this):0,enumerable:!0}),Object.defineProperty(this,"content",{value:e,enumerable:!0}),Object.defineProperty(this,"interval",{value:Object.seal(t),enumerable:!0})}split(e,t=1){if(this.content instanceof Y)throw new Error("SensorData is immutable. Split is not applicable.");if(!this.parent)throw new Error("Dettached Path node split is not allowed. Attach to hierarchy first.");if(e<0||e>this.content.length-1)throw new Error(`Index out of range {0, ${this.content.length-1}}`);let i=this.interval?this.interval.fromIndex:0,r=this.interval?this.interval.toIndex:this.content.length-1,s={fromIndex:i,toIndex:e+1,fromTValue:this.interval?this.interval.fromTValue:this.content.ts,toTValue:t-.05},n={fromIndex:e-1,toIndex:r,fromTValue:1==t?.05:t,toTValue:this.interval?this.interval.toTValue:this.content.tf};if(s.toIndex+1-s.fromIndex<4)throw new Error(`Invalid split index ${e} found - range {${s.fromIndex}, ${s.toIndex}} is invalid. At least 4 points are needed to define interval.`);if(n.toIndex+1-n.fromIndex<4)throw new Error(`Invalid split index ${e} found - range {${n.fromIndex}, ${n.toIndex}} is invalid. At least 4 points are needed to define interval.`);let o=new Bt(this.content,s),a=new Bt(this.content,n),l=this.index;return this.remove(),this.parent.appendChild(o,l),this.parent.appendChild(a,l+1),[o,a]}}class Ut{constructor(e,t,i){this.model=e,this.type=t||e.type,this.tree=this.createGroup(i),this.tree.model=this,this.register(this.tree)}addPath(e,t){return t||(t=this.tree),t.appendChild(this.createElement(e))}createElement(e,t){return this.model.createElement(e,this,t)}createGroup(e){return this.model.createGroup(e,this)}register(e){if(e instanceof Ft)e.children.forEach((e=>this.register(e)));else if(e instanceof Bt){if(e.content instanceof ut){if(this.type!=Ut.Type.STROKE)throw new Error(`Incompatible element content found - ${e.content.constructor.name}. Content should be instance of Stroke.`)}else{if(!(e.content instanceof Y))throw new Error(`Incompatible element content found - ${e.content.constructor.name}. Content should be ${this.type.name}.`);if(this.type!=Ut.Type.SENSOR_DATA)throw new Error(`Incompatible element content found - ${e.content.constructor.name}. Content should be instance of SensorData.`)}if(!this.model.content.includes(e.content))throw new Error(`Node content not found in underling ink model - ${e.content.id}`)}this.model.index(e),this.updateKnowledgeGraph(e.id)}unregister(e){e instanceof Ft&&e.children.forEach((e=>this.unregister(e))),delete this.model.registry[e.id],this.updateKnowledgeGraph(e.id)}updateKnowledgeGraph(e){if(!e)return;let t=this.model.uriBuilder.buildNodeURI(e);if(this.model.registry[e]){if(!this.knowledgeGraph)return;this.model.knowledgeGraph.add(...this.knowledgeGraph.search({subject:t})),this.model.knowledgeGraph.add(...this.knowledgeGraph.search({object:t}))}else this.model.knowledgeGraph.remove(...this.model.knowledgeGraph.search({subject:t})),this.model.knowledgeGraph.remove(...this.model.knowledgeGraph.search({object:t}))}}class jt{constructor(){}setInkModelURI(e){return this.inkModelURI=e,this}setNodeID(e){return this.inkNodeID=e,this}buildNodeURI(e,t){return this.reset().setInkModelURI(t).setNodeID(e).build()}build(){let e="",t="";return this.inkModelURI&&(e=this.fixedEncodeURIComponent(this.inkModelURI),t="/"),t+="node/"+this.inkNodeID,`uim:${e}${t}`}fixedEncodeURIComponent(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16)}))}reset(){return this.inkModelURI=void 0,this.inkNodeID=void 0,this}}class Gt{constructor(e=Gt.Type.STROKE,t){this.type=e,this.tree=this.createGroup(t),this.tree.model=this,this.props={},this.views={},this.knowledgeGraph=new Dt,this.uriBuilder=new jt,this.registry={},this.register(this.tree),Object.defineProperty(this,"content",{value:[],enumerable:!0}),Object.defineProperty(this,"strokes",{get:()=>this.type==Gt.Type.STROKE?this.content.slice():[],enumerable:!0}),Object.defineProperty(this,"sensorData",{get:()=>this.type==Gt.Type.STROKE?this.content.map((e=>e.sensorData)).filter((e=>!!e)):this.content,enumerable:!0}),Object.defineProperty(this,"brushes",{get:()=>{let e={};return this.strokes.forEach((t=>e[t.brush.name]=this.registry[t.brush.name]||t.brush)),Object.values(e)},set:e=>{e.forEach((e=>this.registry[e.name]=e))},enumerable:!0})}addPath(e,t){t||(t=this.tree);let i=this.createElement(e);return e.nodeID&&(i.id=e.nodeID),t.appendChild(i)}removePath(e){e.nodeID&&this.registry[e.nodeID].remove()}replacePath(e,t,i){if(!e.nodeID)return;let r=this.getItem(e.nodeID),s=r.parent||this.tree,n=t.map((e=>this.createElement(e))),o=s.children.indexOf(r);if(i){let e=s.appendChild(this.createGroup(),o);n.forEach((t=>e.appendChild(t)))}else n.forEach(((e,t)=>s.appendChild(e,o+t)));this.removePath(e)}createElement(e,t,i){if(!e)throw new Error("Element content not found");let r=t?t.type:this.type;switch(r){case Gt.Type.STROKE:if(!(e instanceof ut))throw new Error(`Incompatible element content found - ${e.constructor.name}. Content should be instance of Stroke.`);break;case Gt.Type.SENSOR_DATA:if(!(e instanceof Y))throw new Error(`Incompatible element content found - ${e.constructor.name}. Content should be instance of SensorData.`);break;default:throw console.warn(r),new Error("Invalid ink model type found")}return new Bt(e,i)}createGroup(e,t){return new Ft(e)}getItem(e){return this.registry[e]}register(e,t){if(e instanceof Ft)e.children.forEach((e=>this.register(e)));else if(e instanceof Bt){if(e.content instanceof ut){if(this.type!=Gt.Type.STROKE)throw new Error(`Incompatible element content found - ${e.content.constructor.name}. Content should be instance of Stroke.`)}else{if(!(e.content instanceof Y))throw new Error(`Incompatible element content found - ${e.content.constructor.name}. Content should be ${this.type.name}.`);if(this.type!=Gt.Type.SENSOR_DATA)throw new Error(`Incompatible element content found - ${e.content.constructor.name}. Content should be instance of SensorData.`)}Object.defineProperty(e.content,"nodeID",{value:e.id,enumerable:!0,configurable:!0}),isFinite(t)&&t<this.content.length?this.content.insert(e.content,t):this.content.push(e.content),this.index(e.content)}this.index(e),e instanceof kt&&!this.keepViews&&this.resetViews()}updateRegistry(e,t){let i=this.registry[e];delete this.registry[e],this.registry[i.id]=i,this.updateKnowledgeGraph(e,t)}unregister(e){e instanceof kt&&this.resetViews(),e instanceof Ft?e.children.forEach((e=>this.unregister(e))):e instanceof Bt&&(delete e.content.nodeID,delete this.registry[e.content.id],this.content.remove(e.content)),e==this.tree?e.children.clear():delete this.registry[e.id],this.updateKnowledgeGraph(e.id)}updateKnowledgeGraph(e,t){let i=this.uriBuilder.buildNodeURI(e),r=this.uriBuilder.buildNodeURI(t);r?(this.knowledgeGraph.search({subject:i}).forEach((e=>e.subject=r)),this.knowledgeGraph.search({object:i}).forEach((e=>e.object=r))):(this.knowledgeGraph.remove(...this.knowledgeGraph.search({subject:i})),this.knowledgeGraph.remove(...this.knowledgeGraph.search({object:i})))}index(e){if(this.registry[e.id])throw new Error(`Cannot register item with id ${e.id}. Already is available item with such identifier.`);if(e instanceof kt){let t=this.type.name;e instanceof Ft&&(t=`ol<${t}>`),Object.defineProperty(e,"dataType",{value:t,enumerable:!0})}this.registry[e.id]=e}createView(e,t,i,r){let s=new Ut(this,t,i);return s.name=e,this.views[e]=s,r&&(s.knowledgeGraph=r,s.updateKnowledgeGraph(i)),s}resetViews(){for(let e in this.views)this.views[e].tree.remove(),delete this.views[e]}}Object.defineEnum(Gt,"Type",["STROKE","SENSOR_DATA"]),Ut.Type=Gt.Type;var Yt={extension:"uim",contentType:"application/vnd.wacom-ink.model",version:new Uint8Array([3,0,0]),fourCCLength:4,headers:{riffFourCC:"RIFF".toCharArray(!0),formatFourCC:"UINK".toCharArray(!0),headChunkFourCC:"HEAD".toCharArray(!0),inkChunkFourCC:"DATA".toCharArray(!0)}};class zt{constructor(){this.reset(),Object.defineProperty(this,"data",{get:function(){return this.fileBytes||this.build(),this.fileBytes}})}encodeInk(e){e&&this.encode(Yt.headers.inkChunkFourCC,e)}encode(e,t){let i=e instanceof Uint8Array?e:e.toCharArray().toUint8Array();if(i.length!=Yt.fourCCLength)throw new Error(`Invalid fourCC: "${e}"`);if(this.fileBytes)throw new Error("File content building completed. Cannot add more chunks.");this.chunks.push(this.createChunk(i,t))}build(){let e=Yt.headers,t=0;this.chunks.unshift(this.createChunk(Yt.headers.headChunkFourCC,Yt.version)),this.chunks.forEach((e=>{t+=e.length}));let i=e.formatFourCC.length+t,r=e.riffFourCC.length+Uint32Array.BYTES_PER_ELEMENT+i,s=new ArrayBuffer(r);this.fileBytes=new Uint8Array(s),this.dataView=new DataView(s),this.byteOffset=0,this.fileBytes.set(e.riffFourCC,this.byteOffset),this.byteOffset+=e.riffFourCC.length,this.dataView.setUint32(this.byteOffset,i,!0),this.byteOffset+=Uint32Array.BYTES_PER_ELEMENT,this.fileBytes.set(e.formatFourCC,this.byteOffset),this.byteOffset+=e.formatFourCC.length,this.chunks.forEach((e=>{this.appendChunk(e),this.byteOffset+=e.length}))}createChunk(e,t){let i=t.length,r=i%2;return{fourCC:e,bytes:t,size:i,length:e.length+Uint32Array.BYTES_PER_ELEMENT+i+r}}appendChunk(e){this.fileBytes.set(e.fourCC,this.byteOffset);let t=this.byteOffset+e.fourCC.length;this.dataView.setUint32(t,e.size,!0),t+=Uint32Array.BYTES_PER_ELEMENT,this.fileBytes.set(e.bytes,t)}reset(){this.chunks=[],this.fileBytes=null}}class Xt{decode(e){let t=Yt.headers;this.reset(e);let i=this.byteOffset+t.riffFourCC.length;if(!Object.equals(this.fileBytes.subarray(this.byteOffset,i),t.riffFourCC))throw new Error("Invalid RIFF fourCC");this.byteOffset=i,i=this.byteOffset+Uint32Array.BYTES_PER_ELEMENT;let r=this.dataView.getUint32(this.byteOffset,!0)+i;if(r%2!=0)throw new Error("Invalid RIFF file size");if(r!=this.fileBytes.length)throw new Error("Incomplete RIFF file");if(this.byteOffset=i,i=this.byteOffset+t.formatFourCC.length,!Object.equals(this.fileBytes.subarray(this.byteOffset,i),t.formatFourCC))throw new Error("Invalid WILL fourCC");for(this.byteOffset=i;this.byteOffset<r;){let e=this.extractChunk();this.byteOffset+=e.length,Object.equals(e.fourCC,t.headChunkFourCC)?this.version=[e.bytes[0],e.bytes[1],e.bytes[2]]:Object.equals(e.fourCC,t.inkChunkFourCC)?this.ink=e.bytes:this.chunks.push({fourCC:String.fromCharArray(e.fourCC),bytes:e.bytes})}}extractChunk(){let e=this.fileBytes.subarray(this.byteOffset,this.byteOffset+Yt.fourCCLength),t=null,i=0,r=0,s=0,n=this.byteOffset+e.length,o=n;return n=o+Uint32Array.BYTES_PER_ELEMENT,i=this.dataView.getUint32(o,!0),o=n,n=o+i,i>0?(t=this.fileBytes.subarray(o,n),t=new Uint8Array(t,t.byteOffset,t.length)):t=new Uint8Array(0),r=e.length+Uint32Array.BYTES_PER_ELEMENT+i,s=r%2,{fourCC:e,bytes:t,size:i,length:r+s}}reset(e){this.fileBytes=e,this.dataView=new DataView(e.buffer),this.byteOffset=0,this.chunks=[]}}class $t{constructor(){$t.format||($t.format=Mt.Root.fromJSON(Lt).WacomInkFormat3),this.riffEncoder=new zt,this.riffDecoder=new Xt}static encode(e){return e.constructor.encode(e).finish()}async encodeInkModel(e){this.structure=!0;let t=$t.format.InkObject.create({inputData:this.encodeInkInput(e.sensorData),inkData:this.encodeInkData(e.strokes),brushes:await this.encodeBrushes(e.brushes),inkTree:this.encodeNodeTree(e),views:Object.values(e.views).map((e=>this.encodeView(e))),knowledgeGraph:this.encodeKnowledgeGraph(e.knowledgeGraph),transform:this.encodeMat4(e.transform),properties:this.encodeProperties(e.props)});this.structure=!1;let i=$t.encode(t);return this.riffEncoder.reset(),this.riffEncoder.encodeInk(i),this.riffEncoder.data}decodeInkModel(e,t){e instanceof ArrayBuffer&&(e=new Uint8Array(e)),this.riffDecoder.decode(e);let i=$t.format.InkObject.decode(this.riffDecoder.ink);if(this.structure=i,t){let e=this.decodeKnowledgeGraph(i.knowledgeGraph);i.views.forEach((i=>this.decodeView(i,t,e)))}else{let e=this.decodeInkInput(i.inputData),r=this.decodeBrushes(i.brushes),s=this.decodeInkData(i.inkData,r,e),n=i.inkTree.first,o=n.type==$t.format.NodeType.STROKE_GROUP?Gt.Type.STROKE:Gt.Type.SENSOR_DATA,a=n.type==$t.format.NodeType.STROKE_GROUP?s:e;t=new Gt(o,n.id),this.decodeNodeTree(t,i.inkTree.slice(1),a),i.views.forEach((e=>this.decodeView(e,t))),t.knowledgeGraph=this.decodeKnowledgeGraph(i.knowledgeGraph),t.props=this.decodeProperties(i.properties),t.transform=this.decodeMat4(i.transform),t.brushes=Object.values(r)}return delete this.structure,t}encodeInkInput(e){let t={},i={},r={},s={},n={};e.forEach((e=>{let o=e.context;t[o.id]||(t[o.id]=o,n[o.environment.id]||(n[o.environment.id]=o.environment),i[o.sensorContext.id]||(i[o.sensorContext.id]=o.sensorContext,o.sensorContext.channelsContexts.forEach((e=>{r[e.device.id]||(r[e.device.id]=e.device),e.inkProvider&&(s[e.inkProvider.id]||(s[e.inkProvider.id]=e.inkProvider))}))))}));let o=$t.format.InputData.create({sensorData:e.map((e=>this.encodeSensorData(e))),inputContextData:$t.format.InputContextData.create({inputContexts:Object.values(t).map((e=>$t.format.InputContext.create({id:e.id,environmentID:e.environment.id,sensorContextID:e.sensorContext.id}))),sensorContexts:Object.values(i).map((e=>$t.format.SensorContext.create({id:e.id,sensorChannelsContext:e.channelsContexts.map((e=>$t.format.SensorChannelsContext.create({id:e.id,channels:e.channels.map((e=>$t.format.SensorChannel.create({id:e.id,type:e.type,metric:$t.format.InkSensorMetricType[e.metric.name],resolution:e.resolution,min:e.min,max:e.max,precision:e.precision}))),samplingRateHint:isFinite(e.samplingRate)?$t.format.Uint32.create({value:e.samplingRate}):void 0,latency:isFinite(e.latency)?$t.format.Uint32.create({value:e.latency}):void 0,inkInputProviderID:e.inkProvider?e.inkProvider.id:null,inputDeviceID:e.device.id})))}))),inkInputProviders:Object.values(s).map((e=>$t.format.InkInputProvider.create({id:e.id,type:$t.format.InkInputProviderType[e.type.name],properties:this.encodeProperties(e.props)}))),inputDevices:Object.values(r).map((e=>$t.format.InputDevice.create({id:e.id,properties:this.encodeProperties(e.props)}))),environments:Object.values(n).map((e=>$t.format.Environment.create({id:e.id,properties:this.encodeProperties(e.props)})))})});return this.structure?o:$t.encode(o)}decodeInkInput(e){if(!e)return;let t=this.structure?e:$t.format.InputData.decode(e),i={},r={},s={},n={},o={};return t.inputContextData.environments.forEach((e=>{let t=new L;this.decodeProperties(e.properties,t.props),Object.freeze(t),t.id!=e.id&&console.warn(`Environment decode id missmatch - found ${e.id}, expected ${t.id}`),o[t.id]=t})),t.inputContextData.inkInputProviders.forEach((e=>{let t=this.decodeProperties(e.properties),i=new c(c.Type[$t.format.InkInputProviderType[e.type]],t);Object.freeze(i),i.id!=e.id&&console.warn(`InkInputProvider decode id missmatch - found ${e.id}, expected ${i.id}`),n[i.id]=i})),t.inputContextData.inputDevices.forEach((e=>{let t=new X;this.decodeProperties(e.properties,t.props),Object.freeze(t),t.id!=e.id&&console.warn(`InputDevice decode id missmatch - found ${e.id}, expected ${t.id}`),s[t.id]=t})),t.inputContextData.sensorContexts.forEach((e=>{let t=new j;e.sensorChannelsContext.forEach((e=>{let i=new U(s[e.inputDeviceID],n[e.inkInputProviderID]);e.samplingRateHint&&(i.samplingRate=e.samplingRateHint.value),e.latency&&(i.latency=e.latency.value),e.channels.forEach((e=>{let t=B.Metric[$t.format.InkSensorMetricType[e.metric]],r=new B(e.type,t,e.resolution,e.min,e.max);r.precision=e.precision,i.add(r),r.id!=e.id&&console.warn(`SensorChannel decode id missmatch - found ${e.id}, expected ${r.id}`)})),t.addContext(i),i.id!=e.id&&console.warn(`SensorChannelsContext decode id missmatch - found ${e.id}, expected ${i.id}`)})),Object.freeze(t),r[t.id]=t,t.id!=e.id&&console.warn(`SensorContext decode id missmatch - found ${e.id}, expected ${t.id}`)})),t.inputContextData.inputContexts.forEach((e=>{let t=new G(o[e.environmentID],r[e.sensorContextID]);Object.freeze(t),t.id!=e.id&&console.warn(`InputContext decode id missmatch - found ${e.id}, expected ${t.id}`),i[t.id]=t})),t.sensorData.map((e=>this.decodeSensorData(e,i[e.inputContextID])))}encodeSensorData(e){let t=$t.format.SensorData.create({id:e.id,inputContextID:e.context.id,state:$t.format.InkState[e.inkState.name],timestamp:e.created});return e.streams.forEach((e=>{let i={};e.channels.forEach((e=>i[e.id]=[]));for(let t=0;t<e.length;t++){let r=e.get(t);e.channels.forEach((e=>{i[e.id].push(r[O.getPropName(e.name)])}))}e.channels.forEach((e=>{if(!("precision"in e))throw new Error(`Precision not found for channel with id: ${e.id}`);let r=$t.format.ChannelData.create({sensorChannelID:e.id}),s=i[e.id],n=10**e.precision,o=Math.round(s[0]*n);r.values.push(o);for(let e=1;e<s.length;e++){let t=Math.round(s[e]*n);r.values.push(t-o),o=t}t.dataChannels.push(r)}))})),t}decodeSensorData(e,t){if(0==e.dataChannels.length)throw new Error(`Not found corresponding data channels for sensor data with id ${e.id}`);let i=new Y(t);i.id=e.id,i.created=parseInt(h.fromValue(e.timestamp).toString()),i.inkState=Y.InkState[$t.format.InkState[e.state]];let r={};return e.dataChannels.forEach((e=>{let i=t.sensorContext.getContextByChannelID(e.sensorChannelID);if(!i)throw new Error(`Not found corresponding channel context for data with channelID ${e.sensorChannelID}`);let s=10**i.get(e.sensorChannelID).precision,n=e.values[0],o=[];o.push(n/s);for(let t=1;t<e.values.length;t++){let i=n+e.values[t];o.push(i/s),n=i}r[e.sensorChannelID]=o})),t.sensorContext.channelsContexts.forEach((e=>{let t=r[e.channels.first.id].length,s=new z(e.channels);for(let i=0;i<t;i++)e.channels.forEach((e=>{let t=r[e.id];s.data.push(t[i])}));i.add(s)})),i}encodeInkData(e){let t=$t.format.InkData.create({strokes:e.map((e=>this.encodeStroke(e)))});return this.structure?t:$t.encode(t)}decodeInkData(e,t,i=[]){if(!e)return;let r=this.structure?e:$t.format.InkData.decode(e),s={};return i.forEach((e=>s[e.id]=e)),r.strokes.map((e=>this.decodeStroke(e,t,s)))}encodeStroke(e){let t=$t.format.Stroke.create({id:e.id,startParameter:e.ts,endParameter:e.tf});for(let i=0;i<e.length;i++){let r=e.pointAt(i);e.layout.forEach((e=>{switch(e){case I.Property.X:t.splineX.push(r.x);break;case I.Property.Y:t.splineY.push(r.y);break;case I.Property.Z:t.splineZ.push(r.z);break;case I.Property.RED:t.red.push(r.red/255);break;case I.Property.GREEN:t.green.push(r.green/255);break;case I.Property.BLUE:t.blue.push(r.blue/255);break;case I.Property.ALPHA:t.alpha.push(r.alpha);break;case I.Property.SIZE:t.size.push(r.size);break;case I.Property.ROTATION:t.rotation.push(r.rotation);break;case I.Property.SCALE_X:t.scaleX.push(r.scaleX);break;case I.Property.SCALE_Y:t.scaleY.push(r.scaleY);break;case I.Property.SCALE_Z:t.scaleZ.push(r.scaleZ);break;case I.Property.OFFSET_X:t.offsetX.push(r.offsetX);break;case I.Property.OFFSET_Y:t.offsetY.push(r.offsetY);break;case I.Property.OFFSET_Z:t.offsetZ.push(r.offsetZ);break;default:throw new Error(`Invalid layout property provided: ${e}`)}}))}return e.sensorData&&(t.sensorDataID=e.sensorData.id,t.sensorDataOffset=e.sensorDataOffset,t.sensorDataMapping=e.sensorDataMapping),t.style=$t.format.Style.create({brushURI:e.brush.name,renderModeURI:e.renderMode,particlesRandomSeed:e.randomSeed,properties:this.encodePathPointProperties(e.pointProps)}),t}decodeStroke(e,t={},i={}){if(0==e.splineX.length||0==e.splineY.length)throw new Error("Incomplete path definition");let r=[I.Property.X,I.Property.Y];e.splineZ.length>0&&r.push(I.Property.Z),e.red&&e.red.length>0&&r.push(I.Property.RED),e.green&&e.green.length>0&&r.push(I.Property.GREEN),e.blue&&e.blue.length>0&&r.push(I.Property.BLUE),e.alpha&&e.alpha.length>0&&r.push(I.Property.ALPHA),e.size.length>0&&r.push(I.Property.SIZE),e.rotation.length>0&&r.push(I.Property.ROTATION),e.scaleX.length>0&&r.push(I.Property.SCALE_X),e.scaleY.length>0&&r.push(I.Property.SCALE_Y),e.scaleZ.length>0&&r.push(I.Property.SCALE_Z),e.offsetX.length>0&&r.push(I.Property.OFFSET_X),e.offsetY.length>0&&r.push(I.Property.OFFSET_Y),e.offsetZ.length>0&&r.push(I.Property.OFFSET_Z);let s=e.splineX.length,n=r.length,o="undefined"==typeof SharedArrayBuffer?new Float32Array(s*n):new Float32Array(new SharedArrayBuffer(s*n*Float32Array.BYTES_PER_ELEMENT));for(let t=0;t<s;t++)r.forEach(((i,r)=>{let s;switch(i){case I.Property.X:s=e.splineX[t];break;case I.Property.Y:s=e.splineY[t];break;case I.Property.Z:s=e.splineZ[t];break;case I.Property.RED:s=Math.round(255*e.red[t]);break;case I.Property.GREEN:s=Math.round(255*e.green[t]);break;case I.Property.BLUE:s=Math.round(255*e.blue[t]);break;case I.Property.ALPHA:s=e.alpha[t];break;case I.Property.SIZE:s=e.size[t];break;case I.Property.ROTATION:s=e.rotation[t];break;case I.Property.SCALE_X:s=e.scaleX[t];break;case I.Property.SCALE_Y:s=e.scaleY[t];break;case I.Property.SCALE_Z:s=e.scaleZ[t];break;case I.Property.OFFSET_X:s=e.offsetX[t];break;case I.Property.OFFSET_Y:s=e.offsetY[t];break;case I.Property.OFFSET_Z:s=e.offsetZ[t];break;default:throw new Error(`Invalid layout property provided: ${i.name}`)}o[t*n+r]=s}));let a=t[e.style.brushURI]||e.style.brushURI,l=this.decodePathPointProperties(e.style.properties),h=i[e.sensorDataID],d=new ve(r,o,l,e.startParameter,e.endParameter);d.randomSeed=e.style.particlesRandomSeed;let u=new ut(a,d,void 0,h);return u.id=e.id,u.renderMode=e.style.renderModeURI,u.sensorDataOffset=e.sensorDataOffset,u.sensorDataMapping=e.sensorDataMapping,u}async encodeBrushes(e){let t=$t.format.Brushes.create();for(let i of e)if(i instanceof ee){let e=this.encodeBrush2D(i);t.vectorBrushes.push(e)}else{let e=await this.encodeBrushGL(i);t.rasterBrushes.push(e)}return this.structure?t:$t.encode(t)}decodeBrushes(e){if(!e)return;let t=this.structure?e:$t.format.Brushes.decode(e),i={};return t.vectorBrushes.forEach((e=>i[e.name]=this.decodeBrush2D(e))),t.rasterBrushes.forEach((e=>i[e.name]=this.decodeBrushGL(e))),this.structure?i:Object.values(i)}encodeBrush2D(e){if(!e.name)throw new Error("Encode Brush2D failed. name property is required.");let t=$t.format.VectorBrush.create({name:e.name,spacing:e.spacing});return(Array.isArray(e.shape)?e.shape:[e.shape]).forEach((e=>{let i=$t.format.BrushPrototype.create({size:e.size});if(e.descriptor.shape.name)i.shapeURI=e.descriptor.shape.name;else for(let t=0;t<e.shape.length;t+=2)i.coordX.push(e.shape[t]),i.coordY.push(e.shape[t+1]);t.prototype.push(i)})),t}decodeBrush2D(e){let t=[];return e.prototype.forEach((e=>{let i;if(e.shapeURI)i=e.shapeURI;else{i=new Float32Array(2*e.coordX.length);for(let t=0;t<i.length/2;t++)i[2*t]=e.coordX[t],i[2*t+1]=e.coordY[t]}t.push(new W(i,e.size))})),new ee(e.name,t,e.spacing)}async encodeBrushGL(e){if(!e.name)throw new Error("Encode BrushGL failed. name property is required.");let t={shape:[],shapeURI:[],fill:void 0,filleURI:void 0};if(Array.isArray(e.shape)){let i=e.descriptor.shape.map((e=>e.name)).filter((e=>e));if(i.length>0){if(i.length!=e.shape.length)throw new Error(`Brush ${e.name} shape names length do not match with brush mipmap`);t.shapeURI=i}}else e.descriptor.shape.name&&t.shapeURI.push(e.descriptor.shape.name);if(t.fillURI=e.descriptor.fill.name,0==t.shapeURI.length||!t.fillURI){let i={shape:await e.getShapeBinary(),fill:await e.getFillBinary()};0==t.shapeURI.length&&(Array.isArray(e.shape)?t.shape=i.shape:t.shape.push(i.shape)),t.fillURI||(t.fill=i.fill)}let i=e.blendMode.replace(/-/g,"_").toUpperCase();return $t.format.RasterBrush.create({name:e.name,spacing:e.spacing,scattering:e.scattering,blendMode:$t.format.BlendMode[i],rotationMode:$t.format.RotationMode[e.rotationMode.name],shapeTexture:t.shape,shapeTextureURI:t.shapeURI,fillTexture:t.fill,fillTextureURI:t.fillURI,fillWidth:e.fillTextureSize.width,fillHeight:e.fillTextureSize.height,randomizeFill:e.randomizeFill})}decodeBrushGL(e){let t,i;if(e.shapeTextureURI.length>0)t=1==e.shapeTextureURI.length?{name:e.shapeTextureURI.first}:e.shapeTextureURI.map((e=>({name:e})));else{if(!(e.shapeTexture.length>0))throw new Error("Decode BrushGL shape - insufficent data found");t=1==e.shapeTexture.length?{value:e.shapeTexture.first}:e.shapeTexture.map((e=>({value:e})))}if(e.fillTextureURI)i={name:e.fillTextureURI};else{if(!e.fillTexture)throw new Error("Decode BrushGL fill - insufficent data found");i={value:e.fillTexture}}return new et(e.name,t,i,{spacing:e.spacing,scattering:e.scattering,blendMode:Je[$t.format.BlendMode[e.blendMode]],rotationMode:et.RotationMode[e.rotationMode]},{randomize:e.randomizeFill,size:{width:e.fillWidth,height:e.fillHeight}})}encodeView(e){return $t.format.View.create({name:e.name,tree:this.encodeNodeTree(e)})}decodeView(e,t,i){let r=e.tree.first;if(!t.views[e.name]||t.views[e.name].tree.id!=e.tree[0].id){let s=r.type==$t.format.NodeType.STROKE_GROUP?Gt.Type.STROKE:Gt.Type.SENSOR_DATA,n=t.createView(e.name,s,r.id,i);this.decodeNodeTree(n,e.tree.slice(1))}}encodeNodeTree(e){let t=[];return t.push(this.encodeNode(e.type,e.tree,0)),this.addChildren(t,e,e.tree.children,1),t}addChildren(e,t,i,r){i.forEach((i=>{let s=i instanceof Bt?(t.model||t).content.indexOf(i.content):void 0;e.push(this.encodeNode(t.type,i,r,s)),i instanceof Ft&&this.addChildren(e,t,i.children,r+1)}))}encodeNode(e,t,i,r){let s=e.name;t instanceof Ft&&(s+="_GROUP");let n=t.interval||{};return $t.format.Node.create({id:t.id,type:$t.format.NodeType[s],depth:i,index:r,groupBoundingBox:t.bounds,chunkFromIndex:n.fromIndex,chunkToIndex:n.toIndex})}decodeNodeTree(e,t,i){let r=e.tree,s=0;i||(i=(e.type==Gt.Type.STROKE?this.structure.inkData.strokes:this.structure.inputData.sensorData).map((t=>e.model.getItem(t.id))));for(let n of t){for(;s>=n.depth;)r=r.parent,s--;if(n.type==$t.format.NodeType.STROKE_GROUP||n.type==$t.format.NodeType.SENSOR_DATA_GROUP)r=r.appendChild(e.createGroup(n.id)),n.groupBoundingBox&&(r.bounds=new S(n.groupBoundingBox.x,n.groupBoundingBox.y,n.groupBoundingBox.width,n.groupBoundingBox.height));else{let t;if(n.chunkToIndex>n.chunkFromIndex){let r={fromIndex:n.chunkFromIndex,toIndex:n.chunkToIndex,fromTValue:0,toTValue:1};t=e.createElement(i[n.index],r)}else t=e.createElement(i[n.index]);t.id=n.id,r=r.appendChild(t)}s=n.depth}}encodeProperties(e){return Object.keys(e).map((t=>$t.format.Property.create({name:t,value:e[t]})))}decodeProperties(e,t={}){return e.forEach((e=>t[e.name]=e.value)),t}encodeKnowledgeGraph(e){if(!e)return;let t=$t.format.TripleStore.create({statements:e.statements.map((e=>$t.format.SemanticTriple.create({subject:e.subject,predicate:e.predicate,object:e.object})))});return this.structure?t:$t.encode(t)}decodeKnowledgeGraph(e){if(!e)return;let t=new Dt,i=this.structure?e:$t.format.TripleStore.decode(e);return i&&i.statements.forEach((e=>t.addTriple(e.subject,e.predicate,e.object))),t}encodeMat4(e){if(e)return $t.format.Matrix4.create({m00:e.m11,m01:e.m12,m02:e.m13,m03:e.m14,m10:e.m21,m11:e.m22,m12:e.m23,m13:e.m24,m20:e.m31,m21:e.m32,m22:e.m33,m23:e.m34,m30:e.m41,m31:e.m42,m32:e.m43,m33:e.m44})}decodeMat4(e){if(e)return w.fromMatrix([e.m00,e.m01,e.m02,e.m03,e.m10,e.m11,e.m12,e.m13,e.m20,e.m21,e.m22,e.m23,e.m30,e.m31,e.m32,e.m33])}async encodeTool(e,t={},i={},r=Je.SOURCE_OVER){let s=$t.format.Tool.create({vectorBrush:e instanceof ee?this.encodeBrush2D(e):void 0,rasterBrush:e instanceof et?await this.encodeBrushGL(e):void 0,context:$t.format.PathPointContext.create({statics:this.encodePathPointProperties(i),dynamics:this.encodePathPointSettings(t)})});if(r!=Je.SOURCE_OVER){let e=r.replace(/-/g,"_").toUpperCase();s.blendMode=$t.format.BlendMode[e]}return $t.encode(s)}decodeTool(e){if(!e)return;e instanceof ArrayBuffer&&(e=new Uint8Array(e));let t=$t.format.Tool.decode(e);return{brush:"vectorBrush"==t.brush?this.decodeBrush2D(t.vectorBrush):this.decodeBrushGL(t.rasterBrush),blendMode:Je[$t.format.BlendMode[t.blendMode]],statics:this.decodePathPointProperties(t.context.statics),dynamics:this.decodePathPointSettings(t.context.dynamics)}}encodePathPointProperties(e){let t=$t.format.PathPointProperties.create();for(let i in $t.format.PathPointProperties.fields){let r=e[i];isFinite(r)&&("red"!=i&&"green"!=i&&"blue"!=i||(r/=255),t[i]=$t.format.Float32.create({value:r}))}return t}decodePathPointProperties(e){if(!e)return;let t={};for(let i in $t.format.PathPointProperties.fields){let r=e[i];if(r){let e=r.value;"red"!=i&&"green"!=i&&"blue"!=i||(e=Math.round(255*e)),t[i]=e}}return t}encodePathPointSettings(e){let t=$t.format.PathPointSettings.create();for(let i in $t.format.PathPointSettings.fields)e[i]&&!e[i].disabled&&(t[i]=this.encodePropertySettings(i,e[i]));return t}decodePathPointSettings(e){if(!e)return;let t={};for(let i in $t.format.PathPointSettings.fields)e[i]&&(t[i]=this.decodePropertySettings(e[i]));return t}encodePropertySettings(e,t){let i=t=>{if(t)return $t.format.Range.create({min:t.min,max:t.max,remapURI:this.getActionDescriptorName(e,"Remap",t.remap)})};return $t.format.PropertySettings.create({value:i(t.value),velocity:i(t.velocity),pressure:i(t.pressure),altitude:i(t.altitude),radiusX:i(t.radiusX),radiusY:i(t.radiusY),resolveURI:this.getActionDescriptorName(e,"Resolve",t.resolve),dependencies:(t.dependencies||[]).map((e=>$t.format.InputPropertyType[e.name]))})}getActionDescriptorName(e,t,i){if(i){if("function"==typeof i)throw new Error(`Encode '${e}' property failed. ${t} action name property is required. Please provide ActionDescriptor for it's definition.`);if("string"==typeof i)return i;if(i.name)return i.name;throw new Error(`Encode '${e}' property failed. ${t} action name property is required. Please provide ActionDescriptor for it's definition.`)}}decodePropertySettings(e){let t={},i=(e,i)=>{i&&(t[e]={min:i.min,max:i.max,remap:i.remapURI})};return i("value",e.value),i("velocity",e.velocity),i("pressure",e.pressure),i("altitude",e.altitude),i("radiusX",e.radiusX),i("radiusY",e.radiusY),t.resolve=e.resolveURI,e.dependencies.length>0&&(t.dependencies=e.dependencies.map((e=>B.Type[$t.format.InputPropertyType[e]]))),t}}class Vt{constructor(e=Vt.Mode.WHOLE_STROKE){this.mode=e,this.segmentInterpolator=new Se(1,!1,!0),this.convexHullChainProducer=new Xe,this.holesBuilder=new Re}updateSegmentation(e){if(!this.context)throw new Error("Required spatial context not found");let t=[],i=!1;for(let r of e){if(0==r.length)continue;let s=S.ofPolygon(r),n=this.context.search(s);if(n.length>0){let o=[];for(let e of n)if(0==e.depth){let t=this.context.getStroke(e.strokeID),r=this.buildStrokeSegments(t);this.context.updateTree(e,r),o=o.concat(r),i=!0}else if(1==e.depth){let t=[],r=this.segmentInterpolator.split(e.spline),s=this.context.getBrushApplier(e.strokeID).get(r);for(let i=0;i<r.length-1;i++){let n=[s[i],s[i+1]];t.push({strokeID:e.strokeID,segmentIndex:e.segmentIndex,splineIndex:i,bounds:S.ofPolygons(n),point:r.getPoint(i),spline:new ve(e.spline.layout,e.spline.points,e.spline.pointProps,r.getPointT(i),r.getPointT(i+1)),shapesPath:n,depth:2})}this.context.updateTree(e,t),o=o.concat(t),i=!0}else if(2==e.depth){this.convexHullChainProducer.reset();let t=this.convexHullChainProducer.get(e.shapesPath);e.depth=3,e.hulls=t,this.context.tree.canvas&&this.context.tree.canvas.refresh(),i=!0}else if(3==e.depth){if(ue.intersection(e.hulls,r))if(this.mode==Vt.Mode.PARTIAL_STROKE){let t=[],r=this.segmentInterpolator.get(e.spline),s=this.context.getBrushApplier(e.strokeID).get(r);for(let i=0;i<r.length;i++){let n=S.ofPolygon(s[i]),o=n,a=e.spline,l=r.getPointT(i),h=r.getPointT(i-1),d=r.getPointT(i+1);if(isNaN(h)&&(h=e.spline.ts),isNaN(d)&&(d=e.spline.tf),n.width!=n.height){let e=Math.max(n.width,n.height);n=new S(n.center.x-e/2,n.center.y-e/2,e,e)}t.push({strokeID:e.strokeID,segmentIndex:e.segmentIndex,splineIndex:e.splineIndex,pointIndex:i,bounds:n,point:r.getPoint(i),spline:a,prevT:h,t:l,nextT:d,shape:s[i],shapeBounds:o,depth:4})}this.context.updateTree(e,t),o=o.concat(t),i=!0}else t.push(e)}else S.intersect(s,e.bounds)&&(e.affected=!0),t.push(e);if(o.length>0&&this.context.load(o),i)return this.updateSegmentation(e);this.nodes.push(...t)}}}static buildStrokeNode(e){return{strokeID:e.id,bounds:e.bounds,point:e.getPoint(0),depth:0}}buildStrokeSegments(e){let t=[],i=this.context.getBrushApplier(e.id);for(let r=0;r<e.segmentsCount;r++){let s=Vt.buildStrokeSegment(e,r,i);t.push(s)}return t}static buildStrokeSegment(e,t,i){if(t<0||t>=e.segmentsCount)throw new Error(`Invalid index ${t} found. Ensure that index range is {0, ${e.segmentsCount-1}}.`);const r=.166666666666;let s=e.getSegment(t),n=s.getPoint(0),o=s.getPoint(1),a=s.getPoint(2),l=s.getPoint(3),h=-r*n.x+o.x+r*a.x,d=-r*n.y+o.y+r*a.y,u=+r*o.x+a.x-r*l.x,c=+r*o.y+a.y-r*l.y,p=o.toArray(e.layout).concat(a.toArray(e.layout)),f=new we(e.layout,p,e.pointProps),m=i.get(f),g=S.ofPolygon(m.first),y=S.ofPolygon(m.last),b=Math.max(g.width,y.height),E=Math.max(g.height,y.height),P=Math.max(b,E),x=new S(h-P/2,d-E/2,P,P),v=new S(u-P/2,c-E/2,P,P),w=g.union(y).union(x).union(v);return{strokeID:e.id,segmentIndex:t,bounds:w,point:s.getPoint(0),spline:s,shapesPath:m,depth:1}}createIntervals(e,t){let i={intersected:{},selected:[]};if(0==t.length)return i;let r=this.holesBuilder.build(this.context,e,t);for(let e in r){let s=this.context.getNodes(e),n=[],o=[];i.intersected[e]={intervals:n,holes:o},r[e].forEach(((a,l)=>{let h,d=0==a.fromIndex&&a.fromTValue==s.first.ts,u=a.toIndex==s.last.segmentIndex&&a.toTValue==s.last.tf;if(d&&u)return i.selected.push(e),void delete i.intersected[e];o.push(a),this.context.tree.canvas&&this.context.tree.canvas.addOperation("drawIntersection",t,this.context.getNodes(a.strokeID).slice(a.fromNodeIndex,a.toNodeIndex+1)),d?h={fromIndex:a.toIndex,fromTValue:a.toTValue,fromNodeIndex:a.toNodeIndex}:u?(n.last||n.push({fromIndex:0,fromTValue:s.first.spline.ts,fromNodeIndex:0}),n.last.toIndex=a.fromIndex+3,n.last.toTValue=a.fromTValue,n.last.toNodeIndex=a.fromNodeIndex):n.last?(n.last.toIndex=a.fromIndex+3,n.last.toTValue=a.fromTValue,n.last.toNodeIndex=a.fromNodeIndex,h={fromIndex:a.toIndex,fromTValue:a.toTValue,fromNodeIndex:a.toNodeIndex}):(n.push({fromIndex:0,fromTValue:s.first.spline.ts,toIndex:a.fromIndex+3,toTValue:a.fromTValue,fromNodeIndex:0,toNodeIndex:a.fromNodeIndex}),h={fromIndex:a.toIndex,fromTValue:a.toTValue,fromNodeIndex:a.toNodeIndex}),h&&n.push(h),l!=r[e].length-1||u||(n.last.toIndex=s.last.segmentIndex+3,n.last.toTValue=s.last.spline.tf,n.last.toNodeIndex=s.length-1);let c=[];n.forEach((e=>{if(1==e.fromTValue){let t=s.filter((t=>t.segmentIndex==e.fromIndex+1)).first,i=s.filter((t=>t.segmentIndex==e.fromIndex));o.push({fromNodeIndex:i.first.nodeIndex||s.indexOf(i.first),toNodeIndex:i.last.nodeIndex||s.indexOf(i.last),type:"OVERLAPPING_INC"}),e.fromIndex++,e.fromTValue=0,e.fromNodeIndex=s.indexOf(t)}if(0==e.toTValue){let t=e.toIndex-3,i=s.filter((e=>e.segmentIndex==t-1)).last,r=s.filter((e=>e.segmentIndex==t));o.push({fromNodeIndex:r.first.nodeIndex||s.indexOf(r.first),toNodeIndex:r.last.nodeIndex||s.indexOf(r.last),type:"OVERLAPPING_DEC"}),e.toIndex--,e.toTValue=1,e.toNodeIndex=s.indexOf(i)}if(e.toIndex-e.fromIndex<3)c.push(e);else if(e.toIndex-e.fromIndex==3&&e.fromTValue==e.toTValue){let t=s.filter((t=>t.segmentIndex==e.fromIndex));o.push({fromNodeIndex:t.first.nodeIndex||s.indexOf(t.first),toNodeIndex:t.last.nodeIndex||s.indexOf(t.last),type:"INVALID"}),c.push(e)}})),c.forEach((e=>n.remove(e)))}))}return i}reset(e){if(!e)throw new Error("Required spatial context not found");this.context=e,this.nodes=[],this.context.tree.canvas&&this.context.tree.canvas.refresh()}}Object.defineEnum(Vt,"Mode",["WHOLE_STROKE","PARTIAL_STROKE"]);class Ht extends Vt{constructor(e){super(e)}intersect(e){if(!this.context)throw new Error("Required spatial context not found");return this.nodes=[],this.updateSegmentation(e),this.mode==Ht.Mode.PARTIAL_STROKE?this.createIntervals(this.nodes,e):{intersected:{},selected:this.nodes.map((e=>e.strokeID)).unique()}}intersectSegmentation(e){if(!this.context)throw new Error("Required spatial context not found");return this.createIntervals(this.nodes,e)}}class Zt extends Vt{constructor(e){super(e)}select(e){if(!this.context)throw new Error("Required spatial context not found");if(this.mode==Zt.Mode.PARTIAL_STROKE){let t=e.spline.getPoint(0).toArray(e.layout),i=e.spline.getPoint(e.spline.length-1).toArray(e.layout),r=[...t,...t,...i,...i],s=new ut(e.brush,new ve(e.layout,r,e.pointProps));this.updateSegmentation(s.path)}let t={intersected:{},selected:[]},i=e.bounds,r=ue.createClipperPath(e.spline),s=this.context.search(i),n=this.nodes.map((e=>e.strokeID)).unique(),o=s.map((e=>e.strokeID)).unique().filter((e=>!n.includes(e)));if(this.context.tree.canvas&&this.context.tree.canvas.addOperation("drawSelection",i,e.points,e.path.first),this.mode==Zt.Mode.PARTIAL_STROKE){let i=this.createIntervals(this.nodes,e.path);t=i,n.forEach((e=>{let t=[];i.intersected[e]&&(t=i.intersected[e].intervals),t.forEach((t=>{let i=this.context.getNodes(e)[t.fromNodeIndex];t.inside=ue.containsPoint(r,i.point),this.context.tree.canvas&&this.context.tree.canvas.addOperation("fillPoint",i.point,5,t.inside?m.WHITE:m.BLACK)}))}))}else t.selected=n;return o.forEach((e=>{let i=this.context.getNodes(e)[0];ue.containsPoint(r,i.point)&&t.selected.push(e),this.context.tree.canvas&&this.context.tree.canvas.addOperation("fillPoint",i.point,5,m.WHITE)})),Object.defineProperty(t,"length",{get:()=>Object.keys(t.intersected).length+t.selected.length,enumerable:!0}),this.context.tree.canvas&&this.context.tree.canvas.refresh(),t}}const{PathProducer:qt,Smoother:Wt,SplineProducer:Kt,DistanceBasedInterpolator:Jt,CurvatureBasedInterpolator:Qt,BrushApplier:ei,ConvexHullChainProducer:ti,ConvexHullChainProducerAsync:ii,PolygonMerger:ri,PolygonSimplifier:si}=We,ni=qe;exports.BlendMode=Je,exports.Brush2D=ee,exports.BrushApplier=ei,exports.BrushGL=et,exports.BrushPrototype=W,exports.Color=m,exports.ConvexHullChainProducer=ti,exports.ConvexHullProducer=Le,exports.CurvatureBasedInterpolator=Qt,exports.DistanceBasedInterpolator=Jt,exports.Environment=L,exports.InkBuilder=st,exports.InkBuilderAsync=at,exports.InkCanvas2D=ft,exports.InkCanvasGL=Ot,exports.InkCodec=$t,exports.InkController=s,exports.InkInputProvider=c,exports.InkModel=Gt,exports.InkPath2D=Ne,exports.InputContext=G,exports.InputDevice=X,exports.InputListener=D,exports.InterpolatedSpline=we,exports.Intersector=Ht,exports.Matrix=w,exports.OffscreenCanvasGL=gt,exports.PathPoint=I,exports.PathPointContext=te,exports.PathProducer=qt,exports.PathSegment=De,exports.Pipeline=We,exports.PipelineStage=ni,exports.Point=f,exports.PointerData=Ce,exports.Poly=ue,exports.PolygonMerger=ri,exports.PolygonSimplifier=si,exports.Rect=S,exports.Scalar=_,exports.Selector=Zt,exports.SemanticTriple=Ct,exports.SensorChannel=B,exports.SensorChannelsContext=U,exports.SensorContext=j,exports.SensorData=Y,exports.SensorStream=z,exports.ShapeFactory=$,exports.Smoother=Wt,exports.SpatialContext=class{constructor(){this.tree=new xe,this.strokes={},this.brushAppliers={},this.nodes={}}add(e){e.brush instanceof et||(this.strokes[e.id]=e,this.loadStrokeNode(e))}getStroke(e){return this.strokes[e]}getBrushApplier(e){let t=this.strokes[e].brush;return this.brushAppliers[t.name]||(this.brushAppliers[t.name]=new ze(t)),this.brushAppliers[t.name]}getNodes(e){return this.nodes[e]}loadStrokeNode(e){let t=Vt.buildStrokeNode(e);this.nodes[e.id]=[t],this.load(t)}reload(e){this.unload(this.nodes[e.id]),this.loadStrokeNode(e)}remove(e){let t="string"==typeof e?e:e.id;this.unload(this.nodes[t]),delete this.nodes[t],delete this.strokes[t]}update(e,t){let i={intersected:[],selected:[],dirtyArea:void 0};return Object.keys(e).forEach((r=>{let s=this.strokes[r],n=this.split(s,e[r]);n&&(i.intersected.push({stroke:s,strokes:n}),t||(i.dirtyArea=s.bounds.union(i.dirtyArea)),e[r].intervals.forEach(((e,t)=>{e.inside&&i.selected.push(n[t])})))})),i}split(e,t){let{intervals:i,holes:r}=t;if(0==i.length)return[];let s=e.split(i);if(!s)return;s.forEach((e=>{this.strokes[e.id]=e}));let n=[],o=[];return i.map((t=>this.nodes[e.id].slice(t.fromNodeIndex,t.toNodeIndex+1))).forEach(((t,r)=>{let a,l,h=s[r],d=this.getBrushApplier(h.id),u=i[r].fromIndex,c=i[r].toIndex-3;if(h.ts!=t.first.spline.ts){let i=t.first.segmentIndex,r=this.nodes[e.id].filter((e=>e.segmentIndex==i));t=t.filter((e=>e.segmentIndex!=i)),i>=u&&(a=Vt.buildStrokeSegment(h,i-u,d),n.push(a)),o.push(...r)}if(t.length>0&&h.tf!=t.last.spline.tf){let i=t.last.segmentIndex,r=this.nodes[e.id].filter((e=>e.segmentIndex==i));t=t.filter((e=>e.segmentIndex!=i)),i<=c&&(l=Vt.buildStrokeSegment(h,i-u,d),n.push(l)),o.push(...r)}t.forEach((e=>{e.strokeID=h.id,e.segmentIndex-=u})),a&&t.unshift(a),l&&t.push(l),this.nodes[h.id]=t})),r.forEach((t=>o.push(...this.nodes[e.id].slice(t.fromNodeIndex,t.toNodeIndex+1)))),this.unload(o),this.load(n),delete this.nodes[e.id],delete this.strokes[e.id],s}replace(e,t){t.forEach((e=>this.add(e))),this.remove(e)}load(e){Array.isArray(e)||(e=[e]),0!=e.length&&(this.tree.load(e),this.tree.canvas&&this.tree.canvas.refresh())}updateTree(e,t){this.tree.remove(e),this.nodes[e.strokeID].replace(e,t)}unload(e){Array.isArray(e)||(e=[e]),e.forEach((e=>this.tree.remove(e))),this.tree.canvas&&this.tree.canvas.refresh()}search(e){return this.tree.search(e)}reset(){this.strokes={},this.brushAppliers={},this.nodes={},this.tree.clear(),this.tree.canvas&&this.tree.canvas.refresh()}},exports.Spline=ve,exports.SplineProducer=Kt,exports.Stroke=ut,exports.StrokeRenderer2D=class{constructor(e,t){this.canvas=e,this.layer=t||e.createLayer(),this.preliminaryLayer=void 0,this.ownLayer=!t,this.restart=!0,this.brush=void 0,this.color=void 0,this.backgroundColor=m.TRANSPERENT,this.blendMode=Je.SOURCE_OVER,this.transform=void 0,this.strokeBounds=void 0,this.updatedArea=void 0,Object.defineProperty(this,"settings",{get:()=>({brush:this.brush,color:this.color,backgroundColor:this.backgroundColor,blendMode:this.blendMode,transform:this.transform}),enumerable:!0})}configure(e){e.brush&&(this.brush=e.brush),e.color&&(this.color=e.color),e.backgroundColor&&(this.backgroundColor=e.backgroundColor),e.blendMode&&(this.blendMode=e.blendMode),"transform"in e&&this.setTransform(e.transform),this.restart=!0}setTransform(e){this.transform=e,this.layer.setTransform(e),this.preliminaryLayer&&this.preliminaryLayer.setTransform(e)}draw(e,t=!1){if(e instanceof ut){let t=e,i=Je.SOURCE_OVER;if(!(t.brush instanceof ee))throw new Error("Incompatible brush found. It should be Brush2D instance.");if(t.renderMode&&(i=ut.RenderMode.getBlendMode(t.renderMode),!i))return void console.warn(`Cannot process ${t.renderMode} render mode. Requres custom processing.`);this.color=t.color,this.blendMode=t.style.blendMode||i,this.reset(),t.target=ut.Target["2D"];let r=this.layer.draw(t);this.strokeBounds=r,this.updatedArea=r,this.restart=!0}else{if(!this.color)throw new Error("StrokeRenderer requires 'color' to be configured");if(this.restart&&this.reset(),this.validate(e)){let t=this.layer.drawStroke(this.brush,e,this.color,e.matrix);t&&(this.incompleteStrokeBounds=t.union(this.incompleteStrokeBounds),this.strokeBounds=t.union(this.strokeBounds),this.updatedArea=this.incompleteStrokeBounds.union(this.preliminaryDirtyArea))}else this.updatedArea=this.preliminaryDirtyArea;this.blendWithPreliminaryLayer=!1,this.preliminaryDirtyArea=null,t&&(this.restart=!0)}}drawPreliminary(e){if(!this.validate(e))return;let t=null;this.ownLayer?(this.preliminaryLayer||(this.preliminaryLayer=this.canvas.createLayer(),this.preliminaryLayer.setTransform(this.transform)),t=this.preliminaryLayer):t=this.preliminaryLayer||this.canvas,this.updatedArea&&this.preliminaryLayer&&(this.preliminaryLayer.clear(this.updatedArea),this.preliminaryLayer.blend(this.layer,{mode:Je.SOURCE_OVER,rect:this.updatedArea})),this.preliminaryDirtyArea=t.drawStroke(this.brush,e,this.color,e.matrix),this.updatedArea=S.union(this.preliminaryDirtyArea,this.updatedArea),this.preliminaryLayer&&(this.blendWithPreliminaryLayer=!0)}abort(){this.restart=!0}reset(){this.incompleteStrokeBounds=null,this.strokeBounds=null,this.updatedArea=null,this.preliminaryDirtyArea=null,this.ownLayer&&(this.layer.clear(this.backgroundColor),this.preliminaryLayer&&this.preliminaryLayer.clear(this.backgroundColor)),this.color.alpha<1&&(this.alphaLayer?this.alphaLayer.resize(this.layer.width,this.layer.height):this.alphaLayer=this.canvas.createLayer(this.layer.width,this.layer.height)),this.restart=!1}validate(e){return e&&e.length>0}blendUpdatedArea(e){if(!this.updatedArea)return;let t=e||this.canvas,i=this.blendWithPreliminaryLayer?this.preliminaryLayer:this.layer,r=t.bounds.intersect(this.updatedArea);if(r){let e=this.color.alpha;e<1?(this.alphaLayer.clear(),this.alphaLayer.ctx.globalAlpha=1,this.alphaLayer.blend(t,{rect:r}),this.alphaLayer.ctx.globalAlpha=e,this.alphaLayer.blend(i,{mode:this.blendMode,rect:r}),t.clear(r),t.blend(this.alphaLayer,{rect:r})):t.blend(i,{mode:this.blendMode,rect:r})}this.incompleteStrokeBounds=null,this.updatedArea=null}blendStroke(e,t,i){if(!this.strokeBounds)return;i||(i=this.blendMode);let r=this.layer,s=e||this.canvas;if(t=s.bounds.intersect(t||this.strokeBounds)){let e=this.color.alpha;e<1?(this.alphaLayer.clear(),this.alphaLayer.ctx.globalAlpha=e,this.alphaLayer.blend(r,{rect:t}),s.blend(this.alphaLayer,{mode:i,rect:t})):s.blend(r,{mode:i,rect:t})}}toStroke(e,t){if(!this.brush)throw new Error("StrokeRenderer brush is not configured");let i=e.getSensorData(),r=e.getSpline(),s=e.getInkPath(t),n=new ut(this.brush,r,s,i);return i&&(n.sensorDataMapping=i.inkStream.getPipelineMapping()),this.blendMode!=Je.SOURCE_OVER&&(n.renderMode=ut.RenderMode.get(this.blendMode)),n}delete(){console.warn("Not applicable with 2D API")}},exports.StrokeRendererGL=class{constructor(e,t){this.canvas=e;let i=t instanceof Et?t:void 0,r=t&&!i?t:new Object;this.layer=i||e.createLayer(r),this.preliminaryLayer=void 0,this.layerOptions=r,this.ownLayer=!i,this.restart=!0,this.brush=void 0,this.color=void 0,this.backgroundColor=m.TRANSPERENT,this.blendMode=Je.SOURCE_OVER,this.randomSeed=void 0,this.transform=void 0,this.strokeBounds=void 0,this.updatedArea=void 0,this.streamUpdatedArea=void 0,Object.defineProperty(this,"settings",{get:()=>({brush:this.brush,color:this.color,backgroundColor:this.backgroundColor,blendMode:this.blendMode,transform:this.transform,randomSeed:this.initialRandomSeed}),enumerable:!0})}configure(e){e.brush&&(this.brush=e.brush),e.color&&(this.color=e.color),e.backgroundColor&&(this.backgroundColor=e.backgroundColor),e.blendMode&&(this.blendMode=e.blendMode),"transform"in e&&this.setTransform(e.transform),this.brush instanceof et&&isFinite(e.randomSeed)&&(this.initialRandomSeed=e.randomSeed),this.restart=!0}setTransform(e){this.transform=e,this.layer.setTransform(e),this.preliminaryLayer&&this.preliminaryLayer.setTransform(e)}draw(e,t=!1){if(this.layer.isDeleted())throw new Error("StrokeRenderer cannot draw, it is already deleted");if(this.restart&&this.reset(),e instanceof ut){let t,i=e,r=Je.SOURCE_OVER;if(i.renderMode&&(r=ut.RenderMode.getBlendMode(i.renderMode),!r))return void console.warn(`Cannot process ${i.renderMode} render mode. Requres custom processing.`);this.blendMode=i.style.blendMode||r,i.target=ut.Target.GL,this.transform&&!this.transform.isIdentity&&(t=i.path.clone(),i.path.transform(this.transform));let s=this.layer.draw(i);t&&(i.path=t),this.strokeBounds=s,this.updatedArea=s,this.restart=!0}else{if(this.validate(e)){e.color&&this.color&&!e.color.equals(this.color)&&(e.color=this.color),this.transform&&!this.transform.isIdentity&&e.transform(this.transform);let t=this.brush instanceof et?this.strokeLastRendererdDrawContext:this.color,i=this.layer.drawStroke(this.brush,e,t);i&&(this.incompleteStrokeBounds=i.union(this.incompleteStrokeBounds),this.strokeBounds=i.union(this.strokeBounds),this.updatedArea=this.incompleteStrokeBounds.union(this.preliminaryDirtyArea))}else this.updatedArea=this.preliminaryDirtyArea;this.blendWithPreliminaryLayer=!1,this.preliminaryDirtyArea=null,t&&(this.restart=!0)}}drawPreliminary(e){if(!this.validate(e))return;let t=null,i=null;this.brush instanceof et?(this.strokeLastRendererdDrawContext.copyTo(this.strokePrelimLastRenderedDrawContext),t=this.strokePrelimLastRenderedDrawContext):t=this.color,this.ownLayer?(this.preliminaryLayer||(this.preliminaryLayer=this.canvas.createLayer(this.layerOptions),this.preliminaryLayer.setTransform(this.transform)),i=this.preliminaryLayer):i=this.preliminaryLayer||this.canvas,this.updatedArea&&this.preliminaryLayer&&this.preliminaryLayer.blend(this.layer,{mode:Je.COPY,rect:this.updatedArea}),e.color&&this.color&&!e.color.equals(this.color)&&(e.color=this.color),this.transform&&!this.transform.isIdentity&&e.transform(this.transform),this.preliminaryDirtyArea=i.drawStroke(this.brush,e,t),this.updatedArea=S.union(this.preliminaryDirtyArea,this.updatedArea),this.preliminaryLayer&&(this.blendWithPreliminaryLayer=!0)}abort(){this.restart=!0}reset(){this.incompleteStrokeBounds=null,this.strokeBounds=null,this.updatedArea=null,this.preliminaryDirtyArea=null,this.brush instanceof et?(this.strokeLastRendererdDrawContext=new bt(this.initialRandomSeed),this.strokePrelimLastRenderedDrawContext||(this.strokePrelimLastRenderedDrawContext=new bt),delete this.initialRandomSeed,this.randomSeed=this.strokeLastRendererdDrawContext.randomSeed):delete this.randomSeed,this.ownLayer&&(this.layer.clear(this.backgroundColor),this.preliminaryLayer&&this.preliminaryLayer.clear(this.backgroundColor)),this.restart=!1}validate(e){if(!this.brush)throw new Error("StrokeRenderer requires 'brush' to be configured");return e&&e.length>0}blendUpdatedArea(e){if(!this.updatedArea)return;let t=this.blendWithPreliminaryLayer?this.preliminaryLayer:this.layer,i=e||this.canvas,r=i.bounds.intersect(this.updatedArea);r&&("function"==typeof this.streamUpdatedArea?this.streamUpdatedArea(t.getImageData(r,!0),r,!1):i.blend(t,{mode:this.blendMode,rect:r})),this.incompleteStrokeBounds=null,this.updatedArea=null}blendStroke(e,t,i){if(!this.strokeBounds)return;i||(i=this.blendMode);let r=this.layer,s=e||this.canvas;(t=s.bounds.intersect(t||this.strokeBounds))&&("function"==typeof this.streamUpdatedArea?this.streamUpdatedArea(r.getImageData(t,!0),t,!0):s.blend(r,{mode:i,rect:t}))}toStroke(e){let t=e.getSensorData(),i=e.getSpline(),r=e.getInkPath();i.randomSeed=this.randomSeed;let s=new ut(this.brush,i,r,t);return t&&(s.sensorDataMapping=t.inkStream.getPipelineMapping()),this.blendMode!=Je.SOURCE_OVER&&(s.renderMode=ut.RenderMode.get(this.blendMode)),s}delete(){this.ownLayer&&(this.layer.delete(),this.preliminaryLayer&&this.preliminaryLayer.delete())}},exports.TextTable=R,exports.TripleStore=Dt,exports.TypedArrayCodec=Z,exports.URIResolver=H,exports.fsx=Q,exports.math=Oe,exports.utils=O,exports.uuid=d,exports.version="1.3.0";
